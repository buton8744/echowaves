var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7286 = x == null ? null : x;
  if(p[goog.typeOf(x__7286)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7287__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7287 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7287__delegate.call(this, array, i, idxs)
    };
    G__7287.cljs$lang$maxFixedArity = 2;
    G__7287.cljs$lang$applyTo = function(arglist__7288) {
      var array = cljs.core.first(arglist__7288);
      var i = cljs.core.first(cljs.core.next(arglist__7288));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7288));
      return G__7287__delegate(array, i, idxs)
    };
    G__7287.cljs$lang$arity$variadic = G__7287__delegate;
    return G__7287
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto____7373 = this$;
      if(and__3941__auto____7373) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto____7373
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2306__auto____7374 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7375 = cljs.core._invoke[goog.typeOf(x__2306__auto____7374)];
        if(or__3943__auto____7375) {
          return or__3943__auto____7375
        }else {
          var or__3943__auto____7376 = cljs.core._invoke["_"];
          if(or__3943__auto____7376) {
            return or__3943__auto____7376
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto____7377 = this$;
      if(and__3941__auto____7377) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto____7377
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2306__auto____7378 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7379 = cljs.core._invoke[goog.typeOf(x__2306__auto____7378)];
        if(or__3943__auto____7379) {
          return or__3943__auto____7379
        }else {
          var or__3943__auto____7380 = cljs.core._invoke["_"];
          if(or__3943__auto____7380) {
            return or__3943__auto____7380
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto____7381 = this$;
      if(and__3941__auto____7381) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto____7381
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2306__auto____7382 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7383 = cljs.core._invoke[goog.typeOf(x__2306__auto____7382)];
        if(or__3943__auto____7383) {
          return or__3943__auto____7383
        }else {
          var or__3943__auto____7384 = cljs.core._invoke["_"];
          if(or__3943__auto____7384) {
            return or__3943__auto____7384
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto____7385 = this$;
      if(and__3941__auto____7385) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto____7385
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2306__auto____7386 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7387 = cljs.core._invoke[goog.typeOf(x__2306__auto____7386)];
        if(or__3943__auto____7387) {
          return or__3943__auto____7387
        }else {
          var or__3943__auto____7388 = cljs.core._invoke["_"];
          if(or__3943__auto____7388) {
            return or__3943__auto____7388
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto____7389 = this$;
      if(and__3941__auto____7389) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto____7389
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2306__auto____7390 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7391 = cljs.core._invoke[goog.typeOf(x__2306__auto____7390)];
        if(or__3943__auto____7391) {
          return or__3943__auto____7391
        }else {
          var or__3943__auto____7392 = cljs.core._invoke["_"];
          if(or__3943__auto____7392) {
            return or__3943__auto____7392
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto____7393 = this$;
      if(and__3941__auto____7393) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto____7393
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2306__auto____7394 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7395 = cljs.core._invoke[goog.typeOf(x__2306__auto____7394)];
        if(or__3943__auto____7395) {
          return or__3943__auto____7395
        }else {
          var or__3943__auto____7396 = cljs.core._invoke["_"];
          if(or__3943__auto____7396) {
            return or__3943__auto____7396
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto____7397 = this$;
      if(and__3941__auto____7397) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto____7397
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2306__auto____7398 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7399 = cljs.core._invoke[goog.typeOf(x__2306__auto____7398)];
        if(or__3943__auto____7399) {
          return or__3943__auto____7399
        }else {
          var or__3943__auto____7400 = cljs.core._invoke["_"];
          if(or__3943__auto____7400) {
            return or__3943__auto____7400
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto____7401 = this$;
      if(and__3941__auto____7401) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto____7401
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2306__auto____7402 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7403 = cljs.core._invoke[goog.typeOf(x__2306__auto____7402)];
        if(or__3943__auto____7403) {
          return or__3943__auto____7403
        }else {
          var or__3943__auto____7404 = cljs.core._invoke["_"];
          if(or__3943__auto____7404) {
            return or__3943__auto____7404
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto____7405 = this$;
      if(and__3941__auto____7405) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto____7405
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2306__auto____7406 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7407 = cljs.core._invoke[goog.typeOf(x__2306__auto____7406)];
        if(or__3943__auto____7407) {
          return or__3943__auto____7407
        }else {
          var or__3943__auto____7408 = cljs.core._invoke["_"];
          if(or__3943__auto____7408) {
            return or__3943__auto____7408
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto____7409 = this$;
      if(and__3941__auto____7409) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto____7409
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2306__auto____7410 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7411 = cljs.core._invoke[goog.typeOf(x__2306__auto____7410)];
        if(or__3943__auto____7411) {
          return or__3943__auto____7411
        }else {
          var or__3943__auto____7412 = cljs.core._invoke["_"];
          if(or__3943__auto____7412) {
            return or__3943__auto____7412
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto____7413 = this$;
      if(and__3941__auto____7413) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto____7413
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2306__auto____7414 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7415 = cljs.core._invoke[goog.typeOf(x__2306__auto____7414)];
        if(or__3943__auto____7415) {
          return or__3943__auto____7415
        }else {
          var or__3943__auto____7416 = cljs.core._invoke["_"];
          if(or__3943__auto____7416) {
            return or__3943__auto____7416
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto____7417 = this$;
      if(and__3941__auto____7417) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto____7417
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2306__auto____7418 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7419 = cljs.core._invoke[goog.typeOf(x__2306__auto____7418)];
        if(or__3943__auto____7419) {
          return or__3943__auto____7419
        }else {
          var or__3943__auto____7420 = cljs.core._invoke["_"];
          if(or__3943__auto____7420) {
            return or__3943__auto____7420
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto____7421 = this$;
      if(and__3941__auto____7421) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto____7421
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2306__auto____7422 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7423 = cljs.core._invoke[goog.typeOf(x__2306__auto____7422)];
        if(or__3943__auto____7423) {
          return or__3943__auto____7423
        }else {
          var or__3943__auto____7424 = cljs.core._invoke["_"];
          if(or__3943__auto____7424) {
            return or__3943__auto____7424
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto____7425 = this$;
      if(and__3941__auto____7425) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto____7425
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2306__auto____7426 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7427 = cljs.core._invoke[goog.typeOf(x__2306__auto____7426)];
        if(or__3943__auto____7427) {
          return or__3943__auto____7427
        }else {
          var or__3943__auto____7428 = cljs.core._invoke["_"];
          if(or__3943__auto____7428) {
            return or__3943__auto____7428
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto____7429 = this$;
      if(and__3941__auto____7429) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto____7429
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2306__auto____7430 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7431 = cljs.core._invoke[goog.typeOf(x__2306__auto____7430)];
        if(or__3943__auto____7431) {
          return or__3943__auto____7431
        }else {
          var or__3943__auto____7432 = cljs.core._invoke["_"];
          if(or__3943__auto____7432) {
            return or__3943__auto____7432
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto____7433 = this$;
      if(and__3941__auto____7433) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto____7433
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2306__auto____7434 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7435 = cljs.core._invoke[goog.typeOf(x__2306__auto____7434)];
        if(or__3943__auto____7435) {
          return or__3943__auto____7435
        }else {
          var or__3943__auto____7436 = cljs.core._invoke["_"];
          if(or__3943__auto____7436) {
            return or__3943__auto____7436
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto____7437 = this$;
      if(and__3941__auto____7437) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto____7437
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2306__auto____7438 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7439 = cljs.core._invoke[goog.typeOf(x__2306__auto____7438)];
        if(or__3943__auto____7439) {
          return or__3943__auto____7439
        }else {
          var or__3943__auto____7440 = cljs.core._invoke["_"];
          if(or__3943__auto____7440) {
            return or__3943__auto____7440
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto____7441 = this$;
      if(and__3941__auto____7441) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto____7441
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2306__auto____7442 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7443 = cljs.core._invoke[goog.typeOf(x__2306__auto____7442)];
        if(or__3943__auto____7443) {
          return or__3943__auto____7443
        }else {
          var or__3943__auto____7444 = cljs.core._invoke["_"];
          if(or__3943__auto____7444) {
            return or__3943__auto____7444
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto____7445 = this$;
      if(and__3941__auto____7445) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto____7445
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2306__auto____7446 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7447 = cljs.core._invoke[goog.typeOf(x__2306__auto____7446)];
        if(or__3943__auto____7447) {
          return or__3943__auto____7447
        }else {
          var or__3943__auto____7448 = cljs.core._invoke["_"];
          if(or__3943__auto____7448) {
            return or__3943__auto____7448
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto____7449 = this$;
      if(and__3941__auto____7449) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto____7449
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2306__auto____7450 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7451 = cljs.core._invoke[goog.typeOf(x__2306__auto____7450)];
        if(or__3943__auto____7451) {
          return or__3943__auto____7451
        }else {
          var or__3943__auto____7452 = cljs.core._invoke["_"];
          if(or__3943__auto____7452) {
            return or__3943__auto____7452
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto____7453 = this$;
      if(and__3941__auto____7453) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto____7453
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2306__auto____7454 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____7455 = cljs.core._invoke[goog.typeOf(x__2306__auto____7454)];
        if(or__3943__auto____7455) {
          return or__3943__auto____7455
        }else {
          var or__3943__auto____7456 = cljs.core._invoke["_"];
          if(or__3943__auto____7456) {
            return or__3943__auto____7456
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto____7461 = coll;
    if(and__3941__auto____7461) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto____7461
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2306__auto____7462 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7463 = cljs.core._count[goog.typeOf(x__2306__auto____7462)];
      if(or__3943__auto____7463) {
        return or__3943__auto____7463
      }else {
        var or__3943__auto____7464 = cljs.core._count["_"];
        if(or__3943__auto____7464) {
          return or__3943__auto____7464
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto____7469 = coll;
    if(and__3941__auto____7469) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto____7469
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2306__auto____7470 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7471 = cljs.core._empty[goog.typeOf(x__2306__auto____7470)];
      if(or__3943__auto____7471) {
        return or__3943__auto____7471
      }else {
        var or__3943__auto____7472 = cljs.core._empty["_"];
        if(or__3943__auto____7472) {
          return or__3943__auto____7472
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto____7477 = coll;
    if(and__3941__auto____7477) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto____7477
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2306__auto____7478 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7479 = cljs.core._conj[goog.typeOf(x__2306__auto____7478)];
      if(or__3943__auto____7479) {
        return or__3943__auto____7479
      }else {
        var or__3943__auto____7480 = cljs.core._conj["_"];
        if(or__3943__auto____7480) {
          return or__3943__auto____7480
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto____7489 = coll;
      if(and__3941__auto____7489) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto____7489
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2306__auto____7490 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7491 = cljs.core._nth[goog.typeOf(x__2306__auto____7490)];
        if(or__3943__auto____7491) {
          return or__3943__auto____7491
        }else {
          var or__3943__auto____7492 = cljs.core._nth["_"];
          if(or__3943__auto____7492) {
            return or__3943__auto____7492
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto____7493 = coll;
      if(and__3941__auto____7493) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto____7493
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2306__auto____7494 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7495 = cljs.core._nth[goog.typeOf(x__2306__auto____7494)];
        if(or__3943__auto____7495) {
          return or__3943__auto____7495
        }else {
          var or__3943__auto____7496 = cljs.core._nth["_"];
          if(or__3943__auto____7496) {
            return or__3943__auto____7496
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto____7501 = coll;
    if(and__3941__auto____7501) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto____7501
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2306__auto____7502 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7503 = cljs.core._first[goog.typeOf(x__2306__auto____7502)];
      if(or__3943__auto____7503) {
        return or__3943__auto____7503
      }else {
        var or__3943__auto____7504 = cljs.core._first["_"];
        if(or__3943__auto____7504) {
          return or__3943__auto____7504
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto____7509 = coll;
    if(and__3941__auto____7509) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto____7509
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2306__auto____7510 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7511 = cljs.core._rest[goog.typeOf(x__2306__auto____7510)];
      if(or__3943__auto____7511) {
        return or__3943__auto____7511
      }else {
        var or__3943__auto____7512 = cljs.core._rest["_"];
        if(or__3943__auto____7512) {
          return or__3943__auto____7512
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto____7517 = coll;
    if(and__3941__auto____7517) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto____7517
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2306__auto____7518 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7519 = cljs.core._next[goog.typeOf(x__2306__auto____7518)];
      if(or__3943__auto____7519) {
        return or__3943__auto____7519
      }else {
        var or__3943__auto____7520 = cljs.core._next["_"];
        if(or__3943__auto____7520) {
          return or__3943__auto____7520
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto____7529 = o;
      if(and__3941__auto____7529) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto____7529
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2306__auto____7530 = o == null ? null : o;
      return function() {
        var or__3943__auto____7531 = cljs.core._lookup[goog.typeOf(x__2306__auto____7530)];
        if(or__3943__auto____7531) {
          return or__3943__auto____7531
        }else {
          var or__3943__auto____7532 = cljs.core._lookup["_"];
          if(or__3943__auto____7532) {
            return or__3943__auto____7532
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto____7533 = o;
      if(and__3941__auto____7533) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto____7533
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2306__auto____7534 = o == null ? null : o;
      return function() {
        var or__3943__auto____7535 = cljs.core._lookup[goog.typeOf(x__2306__auto____7534)];
        if(or__3943__auto____7535) {
          return or__3943__auto____7535
        }else {
          var or__3943__auto____7536 = cljs.core._lookup["_"];
          if(or__3943__auto____7536) {
            return or__3943__auto____7536
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto____7541 = coll;
    if(and__3941__auto____7541) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto____7541
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2306__auto____7542 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7543 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2306__auto____7542)];
      if(or__3943__auto____7543) {
        return or__3943__auto____7543
      }else {
        var or__3943__auto____7544 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____7544) {
          return or__3943__auto____7544
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto____7549 = coll;
    if(and__3941__auto____7549) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto____7549
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2306__auto____7550 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7551 = cljs.core._assoc[goog.typeOf(x__2306__auto____7550)];
      if(or__3943__auto____7551) {
        return or__3943__auto____7551
      }else {
        var or__3943__auto____7552 = cljs.core._assoc["_"];
        if(or__3943__auto____7552) {
          return or__3943__auto____7552
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto____7557 = coll;
    if(and__3941__auto____7557) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto____7557
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2306__auto____7558 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7559 = cljs.core._dissoc[goog.typeOf(x__2306__auto____7558)];
      if(or__3943__auto____7559) {
        return or__3943__auto____7559
      }else {
        var or__3943__auto____7560 = cljs.core._dissoc["_"];
        if(or__3943__auto____7560) {
          return or__3943__auto____7560
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto____7565 = coll;
    if(and__3941__auto____7565) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto____7565
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2306__auto____7566 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7567 = cljs.core._key[goog.typeOf(x__2306__auto____7566)];
      if(or__3943__auto____7567) {
        return or__3943__auto____7567
      }else {
        var or__3943__auto____7568 = cljs.core._key["_"];
        if(or__3943__auto____7568) {
          return or__3943__auto____7568
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto____7573 = coll;
    if(and__3941__auto____7573) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto____7573
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2306__auto____7574 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7575 = cljs.core._val[goog.typeOf(x__2306__auto____7574)];
      if(or__3943__auto____7575) {
        return or__3943__auto____7575
      }else {
        var or__3943__auto____7576 = cljs.core._val["_"];
        if(or__3943__auto____7576) {
          return or__3943__auto____7576
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto____7581 = coll;
    if(and__3941__auto____7581) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto____7581
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2306__auto____7582 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7583 = cljs.core._disjoin[goog.typeOf(x__2306__auto____7582)];
      if(or__3943__auto____7583) {
        return or__3943__auto____7583
      }else {
        var or__3943__auto____7584 = cljs.core._disjoin["_"];
        if(or__3943__auto____7584) {
          return or__3943__auto____7584
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto____7589 = coll;
    if(and__3941__auto____7589) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto____7589
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2306__auto____7590 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7591 = cljs.core._peek[goog.typeOf(x__2306__auto____7590)];
      if(or__3943__auto____7591) {
        return or__3943__auto____7591
      }else {
        var or__3943__auto____7592 = cljs.core._peek["_"];
        if(or__3943__auto____7592) {
          return or__3943__auto____7592
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto____7597 = coll;
    if(and__3941__auto____7597) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto____7597
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2306__auto____7598 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7599 = cljs.core._pop[goog.typeOf(x__2306__auto____7598)];
      if(or__3943__auto____7599) {
        return or__3943__auto____7599
      }else {
        var or__3943__auto____7600 = cljs.core._pop["_"];
        if(or__3943__auto____7600) {
          return or__3943__auto____7600
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto____7605 = coll;
    if(and__3941__auto____7605) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto____7605
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2306__auto____7606 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7607 = cljs.core._assoc_n[goog.typeOf(x__2306__auto____7606)];
      if(or__3943__auto____7607) {
        return or__3943__auto____7607
      }else {
        var or__3943__auto____7608 = cljs.core._assoc_n["_"];
        if(or__3943__auto____7608) {
          return or__3943__auto____7608
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto____7613 = o;
    if(and__3941__auto____7613) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto____7613
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2306__auto____7614 = o == null ? null : o;
    return function() {
      var or__3943__auto____7615 = cljs.core._deref[goog.typeOf(x__2306__auto____7614)];
      if(or__3943__auto____7615) {
        return or__3943__auto____7615
      }else {
        var or__3943__auto____7616 = cljs.core._deref["_"];
        if(or__3943__auto____7616) {
          return or__3943__auto____7616
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto____7621 = o;
    if(and__3941__auto____7621) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto____7621
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2306__auto____7622 = o == null ? null : o;
    return function() {
      var or__3943__auto____7623 = cljs.core._deref_with_timeout[goog.typeOf(x__2306__auto____7622)];
      if(or__3943__auto____7623) {
        return or__3943__auto____7623
      }else {
        var or__3943__auto____7624 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____7624) {
          return or__3943__auto____7624
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto____7629 = o;
    if(and__3941__auto____7629) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto____7629
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2306__auto____7630 = o == null ? null : o;
    return function() {
      var or__3943__auto____7631 = cljs.core._meta[goog.typeOf(x__2306__auto____7630)];
      if(or__3943__auto____7631) {
        return or__3943__auto____7631
      }else {
        var or__3943__auto____7632 = cljs.core._meta["_"];
        if(or__3943__auto____7632) {
          return or__3943__auto____7632
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto____7637 = o;
    if(and__3941__auto____7637) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto____7637
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2306__auto____7638 = o == null ? null : o;
    return function() {
      var or__3943__auto____7639 = cljs.core._with_meta[goog.typeOf(x__2306__auto____7638)];
      if(or__3943__auto____7639) {
        return or__3943__auto____7639
      }else {
        var or__3943__auto____7640 = cljs.core._with_meta["_"];
        if(or__3943__auto____7640) {
          return or__3943__auto____7640
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto____7649 = coll;
      if(and__3941__auto____7649) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto____7649
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2306__auto____7650 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7651 = cljs.core._reduce[goog.typeOf(x__2306__auto____7650)];
        if(or__3943__auto____7651) {
          return or__3943__auto____7651
        }else {
          var or__3943__auto____7652 = cljs.core._reduce["_"];
          if(or__3943__auto____7652) {
            return or__3943__auto____7652
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto____7653 = coll;
      if(and__3941__auto____7653) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto____7653
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2306__auto____7654 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____7655 = cljs.core._reduce[goog.typeOf(x__2306__auto____7654)];
        if(or__3943__auto____7655) {
          return or__3943__auto____7655
        }else {
          var or__3943__auto____7656 = cljs.core._reduce["_"];
          if(or__3943__auto____7656) {
            return or__3943__auto____7656
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto____7661 = coll;
    if(and__3941__auto____7661) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto____7661
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2306__auto____7662 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7663 = cljs.core._kv_reduce[goog.typeOf(x__2306__auto____7662)];
      if(or__3943__auto____7663) {
        return or__3943__auto____7663
      }else {
        var or__3943__auto____7664 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____7664) {
          return or__3943__auto____7664
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto____7669 = o;
    if(and__3941__auto____7669) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto____7669
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2306__auto____7670 = o == null ? null : o;
    return function() {
      var or__3943__auto____7671 = cljs.core._equiv[goog.typeOf(x__2306__auto____7670)];
      if(or__3943__auto____7671) {
        return or__3943__auto____7671
      }else {
        var or__3943__auto____7672 = cljs.core._equiv["_"];
        if(or__3943__auto____7672) {
          return or__3943__auto____7672
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto____7677 = o;
    if(and__3941__auto____7677) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto____7677
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2306__auto____7678 = o == null ? null : o;
    return function() {
      var or__3943__auto____7679 = cljs.core._hash[goog.typeOf(x__2306__auto____7678)];
      if(or__3943__auto____7679) {
        return or__3943__auto____7679
      }else {
        var or__3943__auto____7680 = cljs.core._hash["_"];
        if(or__3943__auto____7680) {
          return or__3943__auto____7680
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto____7685 = o;
    if(and__3941__auto____7685) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto____7685
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2306__auto____7686 = o == null ? null : o;
    return function() {
      var or__3943__auto____7687 = cljs.core._seq[goog.typeOf(x__2306__auto____7686)];
      if(or__3943__auto____7687) {
        return or__3943__auto____7687
      }else {
        var or__3943__auto____7688 = cljs.core._seq["_"];
        if(or__3943__auto____7688) {
          return or__3943__auto____7688
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto____7693 = coll;
    if(and__3941__auto____7693) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto____7693
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2306__auto____7694 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7695 = cljs.core._rseq[goog.typeOf(x__2306__auto____7694)];
      if(or__3943__auto____7695) {
        return or__3943__auto____7695
      }else {
        var or__3943__auto____7696 = cljs.core._rseq["_"];
        if(or__3943__auto____7696) {
          return or__3943__auto____7696
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____7701 = coll;
    if(and__3941__auto____7701) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto____7701
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2306__auto____7702 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7703 = cljs.core._sorted_seq[goog.typeOf(x__2306__auto____7702)];
      if(or__3943__auto____7703) {
        return or__3943__auto____7703
      }else {
        var or__3943__auto____7704 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____7704) {
          return or__3943__auto____7704
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____7709 = coll;
    if(and__3941__auto____7709) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto____7709
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2306__auto____7710 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7711 = cljs.core._sorted_seq_from[goog.typeOf(x__2306__auto____7710)];
      if(or__3943__auto____7711) {
        return or__3943__auto____7711
      }else {
        var or__3943__auto____7712 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____7712) {
          return or__3943__auto____7712
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto____7717 = coll;
    if(and__3941__auto____7717) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto____7717
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2306__auto____7718 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7719 = cljs.core._entry_key[goog.typeOf(x__2306__auto____7718)];
      if(or__3943__auto____7719) {
        return or__3943__auto____7719
      }else {
        var or__3943__auto____7720 = cljs.core._entry_key["_"];
        if(or__3943__auto____7720) {
          return or__3943__auto____7720
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto____7725 = coll;
    if(and__3941__auto____7725) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto____7725
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2306__auto____7726 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7727 = cljs.core._comparator[goog.typeOf(x__2306__auto____7726)];
      if(or__3943__auto____7727) {
        return or__3943__auto____7727
      }else {
        var or__3943__auto____7728 = cljs.core._comparator["_"];
        if(or__3943__auto____7728) {
          return or__3943__auto____7728
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3941__auto____7733 = o;
    if(and__3941__auto____7733) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3941__auto____7733
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2306__auto____7734 = o == null ? null : o;
    return function() {
      var or__3943__auto____7735 = cljs.core._pr_seq[goog.typeOf(x__2306__auto____7734)];
      if(or__3943__auto____7735) {
        return or__3943__auto____7735
      }else {
        var or__3943__auto____7736 = cljs.core._pr_seq["_"];
        if(or__3943__auto____7736) {
          return or__3943__auto____7736
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto____7741 = d;
    if(and__3941__auto____7741) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto____7741
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2306__auto____7742 = d == null ? null : d;
    return function() {
      var or__3943__auto____7743 = cljs.core._realized_QMARK_[goog.typeOf(x__2306__auto____7742)];
      if(or__3943__auto____7743) {
        return or__3943__auto____7743
      }else {
        var or__3943__auto____7744 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____7744) {
          return or__3943__auto____7744
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto____7749 = this$;
    if(and__3941__auto____7749) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto____7749
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2306__auto____7750 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____7751 = cljs.core._notify_watches[goog.typeOf(x__2306__auto____7750)];
      if(or__3943__auto____7751) {
        return or__3943__auto____7751
      }else {
        var or__3943__auto____7752 = cljs.core._notify_watches["_"];
        if(or__3943__auto____7752) {
          return or__3943__auto____7752
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto____7757 = this$;
    if(and__3941__auto____7757) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto____7757
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2306__auto____7758 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____7759 = cljs.core._add_watch[goog.typeOf(x__2306__auto____7758)];
      if(or__3943__auto____7759) {
        return or__3943__auto____7759
      }else {
        var or__3943__auto____7760 = cljs.core._add_watch["_"];
        if(or__3943__auto____7760) {
          return or__3943__auto____7760
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto____7765 = this$;
    if(and__3941__auto____7765) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto____7765
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2306__auto____7766 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____7767 = cljs.core._remove_watch[goog.typeOf(x__2306__auto____7766)];
      if(or__3943__auto____7767) {
        return or__3943__auto____7767
      }else {
        var or__3943__auto____7768 = cljs.core._remove_watch["_"];
        if(or__3943__auto____7768) {
          return or__3943__auto____7768
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto____7773 = coll;
    if(and__3941__auto____7773) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto____7773
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2306__auto____7774 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7775 = cljs.core._as_transient[goog.typeOf(x__2306__auto____7774)];
      if(or__3943__auto____7775) {
        return or__3943__auto____7775
      }else {
        var or__3943__auto____7776 = cljs.core._as_transient["_"];
        if(or__3943__auto____7776) {
          return or__3943__auto____7776
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto____7781 = tcoll;
    if(and__3941__auto____7781) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto____7781
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2306__auto____7782 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7783 = cljs.core._conj_BANG_[goog.typeOf(x__2306__auto____7782)];
      if(or__3943__auto____7783) {
        return or__3943__auto____7783
      }else {
        var or__3943__auto____7784 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____7784) {
          return or__3943__auto____7784
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____7789 = tcoll;
    if(and__3941__auto____7789) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto____7789
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2306__auto____7790 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7791 = cljs.core._persistent_BANG_[goog.typeOf(x__2306__auto____7790)];
      if(or__3943__auto____7791) {
        return or__3943__auto____7791
      }else {
        var or__3943__auto____7792 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____7792) {
          return or__3943__auto____7792
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto____7797 = tcoll;
    if(and__3941__auto____7797) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto____7797
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2306__auto____7798 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7799 = cljs.core._assoc_BANG_[goog.typeOf(x__2306__auto____7798)];
      if(or__3943__auto____7799) {
        return or__3943__auto____7799
      }else {
        var or__3943__auto____7800 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____7800) {
          return or__3943__auto____7800
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto____7805 = tcoll;
    if(and__3941__auto____7805) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto____7805
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2306__auto____7806 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7807 = cljs.core._dissoc_BANG_[goog.typeOf(x__2306__auto____7806)];
      if(or__3943__auto____7807) {
        return or__3943__auto____7807
      }else {
        var or__3943__auto____7808 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____7808) {
          return or__3943__auto____7808
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto____7813 = tcoll;
    if(and__3941__auto____7813) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto____7813
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2306__auto____7814 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7815 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2306__auto____7814)];
      if(or__3943__auto____7815) {
        return or__3943__auto____7815
      }else {
        var or__3943__auto____7816 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____7816) {
          return or__3943__auto____7816
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____7821 = tcoll;
    if(and__3941__auto____7821) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto____7821
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2306__auto____7822 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7823 = cljs.core._pop_BANG_[goog.typeOf(x__2306__auto____7822)];
      if(or__3943__auto____7823) {
        return or__3943__auto____7823
      }else {
        var or__3943__auto____7824 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____7824) {
          return or__3943__auto____7824
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto____7829 = tcoll;
    if(and__3941__auto____7829) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto____7829
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2306__auto____7830 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____7831 = cljs.core._disjoin_BANG_[goog.typeOf(x__2306__auto____7830)];
      if(or__3943__auto____7831) {
        return or__3943__auto____7831
      }else {
        var or__3943__auto____7832 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____7832) {
          return or__3943__auto____7832
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto____7837 = x;
    if(and__3941__auto____7837) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto____7837
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2306__auto____7838 = x == null ? null : x;
    return function() {
      var or__3943__auto____7839 = cljs.core._compare[goog.typeOf(x__2306__auto____7838)];
      if(or__3943__auto____7839) {
        return or__3943__auto____7839
      }else {
        var or__3943__auto____7840 = cljs.core._compare["_"];
        if(or__3943__auto____7840) {
          return or__3943__auto____7840
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto____7845 = coll;
    if(and__3941__auto____7845) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto____7845
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2306__auto____7846 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7847 = cljs.core._drop_first[goog.typeOf(x__2306__auto____7846)];
      if(or__3943__auto____7847) {
        return or__3943__auto____7847
      }else {
        var or__3943__auto____7848 = cljs.core._drop_first["_"];
        if(or__3943__auto____7848) {
          return or__3943__auto____7848
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto____7853 = coll;
    if(and__3941__auto____7853) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto____7853
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2306__auto____7854 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7855 = cljs.core._chunked_first[goog.typeOf(x__2306__auto____7854)];
      if(or__3943__auto____7855) {
        return or__3943__auto____7855
      }else {
        var or__3943__auto____7856 = cljs.core._chunked_first["_"];
        if(or__3943__auto____7856) {
          return or__3943__auto____7856
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto____7861 = coll;
    if(and__3941__auto____7861) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto____7861
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2306__auto____7862 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7863 = cljs.core._chunked_rest[goog.typeOf(x__2306__auto____7862)];
      if(or__3943__auto____7863) {
        return or__3943__auto____7863
      }else {
        var or__3943__auto____7864 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____7864) {
          return or__3943__auto____7864
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto____7869 = coll;
    if(and__3941__auto____7869) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto____7869
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2306__auto____7870 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____7871 = cljs.core._chunked_next[goog.typeOf(x__2306__auto____7870)];
      if(or__3943__auto____7871) {
        return or__3943__auto____7871
      }else {
        var or__3943__auto____7872 = cljs.core._chunked_next["_"];
        if(or__3943__auto____7872) {
          return or__3943__auto____7872
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto____7874 = x === y;
    if(or__3943__auto____7874) {
      return or__3943__auto____7874
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7875__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7876 = y;
            var G__7877 = cljs.core.first.call(null, more);
            var G__7878 = cljs.core.next.call(null, more);
            x = G__7876;
            y = G__7877;
            more = G__7878;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7875 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7875__delegate.call(this, x, y, more)
    };
    G__7875.cljs$lang$maxFixedArity = 2;
    G__7875.cljs$lang$applyTo = function(arglist__7879) {
      var x = cljs.core.first(arglist__7879);
      var y = cljs.core.first(cljs.core.next(arglist__7879));
      var more = cljs.core.rest(cljs.core.next(arglist__7879));
      return G__7875__delegate(x, y, more)
    };
    G__7875.cljs$lang$arity$variadic = G__7875__delegate;
    return G__7875
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7880 = null;
  var G__7880__2 = function(o, k) {
    return null
  };
  var G__7880__3 = function(o, k, not_found) {
    return not_found
  };
  G__7880 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7880__2.call(this, o, k);
      case 3:
        return G__7880__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7880
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7881 = null;
  var G__7881__2 = function(_, f) {
    return f.call(null)
  };
  var G__7881__3 = function(_, f, start) {
    return start
  };
  G__7881 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7881__2.call(this, _, f);
      case 3:
        return G__7881__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7881
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7882 = null;
  var G__7882__2 = function(_, n) {
    return null
  };
  var G__7882__3 = function(_, n, not_found) {
    return not_found
  };
  G__7882 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7882__2.call(this, _, n);
      case 3:
        return G__7882__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7882
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto____7883 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3941__auto____7883) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto____7883
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7896 = cljs.core._count.call(null, cicoll);
    if(cnt__7896 === 0) {
      return f.call(null)
    }else {
      var val__7897 = cljs.core._nth.call(null, cicoll, 0);
      var n__7898 = 1;
      while(true) {
        if(n__7898 < cnt__7896) {
          var nval__7899 = f.call(null, val__7897, cljs.core._nth.call(null, cicoll, n__7898));
          if(cljs.core.reduced_QMARK_.call(null, nval__7899)) {
            return cljs.core.deref.call(null, nval__7899)
          }else {
            var G__7908 = nval__7899;
            var G__7909 = n__7898 + 1;
            val__7897 = G__7908;
            n__7898 = G__7909;
            continue
          }
        }else {
          return val__7897
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7900 = cljs.core._count.call(null, cicoll);
    var val__7901 = val;
    var n__7902 = 0;
    while(true) {
      if(n__7902 < cnt__7900) {
        var nval__7903 = f.call(null, val__7901, cljs.core._nth.call(null, cicoll, n__7902));
        if(cljs.core.reduced_QMARK_.call(null, nval__7903)) {
          return cljs.core.deref.call(null, nval__7903)
        }else {
          var G__7910 = nval__7903;
          var G__7911 = n__7902 + 1;
          val__7901 = G__7910;
          n__7902 = G__7911;
          continue
        }
      }else {
        return val__7901
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7904 = cljs.core._count.call(null, cicoll);
    var val__7905 = val;
    var n__7906 = idx;
    while(true) {
      if(n__7906 < cnt__7904) {
        var nval__7907 = f.call(null, val__7905, cljs.core._nth.call(null, cicoll, n__7906));
        if(cljs.core.reduced_QMARK_.call(null, nval__7907)) {
          return cljs.core.deref.call(null, nval__7907)
        }else {
          var G__7912 = nval__7907;
          var G__7913 = n__7906 + 1;
          val__7905 = G__7912;
          n__7906 = G__7913;
          continue
        }
      }else {
        return val__7905
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7926 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7927 = arr[0];
      var n__7928 = 1;
      while(true) {
        if(n__7928 < cnt__7926) {
          var nval__7929 = f.call(null, val__7927, arr[n__7928]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7929)) {
            return cljs.core.deref.call(null, nval__7929)
          }else {
            var G__7938 = nval__7929;
            var G__7939 = n__7928 + 1;
            val__7927 = G__7938;
            n__7928 = G__7939;
            continue
          }
        }else {
          return val__7927
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7930 = arr.length;
    var val__7931 = val;
    var n__7932 = 0;
    while(true) {
      if(n__7932 < cnt__7930) {
        var nval__7933 = f.call(null, val__7931, arr[n__7932]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7933)) {
          return cljs.core.deref.call(null, nval__7933)
        }else {
          var G__7940 = nval__7933;
          var G__7941 = n__7932 + 1;
          val__7931 = G__7940;
          n__7932 = G__7941;
          continue
        }
      }else {
        return val__7931
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7934 = arr.length;
    var val__7935 = val;
    var n__7936 = idx;
    while(true) {
      if(n__7936 < cnt__7934) {
        var nval__7937 = f.call(null, val__7935, arr[n__7936]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7937)) {
          return cljs.core.deref.call(null, nval__7937)
        }else {
          var G__7942 = nval__7937;
          var G__7943 = n__7936 + 1;
          val__7935 = G__7942;
          n__7936 = G__7943;
          continue
        }
      }else {
        return val__7935
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7944 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7945 = this;
  if(this__7945.i + 1 < this__7945.a.length) {
    return new cljs.core.IndexedSeq(this__7945.a, this__7945.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7946 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7947 = this;
  var c__7948 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7948 > 0) {
    return new cljs.core.RSeq(coll, c__7948 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7949 = this;
  var this__7950 = this;
  return cljs.core.pr_str.call(null, this__7950)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7951 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7951.a)) {
    return cljs.core.ci_reduce.call(null, this__7951.a, f, this__7951.a[this__7951.i], this__7951.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7951.a[this__7951.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7952 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7952.a)) {
    return cljs.core.ci_reduce.call(null, this__7952.a, f, start, this__7952.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7953 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7954 = this;
  return this__7954.a.length - this__7954.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7955 = this;
  return this__7955.a[this__7955.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7956 = this;
  if(this__7956.i + 1 < this__7956.a.length) {
    return new cljs.core.IndexedSeq(this__7956.a, this__7956.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7957 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7958 = this;
  var i__7959 = n + this__7958.i;
  if(i__7959 < this__7958.a.length) {
    return this__7958.a[i__7959]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7960 = this;
  var i__7961 = n + this__7960.i;
  if(i__7961 < this__7960.a.length) {
    return this__7960.a[i__7961]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__7962 = null;
  var G__7962__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__7962__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__7962 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7962__2.call(this, array, f);
      case 3:
        return G__7962__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7962
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__7963 = null;
  var G__7963__2 = function(array, k) {
    return array[k]
  };
  var G__7963__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__7963 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7963__2.call(this, array, k);
      case 3:
        return G__7963__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7963
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__7964 = null;
  var G__7964__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__7964__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__7964 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7964__2.call(this, array, n);
      case 3:
        return G__7964__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7964
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7965 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7966 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__7967 = this;
  var this__7968 = this;
  return cljs.core.pr_str.call(null, this__7968)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7969 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7970 = this;
  return this__7970.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7971 = this;
  return cljs.core._nth.call(null, this__7971.ci, this__7971.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7972 = this;
  if(this__7972.i > 0) {
    return new cljs.core.RSeq(this__7972.ci, this__7972.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7973 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__7974 = this;
  return new cljs.core.RSeq(this__7974.ci, this__7974.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7975 = this;
  return this__7975.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7979__7980 = coll;
      if(G__7979__7980) {
        if(function() {
          var or__3943__auto____7981 = G__7979__7980.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3943__auto____7981) {
            return or__3943__auto____7981
          }else {
            return G__7979__7980.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__7979__7980.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7979__7980)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7979__7980)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7986__7987 = coll;
      if(G__7986__7987) {
        if(function() {
          var or__3943__auto____7988 = G__7986__7987.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____7988) {
            return or__3943__auto____7988
          }else {
            return G__7986__7987.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7986__7987.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7986__7987)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7986__7987)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__7989 = cljs.core.seq.call(null, coll);
      if(s__7989 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__7989)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__7994__7995 = coll;
      if(G__7994__7995) {
        if(function() {
          var or__3943__auto____7996 = G__7994__7995.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____7996) {
            return or__3943__auto____7996
          }else {
            return G__7994__7995.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7994__7995.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7994__7995)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7994__7995)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__7997 = cljs.core.seq.call(null, coll);
      if(!(s__7997 == null)) {
        return cljs.core._rest.call(null, s__7997)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8001__8002 = coll;
      if(G__8001__8002) {
        if(function() {
          var or__3943__auto____8003 = G__8001__8002.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto____8003) {
            return or__3943__auto____8003
          }else {
            return G__8001__8002.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8001__8002.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8001__8002)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8001__8002)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8005 = cljs.core.next.call(null, s);
    if(!(sn__8005 == null)) {
      var G__8006 = sn__8005;
      s = G__8006;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8007__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8008 = conj.call(null, coll, x);
          var G__8009 = cljs.core.first.call(null, xs);
          var G__8010 = cljs.core.next.call(null, xs);
          coll = G__8008;
          x = G__8009;
          xs = G__8010;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8007 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8007__delegate.call(this, coll, x, xs)
    };
    G__8007.cljs$lang$maxFixedArity = 2;
    G__8007.cljs$lang$applyTo = function(arglist__8011) {
      var coll = cljs.core.first(arglist__8011);
      var x = cljs.core.first(cljs.core.next(arglist__8011));
      var xs = cljs.core.rest(cljs.core.next(arglist__8011));
      return G__8007__delegate(coll, x, xs)
    };
    G__8007.cljs$lang$arity$variadic = G__8007__delegate;
    return G__8007
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8014 = cljs.core.seq.call(null, coll);
  var acc__8015 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8014)) {
      return acc__8015 + cljs.core._count.call(null, s__8014)
    }else {
      var G__8016 = cljs.core.next.call(null, s__8014);
      var G__8017 = acc__8015 + 1;
      s__8014 = G__8016;
      acc__8015 = G__8017;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8024__8025 = coll;
        if(G__8024__8025) {
          if(function() {
            var or__3943__auto____8026 = G__8024__8025.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____8026) {
              return or__3943__auto____8026
            }else {
              return G__8024__8025.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8024__8025.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8024__8025)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8024__8025)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8027__8028 = coll;
        if(G__8027__8028) {
          if(function() {
            var or__3943__auto____8029 = G__8027__8028.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____8029) {
              return or__3943__auto____8029
            }else {
              return G__8027__8028.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8027__8028.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8027__8028)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8027__8028)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8032__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8031 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8033 = ret__8031;
          var G__8034 = cljs.core.first.call(null, kvs);
          var G__8035 = cljs.core.second.call(null, kvs);
          var G__8036 = cljs.core.nnext.call(null, kvs);
          coll = G__8033;
          k = G__8034;
          v = G__8035;
          kvs = G__8036;
          continue
        }else {
          return ret__8031
        }
        break
      }
    };
    var G__8032 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8032__delegate.call(this, coll, k, v, kvs)
    };
    G__8032.cljs$lang$maxFixedArity = 3;
    G__8032.cljs$lang$applyTo = function(arglist__8037) {
      var coll = cljs.core.first(arglist__8037);
      var k = cljs.core.first(cljs.core.next(arglist__8037));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8037)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8037)));
      return G__8032__delegate(coll, k, v, kvs)
    };
    G__8032.cljs$lang$arity$variadic = G__8032__delegate;
    return G__8032
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8040__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8039 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8041 = ret__8039;
          var G__8042 = cljs.core.first.call(null, ks);
          var G__8043 = cljs.core.next.call(null, ks);
          coll = G__8041;
          k = G__8042;
          ks = G__8043;
          continue
        }else {
          return ret__8039
        }
        break
      }
    };
    var G__8040 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8040__delegate.call(this, coll, k, ks)
    };
    G__8040.cljs$lang$maxFixedArity = 2;
    G__8040.cljs$lang$applyTo = function(arglist__8044) {
      var coll = cljs.core.first(arglist__8044);
      var k = cljs.core.first(cljs.core.next(arglist__8044));
      var ks = cljs.core.rest(cljs.core.next(arglist__8044));
      return G__8040__delegate(coll, k, ks)
    };
    G__8040.cljs$lang$arity$variadic = G__8040__delegate;
    return G__8040
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8048__8049 = o;
    if(G__8048__8049) {
      if(function() {
        var or__3943__auto____8050 = G__8048__8049.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto____8050) {
          return or__3943__auto____8050
        }else {
          return G__8048__8049.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8048__8049.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8048__8049)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8048__8049)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8053__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8052 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8054 = ret__8052;
          var G__8055 = cljs.core.first.call(null, ks);
          var G__8056 = cljs.core.next.call(null, ks);
          coll = G__8054;
          k = G__8055;
          ks = G__8056;
          continue
        }else {
          return ret__8052
        }
        break
      }
    };
    var G__8053 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8053__delegate.call(this, coll, k, ks)
    };
    G__8053.cljs$lang$maxFixedArity = 2;
    G__8053.cljs$lang$applyTo = function(arglist__8057) {
      var coll = cljs.core.first(arglist__8057);
      var k = cljs.core.first(cljs.core.next(arglist__8057));
      var ks = cljs.core.rest(cljs.core.next(arglist__8057));
      return G__8053__delegate(coll, k, ks)
    };
    G__8053.cljs$lang$arity$variadic = G__8053__delegate;
    return G__8053
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8059 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8059;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8059
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8061 = cljs.core.string_hash_cache[k];
  if(!(h__8061 == null)) {
    return h__8061
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto____8063 = goog.isString(o);
      if(and__3941__auto____8063) {
        return check_cache
      }else {
        return and__3941__auto____8063
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8067__8068 = x;
    if(G__8067__8068) {
      if(function() {
        var or__3943__auto____8069 = G__8067__8068.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto____8069) {
          return or__3943__auto____8069
        }else {
          return G__8067__8068.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8067__8068.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8067__8068)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8067__8068)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8073__8074 = x;
    if(G__8073__8074) {
      if(function() {
        var or__3943__auto____8075 = G__8073__8074.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto____8075) {
          return or__3943__auto____8075
        }else {
          return G__8073__8074.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8073__8074.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8073__8074)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8073__8074)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8079__8080 = x;
  if(G__8079__8080) {
    if(function() {
      var or__3943__auto____8081 = G__8079__8080.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto____8081) {
        return or__3943__auto____8081
      }else {
        return G__8079__8080.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8079__8080.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8079__8080)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8079__8080)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8085__8086 = x;
  if(G__8085__8086) {
    if(function() {
      var or__3943__auto____8087 = G__8085__8086.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto____8087) {
        return or__3943__auto____8087
      }else {
        return G__8085__8086.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8085__8086.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8085__8086)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8085__8086)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8091__8092 = x;
  if(G__8091__8092) {
    if(function() {
      var or__3943__auto____8093 = G__8091__8092.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto____8093) {
        return or__3943__auto____8093
      }else {
        return G__8091__8092.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8091__8092.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8091__8092)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8091__8092)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8097__8098 = x;
  if(G__8097__8098) {
    if(function() {
      var or__3943__auto____8099 = G__8097__8098.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto____8099) {
        return or__3943__auto____8099
      }else {
        return G__8097__8098.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8097__8098.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8097__8098)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8097__8098)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8103__8104 = x;
  if(G__8103__8104) {
    if(function() {
      var or__3943__auto____8105 = G__8103__8104.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto____8105) {
        return or__3943__auto____8105
      }else {
        return G__8103__8104.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8103__8104.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8103__8104)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8103__8104)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8109__8110 = x;
    if(G__8109__8110) {
      if(function() {
        var or__3943__auto____8111 = G__8109__8110.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto____8111) {
          return or__3943__auto____8111
        }else {
          return G__8109__8110.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8109__8110.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8109__8110)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8109__8110)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8115__8116 = x;
  if(G__8115__8116) {
    if(function() {
      var or__3943__auto____8117 = G__8115__8116.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto____8117) {
        return or__3943__auto____8117
      }else {
        return G__8115__8116.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8115__8116.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8115__8116)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8115__8116)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8121__8122 = x;
  if(G__8121__8122) {
    if(cljs.core.truth_(function() {
      var or__3943__auto____8123 = null;
      if(cljs.core.truth_(or__3943__auto____8123)) {
        return or__3943__auto____8123
      }else {
        return G__8121__8122.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8121__8122.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8121__8122)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8121__8122)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8124__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8124 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8124__delegate.call(this, keyvals)
    };
    G__8124.cljs$lang$maxFixedArity = 0;
    G__8124.cljs$lang$applyTo = function(arglist__8125) {
      var keyvals = cljs.core.seq(arglist__8125);
      return G__8124__delegate(keyvals)
    };
    G__8124.cljs$lang$arity$variadic = G__8124__delegate;
    return G__8124
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8127 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8127.push(key)
  });
  return keys__8127
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8131 = i;
  var j__8132 = j;
  var len__8133 = len;
  while(true) {
    if(len__8133 === 0) {
      return to
    }else {
      to[j__8132] = from[i__8131];
      var G__8134 = i__8131 + 1;
      var G__8135 = j__8132 + 1;
      var G__8136 = len__8133 - 1;
      i__8131 = G__8134;
      j__8132 = G__8135;
      len__8133 = G__8136;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8140 = i + (len - 1);
  var j__8141 = j + (len - 1);
  var len__8142 = len;
  while(true) {
    if(len__8142 === 0) {
      return to
    }else {
      to[j__8141] = from[i__8140];
      var G__8143 = i__8140 - 1;
      var G__8144 = j__8141 - 1;
      var G__8145 = len__8142 - 1;
      i__8140 = G__8143;
      j__8141 = G__8144;
      len__8142 = G__8145;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8149__8150 = s;
    if(G__8149__8150) {
      if(function() {
        var or__3943__auto____8151 = G__8149__8150.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto____8151) {
          return or__3943__auto____8151
        }else {
          return G__8149__8150.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8149__8150.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8149__8150)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8149__8150)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8155__8156 = s;
  if(G__8155__8156) {
    if(function() {
      var or__3943__auto____8157 = G__8155__8156.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto____8157) {
        return or__3943__auto____8157
      }else {
        return G__8155__8156.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8155__8156.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8155__8156)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8155__8156)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto____8160 = goog.isString(x);
  if(and__3941__auto____8160) {
    return!function() {
      var or__3943__auto____8161 = x.charAt(0) === "\ufdd0";
      if(or__3943__auto____8161) {
        return or__3943__auto____8161
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3941__auto____8160
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto____8163 = goog.isString(x);
  if(and__3941__auto____8163) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto____8163
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3941__auto____8165 = goog.isString(x);
  if(and__3941__auto____8165) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3941__auto____8165
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto____8170 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto____8170) {
    return or__3943__auto____8170
  }else {
    var G__8171__8172 = f;
    if(G__8171__8172) {
      if(function() {
        var or__3943__auto____8173 = G__8171__8172.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____8173) {
          return or__3943__auto____8173
        }else {
          return G__8171__8172.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8171__8172.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8171__8172)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8171__8172)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto____8175 = cljs.core.number_QMARK_.call(null, n);
  if(and__3941__auto____8175) {
    return n == n.toFixed()
  }else {
    return and__3941__auto____8175
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3941__auto____8178 = coll;
    if(cljs.core.truth_(and__3941__auto____8178)) {
      var and__3941__auto____8179 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____8179) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____8179
      }
    }else {
      return and__3941__auto____8178
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8188__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8184 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8185 = more;
        while(true) {
          var x__8186 = cljs.core.first.call(null, xs__8185);
          var etc__8187 = cljs.core.next.call(null, xs__8185);
          if(cljs.core.truth_(xs__8185)) {
            if(cljs.core.contains_QMARK_.call(null, s__8184, x__8186)) {
              return false
            }else {
              var G__8189 = cljs.core.conj.call(null, s__8184, x__8186);
              var G__8190 = etc__8187;
              s__8184 = G__8189;
              xs__8185 = G__8190;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8188 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8188__delegate.call(this, x, y, more)
    };
    G__8188.cljs$lang$maxFixedArity = 2;
    G__8188.cljs$lang$applyTo = function(arglist__8191) {
      var x = cljs.core.first(arglist__8191);
      var y = cljs.core.first(cljs.core.next(arglist__8191));
      var more = cljs.core.rest(cljs.core.next(arglist__8191));
      return G__8188__delegate(x, y, more)
    };
    G__8188.cljs$lang$arity$variadic = G__8188__delegate;
    return G__8188
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8195__8196 = x;
            if(G__8195__8196) {
              if(cljs.core.truth_(function() {
                var or__3943__auto____8197 = null;
                if(cljs.core.truth_(or__3943__auto____8197)) {
                  return or__3943__auto____8197
                }else {
                  return G__8195__8196.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8195__8196.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8195__8196)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8195__8196)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8202 = cljs.core.count.call(null, xs);
    var yl__8203 = cljs.core.count.call(null, ys);
    if(xl__8202 < yl__8203) {
      return-1
    }else {
      if(xl__8202 > yl__8203) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8202, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8204 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto____8205 = d__8204 === 0;
        if(and__3941__auto____8205) {
          return n + 1 < len
        }else {
          return and__3941__auto____8205
        }
      }()) {
        var G__8206 = xs;
        var G__8207 = ys;
        var G__8208 = len;
        var G__8209 = n + 1;
        xs = G__8206;
        ys = G__8207;
        len = G__8208;
        n = G__8209;
        continue
      }else {
        return d__8204
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8211 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8211)) {
        return r__8211
      }else {
        if(cljs.core.truth_(r__8211)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8213 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8213, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8213)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto____8219 = cljs.core.seq.call(null, coll);
    if(temp__4090__auto____8219) {
      var s__8220 = temp__4090__auto____8219;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8220), cljs.core.next.call(null, s__8220))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8221 = val;
    var coll__8222 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8222) {
        var nval__8223 = f.call(null, val__8221, cljs.core.first.call(null, coll__8222));
        if(cljs.core.reduced_QMARK_.call(null, nval__8223)) {
          return cljs.core.deref.call(null, nval__8223)
        }else {
          var G__8224 = nval__8223;
          var G__8225 = cljs.core.next.call(null, coll__8222);
          val__8221 = G__8224;
          coll__8222 = G__8225;
          continue
        }
      }else {
        return val__8221
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8227 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8227);
  return cljs.core.vec.call(null, a__8227)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8234__8235 = coll;
      if(G__8234__8235) {
        if(function() {
          var or__3943__auto____8236 = G__8234__8235.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____8236) {
            return or__3943__auto____8236
          }else {
            return G__8234__8235.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8234__8235.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8234__8235)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8234__8235)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8237__8238 = coll;
      if(G__8237__8238) {
        if(function() {
          var or__3943__auto____8239 = G__8237__8238.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____8239) {
            return or__3943__auto____8239
          }else {
            return G__8237__8238.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8237__8238.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8237__8238)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8237__8238)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8240 = this;
  return this__8240.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8241__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8241 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8241__delegate.call(this, x, y, more)
    };
    G__8241.cljs$lang$maxFixedArity = 2;
    G__8241.cljs$lang$applyTo = function(arglist__8242) {
      var x = cljs.core.first(arglist__8242);
      var y = cljs.core.first(cljs.core.next(arglist__8242));
      var more = cljs.core.rest(cljs.core.next(arglist__8242));
      return G__8241__delegate(x, y, more)
    };
    G__8241.cljs$lang$arity$variadic = G__8241__delegate;
    return G__8241
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8243__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8243 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8243__delegate.call(this, x, y, more)
    };
    G__8243.cljs$lang$maxFixedArity = 2;
    G__8243.cljs$lang$applyTo = function(arglist__8244) {
      var x = cljs.core.first(arglist__8244);
      var y = cljs.core.first(cljs.core.next(arglist__8244));
      var more = cljs.core.rest(cljs.core.next(arglist__8244));
      return G__8243__delegate(x, y, more)
    };
    G__8243.cljs$lang$arity$variadic = G__8243__delegate;
    return G__8243
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8245__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8245 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8245__delegate.call(this, x, y, more)
    };
    G__8245.cljs$lang$maxFixedArity = 2;
    G__8245.cljs$lang$applyTo = function(arglist__8246) {
      var x = cljs.core.first(arglist__8246);
      var y = cljs.core.first(cljs.core.next(arglist__8246));
      var more = cljs.core.rest(cljs.core.next(arglist__8246));
      return G__8245__delegate(x, y, more)
    };
    G__8245.cljs$lang$arity$variadic = G__8245__delegate;
    return G__8245
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8247__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8247 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8247__delegate.call(this, x, y, more)
    };
    G__8247.cljs$lang$maxFixedArity = 2;
    G__8247.cljs$lang$applyTo = function(arglist__8248) {
      var x = cljs.core.first(arglist__8248);
      var y = cljs.core.first(cljs.core.next(arglist__8248));
      var more = cljs.core.rest(cljs.core.next(arglist__8248));
      return G__8247__delegate(x, y, more)
    };
    G__8247.cljs$lang$arity$variadic = G__8247__delegate;
    return G__8247
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8249__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8250 = y;
            var G__8251 = cljs.core.first.call(null, more);
            var G__8252 = cljs.core.next.call(null, more);
            x = G__8250;
            y = G__8251;
            more = G__8252;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8249 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8249__delegate.call(this, x, y, more)
    };
    G__8249.cljs$lang$maxFixedArity = 2;
    G__8249.cljs$lang$applyTo = function(arglist__8253) {
      var x = cljs.core.first(arglist__8253);
      var y = cljs.core.first(cljs.core.next(arglist__8253));
      var more = cljs.core.rest(cljs.core.next(arglist__8253));
      return G__8249__delegate(x, y, more)
    };
    G__8249.cljs$lang$arity$variadic = G__8249__delegate;
    return G__8249
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8254__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8255 = y;
            var G__8256 = cljs.core.first.call(null, more);
            var G__8257 = cljs.core.next.call(null, more);
            x = G__8255;
            y = G__8256;
            more = G__8257;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8254 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8254__delegate.call(this, x, y, more)
    };
    G__8254.cljs$lang$maxFixedArity = 2;
    G__8254.cljs$lang$applyTo = function(arglist__8258) {
      var x = cljs.core.first(arglist__8258);
      var y = cljs.core.first(cljs.core.next(arglist__8258));
      var more = cljs.core.rest(cljs.core.next(arglist__8258));
      return G__8254__delegate(x, y, more)
    };
    G__8254.cljs$lang$arity$variadic = G__8254__delegate;
    return G__8254
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8259__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8260 = y;
            var G__8261 = cljs.core.first.call(null, more);
            var G__8262 = cljs.core.next.call(null, more);
            x = G__8260;
            y = G__8261;
            more = G__8262;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8259 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8259__delegate.call(this, x, y, more)
    };
    G__8259.cljs$lang$maxFixedArity = 2;
    G__8259.cljs$lang$applyTo = function(arglist__8263) {
      var x = cljs.core.first(arglist__8263);
      var y = cljs.core.first(cljs.core.next(arglist__8263));
      var more = cljs.core.rest(cljs.core.next(arglist__8263));
      return G__8259__delegate(x, y, more)
    };
    G__8259.cljs$lang$arity$variadic = G__8259__delegate;
    return G__8259
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8264__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8265 = y;
            var G__8266 = cljs.core.first.call(null, more);
            var G__8267 = cljs.core.next.call(null, more);
            x = G__8265;
            y = G__8266;
            more = G__8267;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8264 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8264__delegate.call(this, x, y, more)
    };
    G__8264.cljs$lang$maxFixedArity = 2;
    G__8264.cljs$lang$applyTo = function(arglist__8268) {
      var x = cljs.core.first(arglist__8268);
      var y = cljs.core.first(cljs.core.next(arglist__8268));
      var more = cljs.core.rest(cljs.core.next(arglist__8268));
      return G__8264__delegate(x, y, more)
    };
    G__8264.cljs$lang$arity$variadic = G__8264__delegate;
    return G__8264
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8269__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8269 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8269__delegate.call(this, x, y, more)
    };
    G__8269.cljs$lang$maxFixedArity = 2;
    G__8269.cljs$lang$applyTo = function(arglist__8270) {
      var x = cljs.core.first(arglist__8270);
      var y = cljs.core.first(cljs.core.next(arglist__8270));
      var more = cljs.core.rest(cljs.core.next(arglist__8270));
      return G__8269__delegate(x, y, more)
    };
    G__8269.cljs$lang$arity$variadic = G__8269__delegate;
    return G__8269
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8271__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8271 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8271__delegate.call(this, x, y, more)
    };
    G__8271.cljs$lang$maxFixedArity = 2;
    G__8271.cljs$lang$applyTo = function(arglist__8272) {
      var x = cljs.core.first(arglist__8272);
      var y = cljs.core.first(cljs.core.next(arglist__8272));
      var more = cljs.core.rest(cljs.core.next(arglist__8272));
      return G__8271__delegate(x, y, more)
    };
    G__8271.cljs$lang$arity$variadic = G__8271__delegate;
    return G__8271
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8274 = n % d;
  return cljs.core.fix.call(null, (n - rem__8274) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8276 = cljs.core.quot.call(null, n, d);
  return n - d * q__8276
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8279 = v - (v >> 1 & 1431655765);
  var v__8280 = (v__8279 & 858993459) + (v__8279 >> 2 & 858993459);
  return(v__8280 + (v__8280 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8281__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8282 = y;
            var G__8283 = cljs.core.first.call(null, more);
            var G__8284 = cljs.core.next.call(null, more);
            x = G__8282;
            y = G__8283;
            more = G__8284;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8281 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8281__delegate.call(this, x, y, more)
    };
    G__8281.cljs$lang$maxFixedArity = 2;
    G__8281.cljs$lang$applyTo = function(arglist__8285) {
      var x = cljs.core.first(arglist__8285);
      var y = cljs.core.first(cljs.core.next(arglist__8285));
      var more = cljs.core.rest(cljs.core.next(arglist__8285));
      return G__8281__delegate(x, y, more)
    };
    G__8281.cljs$lang$arity$variadic = G__8281__delegate;
    return G__8281
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8289 = n;
  var xs__8290 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____8291 = xs__8290;
      if(and__3941__auto____8291) {
        return n__8289 > 0
      }else {
        return and__3941__auto____8291
      }
    }())) {
      var G__8292 = n__8289 - 1;
      var G__8293 = cljs.core.next.call(null, xs__8290);
      n__8289 = G__8292;
      xs__8290 = G__8293;
      continue
    }else {
      return xs__8290
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8294__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8295 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8296 = cljs.core.next.call(null, more);
            sb = G__8295;
            more = G__8296;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8294 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8294__delegate.call(this, x, ys)
    };
    G__8294.cljs$lang$maxFixedArity = 1;
    G__8294.cljs$lang$applyTo = function(arglist__8297) {
      var x = cljs.core.first(arglist__8297);
      var ys = cljs.core.rest(arglist__8297);
      return G__8294__delegate(x, ys)
    };
    G__8294.cljs$lang$arity$variadic = G__8294__delegate;
    return G__8294
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8298__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8299 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8300 = cljs.core.next.call(null, more);
            sb = G__8299;
            more = G__8300;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8298 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8298__delegate.call(this, x, ys)
    };
    G__8298.cljs$lang$maxFixedArity = 1;
    G__8298.cljs$lang$applyTo = function(arglist__8301) {
      var x = cljs.core.first(arglist__8301);
      var ys = cljs.core.rest(arglist__8301);
      return G__8298__delegate(x, ys)
    };
    G__8298.cljs$lang$arity$variadic = G__8298__delegate;
    return G__8298
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8302) {
    var fmt = cljs.core.first(arglist__8302);
    var args = cljs.core.rest(arglist__8302);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8305 = cljs.core.seq.call(null, x);
    var ys__8306 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8305 == null) {
        return ys__8306 == null
      }else {
        if(ys__8306 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8305), cljs.core.first.call(null, ys__8306))) {
            var G__8307 = cljs.core.next.call(null, xs__8305);
            var G__8308 = cljs.core.next.call(null, ys__8306);
            xs__8305 = G__8307;
            ys__8306 = G__8308;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8309_SHARP_, p2__8310_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8309_SHARP_, cljs.core.hash.call(null, p2__8310_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8314 = 0;
  var s__8315 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8315) {
      var e__8316 = cljs.core.first.call(null, s__8315);
      var G__8317 = (h__8314 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8316)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8316)))) % 4503599627370496;
      var G__8318 = cljs.core.next.call(null, s__8315);
      h__8314 = G__8317;
      s__8315 = G__8318;
      continue
    }else {
      return h__8314
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8322 = 0;
  var s__8323 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8323) {
      var e__8324 = cljs.core.first.call(null, s__8323);
      var G__8325 = (h__8322 + cljs.core.hash.call(null, e__8324)) % 4503599627370496;
      var G__8326 = cljs.core.next.call(null, s__8323);
      h__8322 = G__8325;
      s__8323 = G__8326;
      continue
    }else {
      return h__8322
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8347__8348 = cljs.core.seq.call(null, fn_map);
  if(G__8347__8348) {
    var G__8350__8352 = cljs.core.first.call(null, G__8347__8348);
    var vec__8351__8353 = G__8350__8352;
    var key_name__8354 = cljs.core.nth.call(null, vec__8351__8353, 0, null);
    var f__8355 = cljs.core.nth.call(null, vec__8351__8353, 1, null);
    var G__8347__8356 = G__8347__8348;
    var G__8350__8357 = G__8350__8352;
    var G__8347__8358 = G__8347__8356;
    while(true) {
      var vec__8359__8360 = G__8350__8357;
      var key_name__8361 = cljs.core.nth.call(null, vec__8359__8360, 0, null);
      var f__8362 = cljs.core.nth.call(null, vec__8359__8360, 1, null);
      var G__8347__8363 = G__8347__8358;
      var str_name__8364 = cljs.core.name.call(null, key_name__8361);
      obj[str_name__8364] = f__8362;
      var temp__4092__auto____8365 = cljs.core.next.call(null, G__8347__8363);
      if(temp__4092__auto____8365) {
        var G__8347__8366 = temp__4092__auto____8365;
        var G__8367 = cljs.core.first.call(null, G__8347__8366);
        var G__8368 = G__8347__8366;
        G__8350__8357 = G__8367;
        G__8347__8358 = G__8368;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8369 = this;
  var h__2135__auto____8370 = this__8369.__hash;
  if(!(h__2135__auto____8370 == null)) {
    return h__2135__auto____8370
  }else {
    var h__2135__auto____8371 = cljs.core.hash_coll.call(null, coll);
    this__8369.__hash = h__2135__auto____8371;
    return h__2135__auto____8371
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8372 = this;
  if(this__8372.count === 1) {
    return null
  }else {
    return this__8372.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8373 = this;
  return new cljs.core.List(this__8373.meta, o, coll, this__8373.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8374 = this;
  var this__8375 = this;
  return cljs.core.pr_str.call(null, this__8375)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8376 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8377 = this;
  return this__8377.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8378 = this;
  return this__8378.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8379 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8380 = this;
  return this__8380.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8381 = this;
  if(this__8381.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8381.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8382 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8383 = this;
  return new cljs.core.List(meta, this__8383.first, this__8383.rest, this__8383.count, this__8383.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8384 = this;
  return this__8384.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8385 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8386 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8387 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8388 = this;
  return new cljs.core.List(this__8388.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8389 = this;
  var this__8390 = this;
  return cljs.core.pr_str.call(null, this__8390)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8391 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8392 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8393 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8394 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8395 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8396 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8397 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8398 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8399 = this;
  return this__8399.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8400 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8404__8405 = coll;
  if(G__8404__8405) {
    if(function() {
      var or__3943__auto____8406 = G__8404__8405.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto____8406) {
        return or__3943__auto____8406
      }else {
        return G__8404__8405.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8404__8405.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8404__8405)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8404__8405)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8407__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8407 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8407__delegate.call(this, x, y, z, items)
    };
    G__8407.cljs$lang$maxFixedArity = 3;
    G__8407.cljs$lang$applyTo = function(arglist__8408) {
      var x = cljs.core.first(arglist__8408);
      var y = cljs.core.first(cljs.core.next(arglist__8408));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8408)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8408)));
      return G__8407__delegate(x, y, z, items)
    };
    G__8407.cljs$lang$arity$variadic = G__8407__delegate;
    return G__8407
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8409 = this;
  var h__2135__auto____8410 = this__8409.__hash;
  if(!(h__2135__auto____8410 == null)) {
    return h__2135__auto____8410
  }else {
    var h__2135__auto____8411 = cljs.core.hash_coll.call(null, coll);
    this__8409.__hash = h__2135__auto____8411;
    return h__2135__auto____8411
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8412 = this;
  if(this__8412.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8412.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8413 = this;
  return new cljs.core.Cons(null, o, coll, this__8413.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8414 = this;
  var this__8415 = this;
  return cljs.core.pr_str.call(null, this__8415)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8416 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8417 = this;
  return this__8417.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8418 = this;
  if(this__8418.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8418.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8419 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8420 = this;
  return new cljs.core.Cons(meta, this__8420.first, this__8420.rest, this__8420.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8421 = this;
  return this__8421.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8422 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8422.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto____8427 = coll == null;
    if(or__3943__auto____8427) {
      return or__3943__auto____8427
    }else {
      var G__8428__8429 = coll;
      if(G__8428__8429) {
        if(function() {
          var or__3943__auto____8430 = G__8428__8429.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____8430) {
            return or__3943__auto____8430
          }else {
            return G__8428__8429.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8428__8429.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8428__8429)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8428__8429)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8434__8435 = x;
  if(G__8434__8435) {
    if(function() {
      var or__3943__auto____8436 = G__8434__8435.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto____8436) {
        return or__3943__auto____8436
      }else {
        return G__8434__8435.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8434__8435.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8434__8435)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8434__8435)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8437 = null;
  var G__8437__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8437__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8437 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8437__2.call(this, string, f);
      case 3:
        return G__8437__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8437
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8438 = null;
  var G__8438__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8438__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8438 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8438__2.call(this, string, k);
      case 3:
        return G__8438__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8438
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8439 = null;
  var G__8439__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8439__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8439 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8439__2.call(this, string, n);
      case 3:
        return G__8439__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8439
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8451 = null;
  var G__8451__2 = function(this_sym8442, coll) {
    var this__8444 = this;
    var this_sym8442__8445 = this;
    var ___8446 = this_sym8442__8445;
    if(coll == null) {
      return null
    }else {
      var strobj__8447 = coll.strobj;
      if(strobj__8447 == null) {
        return cljs.core._lookup.call(null, coll, this__8444.k, null)
      }else {
        return strobj__8447[this__8444.k]
      }
    }
  };
  var G__8451__3 = function(this_sym8443, coll, not_found) {
    var this__8444 = this;
    var this_sym8443__8448 = this;
    var ___8449 = this_sym8443__8448;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8444.k, not_found)
    }
  };
  G__8451 = function(this_sym8443, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8451__2.call(this, this_sym8443, coll);
      case 3:
        return G__8451__3.call(this, this_sym8443, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8451
}();
cljs.core.Keyword.prototype.apply = function(this_sym8440, args8441) {
  var this__8450 = this;
  return this_sym8440.call.apply(this_sym8440, [this_sym8440].concat(args8441.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8460 = null;
  var G__8460__2 = function(this_sym8454, coll) {
    var this_sym8454__8456 = this;
    var this__8457 = this_sym8454__8456;
    return cljs.core._lookup.call(null, coll, this__8457.toString(), null)
  };
  var G__8460__3 = function(this_sym8455, coll, not_found) {
    var this_sym8455__8458 = this;
    var this__8459 = this_sym8455__8458;
    return cljs.core._lookup.call(null, coll, this__8459.toString(), not_found)
  };
  G__8460 = function(this_sym8455, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8460__2.call(this, this_sym8455, coll);
      case 3:
        return G__8460__3.call(this, this_sym8455, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8460
}();
String.prototype.apply = function(this_sym8452, args8453) {
  return this_sym8452.call.apply(this_sym8452, [this_sym8452].concat(args8453.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8462 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8462
  }else {
    lazy_seq.x = x__8462.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8463 = this;
  var h__2135__auto____8464 = this__8463.__hash;
  if(!(h__2135__auto____8464 == null)) {
    return h__2135__auto____8464
  }else {
    var h__2135__auto____8465 = cljs.core.hash_coll.call(null, coll);
    this__8463.__hash = h__2135__auto____8465;
    return h__2135__auto____8465
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8466 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8467 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8468 = this;
  var this__8469 = this;
  return cljs.core.pr_str.call(null, this__8469)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8470 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8471 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8472 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8473 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8474 = this;
  return new cljs.core.LazySeq(meta, this__8474.realized, this__8474.x, this__8474.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8475 = this;
  return this__8475.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8476 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8476.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8477 = this;
  return this__8477.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8478 = this;
  var ___8479 = this;
  this__8478.buf[this__8478.end] = o;
  return this__8478.end = this__8478.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8480 = this;
  var ___8481 = this;
  var ret__8482 = new cljs.core.ArrayChunk(this__8480.buf, 0, this__8480.end);
  this__8480.buf = null;
  return ret__8482
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8483 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8483.arr[this__8483.off], this__8483.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8484 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8484.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8485 = this;
  if(this__8485.off === this__8485.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8485.arr, this__8485.off + 1, this__8485.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8486 = this;
  return this__8486.arr[this__8486.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8487 = this;
  if(function() {
    var and__3941__auto____8488 = i >= 0;
    if(and__3941__auto____8488) {
      return i < this__8487.end - this__8487.off
    }else {
      return and__3941__auto____8488
    }
  }()) {
    return this__8487.arr[this__8487.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8489 = this;
  return this__8489.end - this__8489.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8490 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8491 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8492 = this;
  return cljs.core._nth.call(null, this__8492.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8493 = this;
  if(cljs.core._count.call(null, this__8493.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8493.chunk), this__8493.more, this__8493.meta)
  }else {
    if(this__8493.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8493.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8494 = this;
  if(this__8494.more == null) {
    return null
  }else {
    return this__8494.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8495 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8496 = this;
  return new cljs.core.ChunkedCons(this__8496.chunk, this__8496.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8497 = this;
  return this__8497.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8498 = this;
  return this__8498.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8499 = this;
  if(this__8499.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8499.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8503__8504 = s;
    if(G__8503__8504) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____8505 = null;
        if(cljs.core.truth_(or__3943__auto____8505)) {
          return or__3943__auto____8505
        }else {
          return G__8503__8504.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8503__8504.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8503__8504)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8503__8504)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8508 = [];
  var s__8509 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8509)) {
      ary__8508.push(cljs.core.first.call(null, s__8509));
      var G__8510 = cljs.core.next.call(null, s__8509);
      s__8509 = G__8510;
      continue
    }else {
      return ary__8508
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8514 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8515 = 0;
  var xs__8516 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8516) {
      ret__8514[i__8515] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8516));
      var G__8517 = i__8515 + 1;
      var G__8518 = cljs.core.next.call(null, xs__8516);
      i__8515 = G__8517;
      xs__8516 = G__8518;
      continue
    }else {
    }
    break
  }
  return ret__8514
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8526 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8527 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8528 = 0;
      var s__8529 = s__8527;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8530 = s__8529;
          if(and__3941__auto____8530) {
            return i__8528 < size
          }else {
            return and__3941__auto____8530
          }
        }())) {
          a__8526[i__8528] = cljs.core.first.call(null, s__8529);
          var G__8533 = i__8528 + 1;
          var G__8534 = cljs.core.next.call(null, s__8529);
          i__8528 = G__8533;
          s__8529 = G__8534;
          continue
        }else {
          return a__8526
        }
        break
      }
    }else {
      var n__2470__auto____8531 = size;
      var i__8532 = 0;
      while(true) {
        if(i__8532 < n__2470__auto____8531) {
          a__8526[i__8532] = init_val_or_seq;
          var G__8535 = i__8532 + 1;
          i__8532 = G__8535;
          continue
        }else {
        }
        break
      }
      return a__8526
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8543 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8544 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8545 = 0;
      var s__8546 = s__8544;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8547 = s__8546;
          if(and__3941__auto____8547) {
            return i__8545 < size
          }else {
            return and__3941__auto____8547
          }
        }())) {
          a__8543[i__8545] = cljs.core.first.call(null, s__8546);
          var G__8550 = i__8545 + 1;
          var G__8551 = cljs.core.next.call(null, s__8546);
          i__8545 = G__8550;
          s__8546 = G__8551;
          continue
        }else {
          return a__8543
        }
        break
      }
    }else {
      var n__2470__auto____8548 = size;
      var i__8549 = 0;
      while(true) {
        if(i__8549 < n__2470__auto____8548) {
          a__8543[i__8549] = init_val_or_seq;
          var G__8552 = i__8549 + 1;
          i__8549 = G__8552;
          continue
        }else {
        }
        break
      }
      return a__8543
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8560 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8561 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8562 = 0;
      var s__8563 = s__8561;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8564 = s__8563;
          if(and__3941__auto____8564) {
            return i__8562 < size
          }else {
            return and__3941__auto____8564
          }
        }())) {
          a__8560[i__8562] = cljs.core.first.call(null, s__8563);
          var G__8567 = i__8562 + 1;
          var G__8568 = cljs.core.next.call(null, s__8563);
          i__8562 = G__8567;
          s__8563 = G__8568;
          continue
        }else {
          return a__8560
        }
        break
      }
    }else {
      var n__2470__auto____8565 = size;
      var i__8566 = 0;
      while(true) {
        if(i__8566 < n__2470__auto____8565) {
          a__8560[i__8566] = init_val_or_seq;
          var G__8569 = i__8566 + 1;
          i__8566 = G__8569;
          continue
        }else {
        }
        break
      }
      return a__8560
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8574 = s;
    var i__8575 = n;
    var sum__8576 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____8577 = i__8575 > 0;
        if(and__3941__auto____8577) {
          return cljs.core.seq.call(null, s__8574)
        }else {
          return and__3941__auto____8577
        }
      }())) {
        var G__8578 = cljs.core.next.call(null, s__8574);
        var G__8579 = i__8575 - 1;
        var G__8580 = sum__8576 + 1;
        s__8574 = G__8578;
        i__8575 = G__8579;
        sum__8576 = G__8580;
        continue
      }else {
        return sum__8576
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8585 = cljs.core.seq.call(null, x);
      if(s__8585) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8585)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8585), concat.call(null, cljs.core.chunk_rest.call(null, s__8585), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8585), concat.call(null, cljs.core.rest.call(null, s__8585), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8589__delegate = function(x, y, zs) {
      var cat__8588 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8587 = cljs.core.seq.call(null, xys);
          if(xys__8587) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8587)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8587), cat.call(null, cljs.core.chunk_rest.call(null, xys__8587), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8587), cat.call(null, cljs.core.rest.call(null, xys__8587), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8588.call(null, concat.call(null, x, y), zs)
    };
    var G__8589 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8589__delegate.call(this, x, y, zs)
    };
    G__8589.cljs$lang$maxFixedArity = 2;
    G__8589.cljs$lang$applyTo = function(arglist__8590) {
      var x = cljs.core.first(arglist__8590);
      var y = cljs.core.first(cljs.core.next(arglist__8590));
      var zs = cljs.core.rest(cljs.core.next(arglist__8590));
      return G__8589__delegate(x, y, zs)
    };
    G__8589.cljs$lang$arity$variadic = G__8589__delegate;
    return G__8589
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8591__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8591 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8591__delegate.call(this, a, b, c, d, more)
    };
    G__8591.cljs$lang$maxFixedArity = 4;
    G__8591.cljs$lang$applyTo = function(arglist__8592) {
      var a = cljs.core.first(arglist__8592);
      var b = cljs.core.first(cljs.core.next(arglist__8592));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8592)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8592))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8592))));
      return G__8591__delegate(a, b, c, d, more)
    };
    G__8591.cljs$lang$arity$variadic = G__8591__delegate;
    return G__8591
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8634 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8635 = cljs.core._first.call(null, args__8634);
    var args__8636 = cljs.core._rest.call(null, args__8634);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8635)
      }else {
        return f.call(null, a__8635)
      }
    }else {
      var b__8637 = cljs.core._first.call(null, args__8636);
      var args__8638 = cljs.core._rest.call(null, args__8636);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8635, b__8637)
        }else {
          return f.call(null, a__8635, b__8637)
        }
      }else {
        var c__8639 = cljs.core._first.call(null, args__8638);
        var args__8640 = cljs.core._rest.call(null, args__8638);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8635, b__8637, c__8639)
          }else {
            return f.call(null, a__8635, b__8637, c__8639)
          }
        }else {
          var d__8641 = cljs.core._first.call(null, args__8640);
          var args__8642 = cljs.core._rest.call(null, args__8640);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8635, b__8637, c__8639, d__8641)
            }else {
              return f.call(null, a__8635, b__8637, c__8639, d__8641)
            }
          }else {
            var e__8643 = cljs.core._first.call(null, args__8642);
            var args__8644 = cljs.core._rest.call(null, args__8642);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8635, b__8637, c__8639, d__8641, e__8643)
              }else {
                return f.call(null, a__8635, b__8637, c__8639, d__8641, e__8643)
              }
            }else {
              var f__8645 = cljs.core._first.call(null, args__8644);
              var args__8646 = cljs.core._rest.call(null, args__8644);
              if(argc === 6) {
                if(f__8645.cljs$lang$arity$6) {
                  return f__8645.cljs$lang$arity$6(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645)
                }else {
                  return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645)
                }
              }else {
                var g__8647 = cljs.core._first.call(null, args__8646);
                var args__8648 = cljs.core._rest.call(null, args__8646);
                if(argc === 7) {
                  if(f__8645.cljs$lang$arity$7) {
                    return f__8645.cljs$lang$arity$7(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647)
                  }else {
                    return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647)
                  }
                }else {
                  var h__8649 = cljs.core._first.call(null, args__8648);
                  var args__8650 = cljs.core._rest.call(null, args__8648);
                  if(argc === 8) {
                    if(f__8645.cljs$lang$arity$8) {
                      return f__8645.cljs$lang$arity$8(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649)
                    }else {
                      return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649)
                    }
                  }else {
                    var i__8651 = cljs.core._first.call(null, args__8650);
                    var args__8652 = cljs.core._rest.call(null, args__8650);
                    if(argc === 9) {
                      if(f__8645.cljs$lang$arity$9) {
                        return f__8645.cljs$lang$arity$9(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651)
                      }else {
                        return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651)
                      }
                    }else {
                      var j__8653 = cljs.core._first.call(null, args__8652);
                      var args__8654 = cljs.core._rest.call(null, args__8652);
                      if(argc === 10) {
                        if(f__8645.cljs$lang$arity$10) {
                          return f__8645.cljs$lang$arity$10(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653)
                        }else {
                          return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653)
                        }
                      }else {
                        var k__8655 = cljs.core._first.call(null, args__8654);
                        var args__8656 = cljs.core._rest.call(null, args__8654);
                        if(argc === 11) {
                          if(f__8645.cljs$lang$arity$11) {
                            return f__8645.cljs$lang$arity$11(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655)
                          }else {
                            return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655)
                          }
                        }else {
                          var l__8657 = cljs.core._first.call(null, args__8656);
                          var args__8658 = cljs.core._rest.call(null, args__8656);
                          if(argc === 12) {
                            if(f__8645.cljs$lang$arity$12) {
                              return f__8645.cljs$lang$arity$12(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657)
                            }else {
                              return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657)
                            }
                          }else {
                            var m__8659 = cljs.core._first.call(null, args__8658);
                            var args__8660 = cljs.core._rest.call(null, args__8658);
                            if(argc === 13) {
                              if(f__8645.cljs$lang$arity$13) {
                                return f__8645.cljs$lang$arity$13(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659)
                              }else {
                                return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659)
                              }
                            }else {
                              var n__8661 = cljs.core._first.call(null, args__8660);
                              var args__8662 = cljs.core._rest.call(null, args__8660);
                              if(argc === 14) {
                                if(f__8645.cljs$lang$arity$14) {
                                  return f__8645.cljs$lang$arity$14(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661)
                                }else {
                                  return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661)
                                }
                              }else {
                                var o__8663 = cljs.core._first.call(null, args__8662);
                                var args__8664 = cljs.core._rest.call(null, args__8662);
                                if(argc === 15) {
                                  if(f__8645.cljs$lang$arity$15) {
                                    return f__8645.cljs$lang$arity$15(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663)
                                  }else {
                                    return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663)
                                  }
                                }else {
                                  var p__8665 = cljs.core._first.call(null, args__8664);
                                  var args__8666 = cljs.core._rest.call(null, args__8664);
                                  if(argc === 16) {
                                    if(f__8645.cljs$lang$arity$16) {
                                      return f__8645.cljs$lang$arity$16(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665)
                                    }else {
                                      return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665)
                                    }
                                  }else {
                                    var q__8667 = cljs.core._first.call(null, args__8666);
                                    var args__8668 = cljs.core._rest.call(null, args__8666);
                                    if(argc === 17) {
                                      if(f__8645.cljs$lang$arity$17) {
                                        return f__8645.cljs$lang$arity$17(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667)
                                      }else {
                                        return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667)
                                      }
                                    }else {
                                      var r__8669 = cljs.core._first.call(null, args__8668);
                                      var args__8670 = cljs.core._rest.call(null, args__8668);
                                      if(argc === 18) {
                                        if(f__8645.cljs$lang$arity$18) {
                                          return f__8645.cljs$lang$arity$18(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667, r__8669)
                                        }else {
                                          return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667, r__8669)
                                        }
                                      }else {
                                        var s__8671 = cljs.core._first.call(null, args__8670);
                                        var args__8672 = cljs.core._rest.call(null, args__8670);
                                        if(argc === 19) {
                                          if(f__8645.cljs$lang$arity$19) {
                                            return f__8645.cljs$lang$arity$19(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667, r__8669, s__8671)
                                          }else {
                                            return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667, r__8669, s__8671)
                                          }
                                        }else {
                                          var t__8673 = cljs.core._first.call(null, args__8672);
                                          var args__8674 = cljs.core._rest.call(null, args__8672);
                                          if(argc === 20) {
                                            if(f__8645.cljs$lang$arity$20) {
                                              return f__8645.cljs$lang$arity$20(a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667, r__8669, s__8671, t__8673)
                                            }else {
                                              return f__8645.call(null, a__8635, b__8637, c__8639, d__8641, e__8643, f__8645, g__8647, h__8649, i__8651, j__8653, k__8655, l__8657, m__8659, n__8661, o__8663, p__8665, q__8667, r__8669, s__8671, t__8673)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8689 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8690 = cljs.core.bounded_count.call(null, args, fixed_arity__8689 + 1);
      if(bc__8690 <= fixed_arity__8689) {
        return cljs.core.apply_to.call(null, f, bc__8690, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8691 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8692 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8693 = cljs.core.bounded_count.call(null, arglist__8691, fixed_arity__8692 + 1);
      if(bc__8693 <= fixed_arity__8692) {
        return cljs.core.apply_to.call(null, f, bc__8693, arglist__8691)
      }else {
        return f.cljs$lang$applyTo(arglist__8691)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8691))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8694 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8695 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8696 = cljs.core.bounded_count.call(null, arglist__8694, fixed_arity__8695 + 1);
      if(bc__8696 <= fixed_arity__8695) {
        return cljs.core.apply_to.call(null, f, bc__8696, arglist__8694)
      }else {
        return f.cljs$lang$applyTo(arglist__8694)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8694))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8697 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8698 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8699 = cljs.core.bounded_count.call(null, arglist__8697, fixed_arity__8698 + 1);
      if(bc__8699 <= fixed_arity__8698) {
        return cljs.core.apply_to.call(null, f, bc__8699, arglist__8697)
      }else {
        return f.cljs$lang$applyTo(arglist__8697)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8697))
    }
  };
  var apply__6 = function() {
    var G__8703__delegate = function(f, a, b, c, d, args) {
      var arglist__8700 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8701 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8702 = cljs.core.bounded_count.call(null, arglist__8700, fixed_arity__8701 + 1);
        if(bc__8702 <= fixed_arity__8701) {
          return cljs.core.apply_to.call(null, f, bc__8702, arglist__8700)
        }else {
          return f.cljs$lang$applyTo(arglist__8700)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8700))
      }
    };
    var G__8703 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8703__delegate.call(this, f, a, b, c, d, args)
    };
    G__8703.cljs$lang$maxFixedArity = 5;
    G__8703.cljs$lang$applyTo = function(arglist__8704) {
      var f = cljs.core.first(arglist__8704);
      var a = cljs.core.first(cljs.core.next(arglist__8704));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8704)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8704))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8704)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8704)))));
      return G__8703__delegate(f, a, b, c, d, args)
    };
    G__8703.cljs$lang$arity$variadic = G__8703__delegate;
    return G__8703
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8705) {
    var obj = cljs.core.first(arglist__8705);
    var f = cljs.core.first(cljs.core.next(arglist__8705));
    var args = cljs.core.rest(cljs.core.next(arglist__8705));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8706__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8706 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8706__delegate.call(this, x, y, more)
    };
    G__8706.cljs$lang$maxFixedArity = 2;
    G__8706.cljs$lang$applyTo = function(arglist__8707) {
      var x = cljs.core.first(arglist__8707);
      var y = cljs.core.first(cljs.core.next(arglist__8707));
      var more = cljs.core.rest(cljs.core.next(arglist__8707));
      return G__8706__delegate(x, y, more)
    };
    G__8706.cljs$lang$arity$variadic = G__8706__delegate;
    return G__8706
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8708 = pred;
        var G__8709 = cljs.core.next.call(null, coll);
        pred = G__8708;
        coll = G__8709;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto____8711 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto____8711)) {
        return or__3943__auto____8711
      }else {
        var G__8712 = pred;
        var G__8713 = cljs.core.next.call(null, coll);
        pred = G__8712;
        coll = G__8713;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8714 = null;
    var G__8714__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8714__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8714__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8714__3 = function() {
      var G__8715__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8715 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8715__delegate.call(this, x, y, zs)
      };
      G__8715.cljs$lang$maxFixedArity = 2;
      G__8715.cljs$lang$applyTo = function(arglist__8716) {
        var x = cljs.core.first(arglist__8716);
        var y = cljs.core.first(cljs.core.next(arglist__8716));
        var zs = cljs.core.rest(cljs.core.next(arglist__8716));
        return G__8715__delegate(x, y, zs)
      };
      G__8715.cljs$lang$arity$variadic = G__8715__delegate;
      return G__8715
    }();
    G__8714 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8714__0.call(this);
        case 1:
          return G__8714__1.call(this, x);
        case 2:
          return G__8714__2.call(this, x, y);
        default:
          return G__8714__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8714.cljs$lang$maxFixedArity = 2;
    G__8714.cljs$lang$applyTo = G__8714__3.cljs$lang$applyTo;
    return G__8714
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8717__delegate = function(args) {
      return x
    };
    var G__8717 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8717__delegate.call(this, args)
    };
    G__8717.cljs$lang$maxFixedArity = 0;
    G__8717.cljs$lang$applyTo = function(arglist__8718) {
      var args = cljs.core.seq(arglist__8718);
      return G__8717__delegate(args)
    };
    G__8717.cljs$lang$arity$variadic = G__8717__delegate;
    return G__8717
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8725 = null;
      var G__8725__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8725__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8725__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8725__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8725__4 = function() {
        var G__8726__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8726 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8726__delegate.call(this, x, y, z, args)
        };
        G__8726.cljs$lang$maxFixedArity = 3;
        G__8726.cljs$lang$applyTo = function(arglist__8727) {
          var x = cljs.core.first(arglist__8727);
          var y = cljs.core.first(cljs.core.next(arglist__8727));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8727)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8727)));
          return G__8726__delegate(x, y, z, args)
        };
        G__8726.cljs$lang$arity$variadic = G__8726__delegate;
        return G__8726
      }();
      G__8725 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8725__0.call(this);
          case 1:
            return G__8725__1.call(this, x);
          case 2:
            return G__8725__2.call(this, x, y);
          case 3:
            return G__8725__3.call(this, x, y, z);
          default:
            return G__8725__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8725.cljs$lang$maxFixedArity = 3;
      G__8725.cljs$lang$applyTo = G__8725__4.cljs$lang$applyTo;
      return G__8725
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8728 = null;
      var G__8728__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8728__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8728__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8728__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8728__4 = function() {
        var G__8729__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8729 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8729__delegate.call(this, x, y, z, args)
        };
        G__8729.cljs$lang$maxFixedArity = 3;
        G__8729.cljs$lang$applyTo = function(arglist__8730) {
          var x = cljs.core.first(arglist__8730);
          var y = cljs.core.first(cljs.core.next(arglist__8730));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8730)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8730)));
          return G__8729__delegate(x, y, z, args)
        };
        G__8729.cljs$lang$arity$variadic = G__8729__delegate;
        return G__8729
      }();
      G__8728 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8728__0.call(this);
          case 1:
            return G__8728__1.call(this, x);
          case 2:
            return G__8728__2.call(this, x, y);
          case 3:
            return G__8728__3.call(this, x, y, z);
          default:
            return G__8728__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8728.cljs$lang$maxFixedArity = 3;
      G__8728.cljs$lang$applyTo = G__8728__4.cljs$lang$applyTo;
      return G__8728
    }()
  };
  var comp__4 = function() {
    var G__8731__delegate = function(f1, f2, f3, fs) {
      var fs__8722 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8732__delegate = function(args) {
          var ret__8723 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8722), args);
          var fs__8724 = cljs.core.next.call(null, fs__8722);
          while(true) {
            if(fs__8724) {
              var G__8733 = cljs.core.first.call(null, fs__8724).call(null, ret__8723);
              var G__8734 = cljs.core.next.call(null, fs__8724);
              ret__8723 = G__8733;
              fs__8724 = G__8734;
              continue
            }else {
              return ret__8723
            }
            break
          }
        };
        var G__8732 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8732__delegate.call(this, args)
        };
        G__8732.cljs$lang$maxFixedArity = 0;
        G__8732.cljs$lang$applyTo = function(arglist__8735) {
          var args = cljs.core.seq(arglist__8735);
          return G__8732__delegate(args)
        };
        G__8732.cljs$lang$arity$variadic = G__8732__delegate;
        return G__8732
      }()
    };
    var G__8731 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8731__delegate.call(this, f1, f2, f3, fs)
    };
    G__8731.cljs$lang$maxFixedArity = 3;
    G__8731.cljs$lang$applyTo = function(arglist__8736) {
      var f1 = cljs.core.first(arglist__8736);
      var f2 = cljs.core.first(cljs.core.next(arglist__8736));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8736)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8736)));
      return G__8731__delegate(f1, f2, f3, fs)
    };
    G__8731.cljs$lang$arity$variadic = G__8731__delegate;
    return G__8731
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8737__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8737 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8737__delegate.call(this, args)
      };
      G__8737.cljs$lang$maxFixedArity = 0;
      G__8737.cljs$lang$applyTo = function(arglist__8738) {
        var args = cljs.core.seq(arglist__8738);
        return G__8737__delegate(args)
      };
      G__8737.cljs$lang$arity$variadic = G__8737__delegate;
      return G__8737
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8739__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8739 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8739__delegate.call(this, args)
      };
      G__8739.cljs$lang$maxFixedArity = 0;
      G__8739.cljs$lang$applyTo = function(arglist__8740) {
        var args = cljs.core.seq(arglist__8740);
        return G__8739__delegate(args)
      };
      G__8739.cljs$lang$arity$variadic = G__8739__delegate;
      return G__8739
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8741__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8741 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8741__delegate.call(this, args)
      };
      G__8741.cljs$lang$maxFixedArity = 0;
      G__8741.cljs$lang$applyTo = function(arglist__8742) {
        var args = cljs.core.seq(arglist__8742);
        return G__8741__delegate(args)
      };
      G__8741.cljs$lang$arity$variadic = G__8741__delegate;
      return G__8741
    }()
  };
  var partial__5 = function() {
    var G__8743__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8744__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8744 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8744__delegate.call(this, args)
        };
        G__8744.cljs$lang$maxFixedArity = 0;
        G__8744.cljs$lang$applyTo = function(arglist__8745) {
          var args = cljs.core.seq(arglist__8745);
          return G__8744__delegate(args)
        };
        G__8744.cljs$lang$arity$variadic = G__8744__delegate;
        return G__8744
      }()
    };
    var G__8743 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8743__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8743.cljs$lang$maxFixedArity = 4;
    G__8743.cljs$lang$applyTo = function(arglist__8746) {
      var f = cljs.core.first(arglist__8746);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8746));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8746)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8746))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8746))));
      return G__8743__delegate(f, arg1, arg2, arg3, more)
    };
    G__8743.cljs$lang$arity$variadic = G__8743__delegate;
    return G__8743
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8747 = null;
      var G__8747__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8747__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8747__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8747__4 = function() {
        var G__8748__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8748 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8748__delegate.call(this, a, b, c, ds)
        };
        G__8748.cljs$lang$maxFixedArity = 3;
        G__8748.cljs$lang$applyTo = function(arglist__8749) {
          var a = cljs.core.first(arglist__8749);
          var b = cljs.core.first(cljs.core.next(arglist__8749));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8749)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8749)));
          return G__8748__delegate(a, b, c, ds)
        };
        G__8748.cljs$lang$arity$variadic = G__8748__delegate;
        return G__8748
      }();
      G__8747 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8747__1.call(this, a);
          case 2:
            return G__8747__2.call(this, a, b);
          case 3:
            return G__8747__3.call(this, a, b, c);
          default:
            return G__8747__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8747.cljs$lang$maxFixedArity = 3;
      G__8747.cljs$lang$applyTo = G__8747__4.cljs$lang$applyTo;
      return G__8747
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8750 = null;
      var G__8750__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8750__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8750__4 = function() {
        var G__8751__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8751 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8751__delegate.call(this, a, b, c, ds)
        };
        G__8751.cljs$lang$maxFixedArity = 3;
        G__8751.cljs$lang$applyTo = function(arglist__8752) {
          var a = cljs.core.first(arglist__8752);
          var b = cljs.core.first(cljs.core.next(arglist__8752));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8752)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8752)));
          return G__8751__delegate(a, b, c, ds)
        };
        G__8751.cljs$lang$arity$variadic = G__8751__delegate;
        return G__8751
      }();
      G__8750 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8750__2.call(this, a, b);
          case 3:
            return G__8750__3.call(this, a, b, c);
          default:
            return G__8750__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8750.cljs$lang$maxFixedArity = 3;
      G__8750.cljs$lang$applyTo = G__8750__4.cljs$lang$applyTo;
      return G__8750
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8753 = null;
      var G__8753__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8753__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8753__4 = function() {
        var G__8754__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8754 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8754__delegate.call(this, a, b, c, ds)
        };
        G__8754.cljs$lang$maxFixedArity = 3;
        G__8754.cljs$lang$applyTo = function(arglist__8755) {
          var a = cljs.core.first(arglist__8755);
          var b = cljs.core.first(cljs.core.next(arglist__8755));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8755)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8755)));
          return G__8754__delegate(a, b, c, ds)
        };
        G__8754.cljs$lang$arity$variadic = G__8754__delegate;
        return G__8754
      }();
      G__8753 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8753__2.call(this, a, b);
          case 3:
            return G__8753__3.call(this, a, b, c);
          default:
            return G__8753__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8753.cljs$lang$maxFixedArity = 3;
      G__8753.cljs$lang$applyTo = G__8753__4.cljs$lang$applyTo;
      return G__8753
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8771 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8779 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8779) {
        var s__8780 = temp__4092__auto____8779;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8780)) {
          var c__8781 = cljs.core.chunk_first.call(null, s__8780);
          var size__8782 = cljs.core.count.call(null, c__8781);
          var b__8783 = cljs.core.chunk_buffer.call(null, size__8782);
          var n__2470__auto____8784 = size__8782;
          var i__8785 = 0;
          while(true) {
            if(i__8785 < n__2470__auto____8784) {
              cljs.core.chunk_append.call(null, b__8783, f.call(null, idx + i__8785, cljs.core._nth.call(null, c__8781, i__8785)));
              var G__8786 = i__8785 + 1;
              i__8785 = G__8786;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8783), mapi.call(null, idx + size__8782, cljs.core.chunk_rest.call(null, s__8780)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8780)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8780)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8771.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____8796 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____8796) {
      var s__8797 = temp__4092__auto____8796;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8797)) {
        var c__8798 = cljs.core.chunk_first.call(null, s__8797);
        var size__8799 = cljs.core.count.call(null, c__8798);
        var b__8800 = cljs.core.chunk_buffer.call(null, size__8799);
        var n__2470__auto____8801 = size__8799;
        var i__8802 = 0;
        while(true) {
          if(i__8802 < n__2470__auto____8801) {
            var x__8803 = f.call(null, cljs.core._nth.call(null, c__8798, i__8802));
            if(x__8803 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8800, x__8803)
            }
            var G__8805 = i__8802 + 1;
            i__8802 = G__8805;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8800), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8797)))
      }else {
        var x__8804 = f.call(null, cljs.core.first.call(null, s__8797));
        if(x__8804 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8797))
        }else {
          return cljs.core.cons.call(null, x__8804, keep.call(null, f, cljs.core.rest.call(null, s__8797)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8831 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8841 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8841) {
        var s__8842 = temp__4092__auto____8841;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8842)) {
          var c__8843 = cljs.core.chunk_first.call(null, s__8842);
          var size__8844 = cljs.core.count.call(null, c__8843);
          var b__8845 = cljs.core.chunk_buffer.call(null, size__8844);
          var n__2470__auto____8846 = size__8844;
          var i__8847 = 0;
          while(true) {
            if(i__8847 < n__2470__auto____8846) {
              var x__8848 = f.call(null, idx + i__8847, cljs.core._nth.call(null, c__8843, i__8847));
              if(x__8848 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8845, x__8848)
              }
              var G__8850 = i__8847 + 1;
              i__8847 = G__8850;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8845), keepi.call(null, idx + size__8844, cljs.core.chunk_rest.call(null, s__8842)))
        }else {
          var x__8849 = f.call(null, idx, cljs.core.first.call(null, s__8842));
          if(x__8849 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8842))
          }else {
            return cljs.core.cons.call(null, x__8849, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8842)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8831.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8936 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8936)) {
            return p.call(null, y)
          }else {
            return and__3941__auto____8936
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8937 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8937)) {
            var and__3941__auto____8938 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8938)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____8938
            }
          }else {
            return and__3941__auto____8937
          }
        }())
      };
      var ep1__4 = function() {
        var G__9007__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8939 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8939)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto____8939
            }
          }())
        };
        var G__9007 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9007__delegate.call(this, x, y, z, args)
        };
        G__9007.cljs$lang$maxFixedArity = 3;
        G__9007.cljs$lang$applyTo = function(arglist__9008) {
          var x = cljs.core.first(arglist__9008);
          var y = cljs.core.first(cljs.core.next(arglist__9008));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9008)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9008)));
          return G__9007__delegate(x, y, z, args)
        };
        G__9007.cljs$lang$arity$variadic = G__9007__delegate;
        return G__9007
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8951 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8951)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto____8951
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8952 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8952)) {
            var and__3941__auto____8953 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8953)) {
              var and__3941__auto____8954 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8954)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____8954
              }
            }else {
              return and__3941__auto____8953
            }
          }else {
            return and__3941__auto____8952
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8955 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8955)) {
            var and__3941__auto____8956 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8956)) {
              var and__3941__auto____8957 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____8957)) {
                var and__3941__auto____8958 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____8958)) {
                  var and__3941__auto____8959 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8959)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____8959
                  }
                }else {
                  return and__3941__auto____8958
                }
              }else {
                return and__3941__auto____8957
              }
            }else {
              return and__3941__auto____8956
            }
          }else {
            return and__3941__auto____8955
          }
        }())
      };
      var ep2__4 = function() {
        var G__9009__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8960 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8960)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8806_SHARP_) {
                var and__3941__auto____8961 = p1.call(null, p1__8806_SHARP_);
                if(cljs.core.truth_(and__3941__auto____8961)) {
                  return p2.call(null, p1__8806_SHARP_)
                }else {
                  return and__3941__auto____8961
                }
              }, args)
            }else {
              return and__3941__auto____8960
            }
          }())
        };
        var G__9009 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9009__delegate.call(this, x, y, z, args)
        };
        G__9009.cljs$lang$maxFixedArity = 3;
        G__9009.cljs$lang$applyTo = function(arglist__9010) {
          var x = cljs.core.first(arglist__9010);
          var y = cljs.core.first(cljs.core.next(arglist__9010));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9010)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9010)));
          return G__9009__delegate(x, y, z, args)
        };
        G__9009.cljs$lang$arity$variadic = G__9009__delegate;
        return G__9009
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8980 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8980)) {
            var and__3941__auto____8981 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8981)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____8981
            }
          }else {
            return and__3941__auto____8980
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8982 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8982)) {
            var and__3941__auto____8983 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8983)) {
              var and__3941__auto____8984 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8984)) {
                var and__3941__auto____8985 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____8985)) {
                  var and__3941__auto____8986 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8986)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____8986
                  }
                }else {
                  return and__3941__auto____8985
                }
              }else {
                return and__3941__auto____8984
              }
            }else {
              return and__3941__auto____8983
            }
          }else {
            return and__3941__auto____8982
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8987 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8987)) {
            var and__3941__auto____8988 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____8988)) {
              var and__3941__auto____8989 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8989)) {
                var and__3941__auto____8990 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____8990)) {
                  var and__3941__auto____8991 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8991)) {
                    var and__3941__auto____8992 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____8992)) {
                      var and__3941__auto____8993 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____8993)) {
                        var and__3941__auto____8994 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____8994)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____8994
                        }
                      }else {
                        return and__3941__auto____8993
                      }
                    }else {
                      return and__3941__auto____8992
                    }
                  }else {
                    return and__3941__auto____8991
                  }
                }else {
                  return and__3941__auto____8990
                }
              }else {
                return and__3941__auto____8989
              }
            }else {
              return and__3941__auto____8988
            }
          }else {
            return and__3941__auto____8987
          }
        }())
      };
      var ep3__4 = function() {
        var G__9011__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8995 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8995)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8807_SHARP_) {
                var and__3941__auto____8996 = p1.call(null, p1__8807_SHARP_);
                if(cljs.core.truth_(and__3941__auto____8996)) {
                  var and__3941__auto____8997 = p2.call(null, p1__8807_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____8997)) {
                    return p3.call(null, p1__8807_SHARP_)
                  }else {
                    return and__3941__auto____8997
                  }
                }else {
                  return and__3941__auto____8996
                }
              }, args)
            }else {
              return and__3941__auto____8995
            }
          }())
        };
        var G__9011 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9011__delegate.call(this, x, y, z, args)
        };
        G__9011.cljs$lang$maxFixedArity = 3;
        G__9011.cljs$lang$applyTo = function(arglist__9012) {
          var x = cljs.core.first(arglist__9012);
          var y = cljs.core.first(cljs.core.next(arglist__9012));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9012)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9012)));
          return G__9011__delegate(x, y, z, args)
        };
        G__9011.cljs$lang$arity$variadic = G__9011__delegate;
        return G__9011
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9013__delegate = function(p1, p2, p3, ps) {
      var ps__8998 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8808_SHARP_) {
            return p1__8808_SHARP_.call(null, x)
          }, ps__8998)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8809_SHARP_) {
            var and__3941__auto____9003 = p1__8809_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9003)) {
              return p1__8809_SHARP_.call(null, y)
            }else {
              return and__3941__auto____9003
            }
          }, ps__8998)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8810_SHARP_) {
            var and__3941__auto____9004 = p1__8810_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9004)) {
              var and__3941__auto____9005 = p1__8810_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____9005)) {
                return p1__8810_SHARP_.call(null, z)
              }else {
                return and__3941__auto____9005
              }
            }else {
              return and__3941__auto____9004
            }
          }, ps__8998)
        };
        var epn__4 = function() {
          var G__9014__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto____9006 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto____9006)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8811_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8811_SHARP_, args)
                }, ps__8998)
              }else {
                return and__3941__auto____9006
              }
            }())
          };
          var G__9014 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9014__delegate.call(this, x, y, z, args)
          };
          G__9014.cljs$lang$maxFixedArity = 3;
          G__9014.cljs$lang$applyTo = function(arglist__9015) {
            var x = cljs.core.first(arglist__9015);
            var y = cljs.core.first(cljs.core.next(arglist__9015));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9015)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9015)));
            return G__9014__delegate(x, y, z, args)
          };
          G__9014.cljs$lang$arity$variadic = G__9014__delegate;
          return G__9014
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9013 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9013__delegate.call(this, p1, p2, p3, ps)
    };
    G__9013.cljs$lang$maxFixedArity = 3;
    G__9013.cljs$lang$applyTo = function(arglist__9016) {
      var p1 = cljs.core.first(arglist__9016);
      var p2 = cljs.core.first(cljs.core.next(arglist__9016));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9016)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9016)));
      return G__9013__delegate(p1, p2, p3, ps)
    };
    G__9013.cljs$lang$arity$variadic = G__9013__delegate;
    return G__9013
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto____9097 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9097)) {
          return or__3943__auto____9097
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto____9098 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9098)) {
          return or__3943__auto____9098
        }else {
          var or__3943__auto____9099 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____9099)) {
            return or__3943__auto____9099
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9168__delegate = function(x, y, z, args) {
          var or__3943__auto____9100 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____9100)) {
            return or__3943__auto____9100
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9168 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9168__delegate.call(this, x, y, z, args)
        };
        G__9168.cljs$lang$maxFixedArity = 3;
        G__9168.cljs$lang$applyTo = function(arglist__9169) {
          var x = cljs.core.first(arglist__9169);
          var y = cljs.core.first(cljs.core.next(arglist__9169));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9169)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9169)));
          return G__9168__delegate(x, y, z, args)
        };
        G__9168.cljs$lang$arity$variadic = G__9168__delegate;
        return G__9168
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto____9112 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9112)) {
          return or__3943__auto____9112
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto____9113 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9113)) {
          return or__3943__auto____9113
        }else {
          var or__3943__auto____9114 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____9114)) {
            return or__3943__auto____9114
          }else {
            var or__3943__auto____9115 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9115)) {
              return or__3943__auto____9115
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto____9116 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9116)) {
          return or__3943__auto____9116
        }else {
          var or__3943__auto____9117 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____9117)) {
            return or__3943__auto____9117
          }else {
            var or__3943__auto____9118 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____9118)) {
              return or__3943__auto____9118
            }else {
              var or__3943__auto____9119 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____9119)) {
                return or__3943__auto____9119
              }else {
                var or__3943__auto____9120 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____9120)) {
                  return or__3943__auto____9120
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9170__delegate = function(x, y, z, args) {
          var or__3943__auto____9121 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____9121)) {
            return or__3943__auto____9121
          }else {
            return cljs.core.some.call(null, function(p1__8851_SHARP_) {
              var or__3943__auto____9122 = p1.call(null, p1__8851_SHARP_);
              if(cljs.core.truth_(or__3943__auto____9122)) {
                return or__3943__auto____9122
              }else {
                return p2.call(null, p1__8851_SHARP_)
              }
            }, args)
          }
        };
        var G__9170 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9170__delegate.call(this, x, y, z, args)
        };
        G__9170.cljs$lang$maxFixedArity = 3;
        G__9170.cljs$lang$applyTo = function(arglist__9171) {
          var x = cljs.core.first(arglist__9171);
          var y = cljs.core.first(cljs.core.next(arglist__9171));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9171)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9171)));
          return G__9170__delegate(x, y, z, args)
        };
        G__9170.cljs$lang$arity$variadic = G__9170__delegate;
        return G__9170
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto____9141 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9141)) {
          return or__3943__auto____9141
        }else {
          var or__3943__auto____9142 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____9142)) {
            return or__3943__auto____9142
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto____9143 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9143)) {
          return or__3943__auto____9143
        }else {
          var or__3943__auto____9144 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____9144)) {
            return or__3943__auto____9144
          }else {
            var or__3943__auto____9145 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9145)) {
              return or__3943__auto____9145
            }else {
              var or__3943__auto____9146 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____9146)) {
                return or__3943__auto____9146
              }else {
                var or__3943__auto____9147 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____9147)) {
                  return or__3943__auto____9147
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto____9148 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9148)) {
          return or__3943__auto____9148
        }else {
          var or__3943__auto____9149 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____9149)) {
            return or__3943__auto____9149
          }else {
            var or__3943__auto____9150 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9150)) {
              return or__3943__auto____9150
            }else {
              var or__3943__auto____9151 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____9151)) {
                return or__3943__auto____9151
              }else {
                var or__3943__auto____9152 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____9152)) {
                  return or__3943__auto____9152
                }else {
                  var or__3943__auto____9153 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____9153)) {
                    return or__3943__auto____9153
                  }else {
                    var or__3943__auto____9154 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____9154)) {
                      return or__3943__auto____9154
                    }else {
                      var or__3943__auto____9155 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____9155)) {
                        return or__3943__auto____9155
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9172__delegate = function(x, y, z, args) {
          var or__3943__auto____9156 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____9156)) {
            return or__3943__auto____9156
          }else {
            return cljs.core.some.call(null, function(p1__8852_SHARP_) {
              var or__3943__auto____9157 = p1.call(null, p1__8852_SHARP_);
              if(cljs.core.truth_(or__3943__auto____9157)) {
                return or__3943__auto____9157
              }else {
                var or__3943__auto____9158 = p2.call(null, p1__8852_SHARP_);
                if(cljs.core.truth_(or__3943__auto____9158)) {
                  return or__3943__auto____9158
                }else {
                  return p3.call(null, p1__8852_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9172 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9172__delegate.call(this, x, y, z, args)
        };
        G__9172.cljs$lang$maxFixedArity = 3;
        G__9172.cljs$lang$applyTo = function(arglist__9173) {
          var x = cljs.core.first(arglist__9173);
          var y = cljs.core.first(cljs.core.next(arglist__9173));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9173)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9173)));
          return G__9172__delegate(x, y, z, args)
        };
        G__9172.cljs$lang$arity$variadic = G__9172__delegate;
        return G__9172
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9174__delegate = function(p1, p2, p3, ps) {
      var ps__9159 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8853_SHARP_) {
            return p1__8853_SHARP_.call(null, x)
          }, ps__9159)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8854_SHARP_) {
            var or__3943__auto____9164 = p1__8854_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9164)) {
              return or__3943__auto____9164
            }else {
              return p1__8854_SHARP_.call(null, y)
            }
          }, ps__9159)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8855_SHARP_) {
            var or__3943__auto____9165 = p1__8855_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9165)) {
              return or__3943__auto____9165
            }else {
              var or__3943__auto____9166 = p1__8855_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____9166)) {
                return or__3943__auto____9166
              }else {
                return p1__8855_SHARP_.call(null, z)
              }
            }
          }, ps__9159)
        };
        var spn__4 = function() {
          var G__9175__delegate = function(x, y, z, args) {
            var or__3943__auto____9167 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto____9167)) {
              return or__3943__auto____9167
            }else {
              return cljs.core.some.call(null, function(p1__8856_SHARP_) {
                return cljs.core.some.call(null, p1__8856_SHARP_, args)
              }, ps__9159)
            }
          };
          var G__9175 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9175__delegate.call(this, x, y, z, args)
          };
          G__9175.cljs$lang$maxFixedArity = 3;
          G__9175.cljs$lang$applyTo = function(arglist__9176) {
            var x = cljs.core.first(arglist__9176);
            var y = cljs.core.first(cljs.core.next(arglist__9176));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9176)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9176)));
            return G__9175__delegate(x, y, z, args)
          };
          G__9175.cljs$lang$arity$variadic = G__9175__delegate;
          return G__9175
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9174 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9174__delegate.call(this, p1, p2, p3, ps)
    };
    G__9174.cljs$lang$maxFixedArity = 3;
    G__9174.cljs$lang$applyTo = function(arglist__9177) {
      var p1 = cljs.core.first(arglist__9177);
      var p2 = cljs.core.first(cljs.core.next(arglist__9177));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9177)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9177)));
      return G__9174__delegate(p1, p2, p3, ps)
    };
    G__9174.cljs$lang$arity$variadic = G__9174__delegate;
    return G__9174
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____9196 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9196) {
        var s__9197 = temp__4092__auto____9196;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9197)) {
          var c__9198 = cljs.core.chunk_first.call(null, s__9197);
          var size__9199 = cljs.core.count.call(null, c__9198);
          var b__9200 = cljs.core.chunk_buffer.call(null, size__9199);
          var n__2470__auto____9201 = size__9199;
          var i__9202 = 0;
          while(true) {
            if(i__9202 < n__2470__auto____9201) {
              cljs.core.chunk_append.call(null, b__9200, f.call(null, cljs.core._nth.call(null, c__9198, i__9202)));
              var G__9214 = i__9202 + 1;
              i__9202 = G__9214;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9200), map.call(null, f, cljs.core.chunk_rest.call(null, s__9197)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9197)), map.call(null, f, cljs.core.rest.call(null, s__9197)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9203 = cljs.core.seq.call(null, c1);
      var s2__9204 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____9205 = s1__9203;
        if(and__3941__auto____9205) {
          return s2__9204
        }else {
          return and__3941__auto____9205
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9203), cljs.core.first.call(null, s2__9204)), map.call(null, f, cljs.core.rest.call(null, s1__9203), cljs.core.rest.call(null, s2__9204)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9206 = cljs.core.seq.call(null, c1);
      var s2__9207 = cljs.core.seq.call(null, c2);
      var s3__9208 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto____9209 = s1__9206;
        if(and__3941__auto____9209) {
          var and__3941__auto____9210 = s2__9207;
          if(and__3941__auto____9210) {
            return s3__9208
          }else {
            return and__3941__auto____9210
          }
        }else {
          return and__3941__auto____9209
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9206), cljs.core.first.call(null, s2__9207), cljs.core.first.call(null, s3__9208)), map.call(null, f, cljs.core.rest.call(null, s1__9206), cljs.core.rest.call(null, s2__9207), cljs.core.rest.call(null, s3__9208)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9215__delegate = function(f, c1, c2, c3, colls) {
      var step__9213 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9212 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9212)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9212), step.call(null, map.call(null, cljs.core.rest, ss__9212)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9017_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9017_SHARP_)
      }, step__9213.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9215 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9215__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9215.cljs$lang$maxFixedArity = 4;
    G__9215.cljs$lang$applyTo = function(arglist__9216) {
      var f = cljs.core.first(arglist__9216);
      var c1 = cljs.core.first(cljs.core.next(arglist__9216));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9216)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9216))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9216))));
      return G__9215__delegate(f, c1, c2, c3, colls)
    };
    G__9215.cljs$lang$arity$variadic = G__9215__delegate;
    return G__9215
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto____9219 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9219) {
        var s__9220 = temp__4092__auto____9219;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9220), take.call(null, n - 1, cljs.core.rest.call(null, s__9220)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9226 = function(n, coll) {
    while(true) {
      var s__9224 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____9225 = n > 0;
        if(and__3941__auto____9225) {
          return s__9224
        }else {
          return and__3941__auto____9225
        }
      }())) {
        var G__9227 = n - 1;
        var G__9228 = cljs.core.rest.call(null, s__9224);
        n = G__9227;
        coll = G__9228;
        continue
      }else {
        return s__9224
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9226.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9231 = cljs.core.seq.call(null, coll);
  var lead__9232 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9232) {
      var G__9233 = cljs.core.next.call(null, s__9231);
      var G__9234 = cljs.core.next.call(null, lead__9232);
      s__9231 = G__9233;
      lead__9232 = G__9234;
      continue
    }else {
      return s__9231
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9240 = function(pred, coll) {
    while(true) {
      var s__9238 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____9239 = s__9238;
        if(and__3941__auto____9239) {
          return pred.call(null, cljs.core.first.call(null, s__9238))
        }else {
          return and__3941__auto____9239
        }
      }())) {
        var G__9241 = pred;
        var G__9242 = cljs.core.rest.call(null, s__9238);
        pred = G__9241;
        coll = G__9242;
        continue
      }else {
        return s__9238
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9240.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____9245 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____9245) {
      var s__9246 = temp__4092__auto____9245;
      return cljs.core.concat.call(null, s__9246, cycle.call(null, s__9246))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9251 = cljs.core.seq.call(null, c1);
      var s2__9252 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____9253 = s1__9251;
        if(and__3941__auto____9253) {
          return s2__9252
        }else {
          return and__3941__auto____9253
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9251), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9252), interleave.call(null, cljs.core.rest.call(null, s1__9251), cljs.core.rest.call(null, s2__9252))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9255__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9254 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9254)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9254), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9254)))
        }else {
          return null
        }
      }, null)
    };
    var G__9255 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9255__delegate.call(this, c1, c2, colls)
    };
    G__9255.cljs$lang$maxFixedArity = 2;
    G__9255.cljs$lang$applyTo = function(arglist__9256) {
      var c1 = cljs.core.first(arglist__9256);
      var c2 = cljs.core.first(cljs.core.next(arglist__9256));
      var colls = cljs.core.rest(cljs.core.next(arglist__9256));
      return G__9255__delegate(c1, c2, colls)
    };
    G__9255.cljs$lang$arity$variadic = G__9255__delegate;
    return G__9255
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9266 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____9264 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____9264) {
        var coll__9265 = temp__4090__auto____9264;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9265), cat.call(null, cljs.core.rest.call(null, coll__9265), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9266.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9267__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9267 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9267__delegate.call(this, f, coll, colls)
    };
    G__9267.cljs$lang$maxFixedArity = 2;
    G__9267.cljs$lang$applyTo = function(arglist__9268) {
      var f = cljs.core.first(arglist__9268);
      var coll = cljs.core.first(cljs.core.next(arglist__9268));
      var colls = cljs.core.rest(cljs.core.next(arglist__9268));
      return G__9267__delegate(f, coll, colls)
    };
    G__9267.cljs$lang$arity$variadic = G__9267__delegate;
    return G__9267
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____9278 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____9278) {
      var s__9279 = temp__4092__auto____9278;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9279)) {
        var c__9280 = cljs.core.chunk_first.call(null, s__9279);
        var size__9281 = cljs.core.count.call(null, c__9280);
        var b__9282 = cljs.core.chunk_buffer.call(null, size__9281);
        var n__2470__auto____9283 = size__9281;
        var i__9284 = 0;
        while(true) {
          if(i__9284 < n__2470__auto____9283) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9280, i__9284)))) {
              cljs.core.chunk_append.call(null, b__9282, cljs.core._nth.call(null, c__9280, i__9284))
            }else {
            }
            var G__9287 = i__9284 + 1;
            i__9284 = G__9287;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9282), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9279)))
      }else {
        var f__9285 = cljs.core.first.call(null, s__9279);
        var r__9286 = cljs.core.rest.call(null, s__9279);
        if(cljs.core.truth_(pred.call(null, f__9285))) {
          return cljs.core.cons.call(null, f__9285, filter.call(null, pred, r__9286))
        }else {
          return filter.call(null, pred, r__9286)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9290 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9290.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9288_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9288_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9294__9295 = to;
    if(G__9294__9295) {
      if(function() {
        var or__3943__auto____9296 = G__9294__9295.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3943__auto____9296) {
          return or__3943__auto____9296
        }else {
          return G__9294__9295.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9294__9295.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9294__9295)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9294__9295)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9297__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9297 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9297__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9297.cljs$lang$maxFixedArity = 4;
    G__9297.cljs$lang$applyTo = function(arglist__9298) {
      var f = cljs.core.first(arglist__9298);
      var c1 = cljs.core.first(cljs.core.next(arglist__9298));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9298)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9298))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9298))));
      return G__9297__delegate(f, c1, c2, c3, colls)
    };
    G__9297.cljs$lang$arity$variadic = G__9297__delegate;
    return G__9297
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____9305 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9305) {
        var s__9306 = temp__4092__auto____9305;
        var p__9307 = cljs.core.take.call(null, n, s__9306);
        if(n === cljs.core.count.call(null, p__9307)) {
          return cljs.core.cons.call(null, p__9307, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9306)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____9308 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9308) {
        var s__9309 = temp__4092__auto____9308;
        var p__9310 = cljs.core.take.call(null, n, s__9309);
        if(n === cljs.core.count.call(null, p__9310)) {
          return cljs.core.cons.call(null, p__9310, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9309)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9310, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9315 = cljs.core.lookup_sentinel;
    var m__9316 = m;
    var ks__9317 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9317) {
        var m__9318 = cljs.core._lookup.call(null, m__9316, cljs.core.first.call(null, ks__9317), sentinel__9315);
        if(sentinel__9315 === m__9318) {
          return not_found
        }else {
          var G__9319 = sentinel__9315;
          var G__9320 = m__9318;
          var G__9321 = cljs.core.next.call(null, ks__9317);
          sentinel__9315 = G__9319;
          m__9316 = G__9320;
          ks__9317 = G__9321;
          continue
        }
      }else {
        return m__9316
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9322, v) {
  var vec__9327__9328 = p__9322;
  var k__9329 = cljs.core.nth.call(null, vec__9327__9328, 0, null);
  var ks__9330 = cljs.core.nthnext.call(null, vec__9327__9328, 1);
  if(cljs.core.truth_(ks__9330)) {
    return cljs.core.assoc.call(null, m, k__9329, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9329, null), ks__9330, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9329, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9331, f, args) {
    var vec__9336__9337 = p__9331;
    var k__9338 = cljs.core.nth.call(null, vec__9336__9337, 0, null);
    var ks__9339 = cljs.core.nthnext.call(null, vec__9336__9337, 1);
    if(cljs.core.truth_(ks__9339)) {
      return cljs.core.assoc.call(null, m, k__9338, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9338, null), ks__9339, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9338, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9338, null), args))
    }
  };
  var update_in = function(m, p__9331, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9331, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9340) {
    var m = cljs.core.first(arglist__9340);
    var p__9331 = cljs.core.first(cljs.core.next(arglist__9340));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9340)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9340)));
    return update_in__delegate(m, p__9331, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9343 = this;
  var h__2135__auto____9344 = this__9343.__hash;
  if(!(h__2135__auto____9344 == null)) {
    return h__2135__auto____9344
  }else {
    var h__2135__auto____9345 = cljs.core.hash_coll.call(null, coll);
    this__9343.__hash = h__2135__auto____9345;
    return h__2135__auto____9345
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9346 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9347 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9348 = this;
  var new_array__9349 = this__9348.array.slice();
  new_array__9349[k] = v;
  return new cljs.core.Vector(this__9348.meta, new_array__9349, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9380 = null;
  var G__9380__2 = function(this_sym9350, k) {
    var this__9352 = this;
    var this_sym9350__9353 = this;
    var coll__9354 = this_sym9350__9353;
    return coll__9354.cljs$core$ILookup$_lookup$arity$2(coll__9354, k)
  };
  var G__9380__3 = function(this_sym9351, k, not_found) {
    var this__9352 = this;
    var this_sym9351__9355 = this;
    var coll__9356 = this_sym9351__9355;
    return coll__9356.cljs$core$ILookup$_lookup$arity$3(coll__9356, k, not_found)
  };
  G__9380 = function(this_sym9351, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9380__2.call(this, this_sym9351, k);
      case 3:
        return G__9380__3.call(this, this_sym9351, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9380
}();
cljs.core.Vector.prototype.apply = function(this_sym9341, args9342) {
  var this__9357 = this;
  return this_sym9341.call.apply(this_sym9341, [this_sym9341].concat(args9342.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9358 = this;
  var new_array__9359 = this__9358.array.slice();
  new_array__9359.push(o);
  return new cljs.core.Vector(this__9358.meta, new_array__9359, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9360 = this;
  var this__9361 = this;
  return cljs.core.pr_str.call(null, this__9361)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9362 = this;
  return cljs.core.ci_reduce.call(null, this__9362.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9363 = this;
  return cljs.core.ci_reduce.call(null, this__9363.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9364 = this;
  if(this__9364.array.length > 0) {
    var vector_seq__9365 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9364.array.length) {
          return cljs.core.cons.call(null, this__9364.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9365.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9366 = this;
  return this__9366.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9367 = this;
  var count__9368 = this__9367.array.length;
  if(count__9368 > 0) {
    return this__9367.array[count__9368 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9369 = this;
  if(this__9369.array.length > 0) {
    var new_array__9370 = this__9369.array.slice();
    new_array__9370.pop();
    return new cljs.core.Vector(this__9369.meta, new_array__9370, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9371 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9372 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9373 = this;
  return new cljs.core.Vector(meta, this__9373.array, this__9373.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9374 = this;
  return this__9374.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9375 = this;
  if(function() {
    var and__3941__auto____9376 = 0 <= n;
    if(and__3941__auto____9376) {
      return n < this__9375.array.length
    }else {
      return and__3941__auto____9376
    }
  }()) {
    return this__9375.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9377 = this;
  if(function() {
    var and__3941__auto____9378 = 0 <= n;
    if(and__3941__auto____9378) {
      return n < this__9377.array.length
    }else {
      return and__3941__auto____9378
    }
  }()) {
    return this__9377.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9379 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9379.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2253__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9382 = pv.cnt;
  if(cnt__9382 < 32) {
    return 0
  }else {
    return cnt__9382 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9388 = level;
  var ret__9389 = node;
  while(true) {
    if(ll__9388 === 0) {
      return ret__9389
    }else {
      var embed__9390 = ret__9389;
      var r__9391 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9392 = cljs.core.pv_aset.call(null, r__9391, 0, embed__9390);
      var G__9393 = ll__9388 - 5;
      var G__9394 = r__9391;
      ll__9388 = G__9393;
      ret__9389 = G__9394;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9400 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9401 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9400, subidx__9401, tailnode);
    return ret__9400
  }else {
    var child__9402 = cljs.core.pv_aget.call(null, parent, subidx__9401);
    if(!(child__9402 == null)) {
      var node_to_insert__9403 = push_tail.call(null, pv, level - 5, child__9402, tailnode);
      cljs.core.pv_aset.call(null, ret__9400, subidx__9401, node_to_insert__9403);
      return ret__9400
    }else {
      var node_to_insert__9404 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9400, subidx__9401, node_to_insert__9404);
      return ret__9400
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto____9408 = 0 <= i;
    if(and__3941__auto____9408) {
      return i < pv.cnt
    }else {
      return and__3941__auto____9408
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9409 = pv.root;
      var level__9410 = pv.shift;
      while(true) {
        if(level__9410 > 0) {
          var G__9411 = cljs.core.pv_aget.call(null, node__9409, i >>> level__9410 & 31);
          var G__9412 = level__9410 - 5;
          node__9409 = G__9411;
          level__9410 = G__9412;
          continue
        }else {
          return node__9409.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9415 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9415, i & 31, val);
    return ret__9415
  }else {
    var subidx__9416 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9415, subidx__9416, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9416), i, val));
    return ret__9415
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9422 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9423 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9422));
    if(function() {
      var and__3941__auto____9424 = new_child__9423 == null;
      if(and__3941__auto____9424) {
        return subidx__9422 === 0
      }else {
        return and__3941__auto____9424
      }
    }()) {
      return null
    }else {
      var ret__9425 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9425, subidx__9422, new_child__9423);
      return ret__9425
    }
  }else {
    if(subidx__9422 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9426 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9426, subidx__9422, null);
        return ret__9426
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9429 = this;
  return new cljs.core.TransientVector(this__9429.cnt, this__9429.shift, cljs.core.tv_editable_root.call(null, this__9429.root), cljs.core.tv_editable_tail.call(null, this__9429.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9430 = this;
  var h__2135__auto____9431 = this__9430.__hash;
  if(!(h__2135__auto____9431 == null)) {
    return h__2135__auto____9431
  }else {
    var h__2135__auto____9432 = cljs.core.hash_coll.call(null, coll);
    this__9430.__hash = h__2135__auto____9432;
    return h__2135__auto____9432
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9433 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9434 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9435 = this;
  if(function() {
    var and__3941__auto____9436 = 0 <= k;
    if(and__3941__auto____9436) {
      return k < this__9435.cnt
    }else {
      return and__3941__auto____9436
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9437 = this__9435.tail.slice();
      new_tail__9437[k & 31] = v;
      return new cljs.core.PersistentVector(this__9435.meta, this__9435.cnt, this__9435.shift, this__9435.root, new_tail__9437, null)
    }else {
      return new cljs.core.PersistentVector(this__9435.meta, this__9435.cnt, this__9435.shift, cljs.core.do_assoc.call(null, coll, this__9435.shift, this__9435.root, k, v), this__9435.tail, null)
    }
  }else {
    if(k === this__9435.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9435.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9485 = null;
  var G__9485__2 = function(this_sym9438, k) {
    var this__9440 = this;
    var this_sym9438__9441 = this;
    var coll__9442 = this_sym9438__9441;
    return coll__9442.cljs$core$ILookup$_lookup$arity$2(coll__9442, k)
  };
  var G__9485__3 = function(this_sym9439, k, not_found) {
    var this__9440 = this;
    var this_sym9439__9443 = this;
    var coll__9444 = this_sym9439__9443;
    return coll__9444.cljs$core$ILookup$_lookup$arity$3(coll__9444, k, not_found)
  };
  G__9485 = function(this_sym9439, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9485__2.call(this, this_sym9439, k);
      case 3:
        return G__9485__3.call(this, this_sym9439, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9485
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9427, args9428) {
  var this__9445 = this;
  return this_sym9427.call.apply(this_sym9427, [this_sym9427].concat(args9428.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9446 = this;
  var step_init__9447 = [0, init];
  var i__9448 = 0;
  while(true) {
    if(i__9448 < this__9446.cnt) {
      var arr__9449 = cljs.core.array_for.call(null, v, i__9448);
      var len__9450 = arr__9449.length;
      var init__9454 = function() {
        var j__9451 = 0;
        var init__9452 = step_init__9447[1];
        while(true) {
          if(j__9451 < len__9450) {
            var init__9453 = f.call(null, init__9452, j__9451 + i__9448, arr__9449[j__9451]);
            if(cljs.core.reduced_QMARK_.call(null, init__9453)) {
              return init__9453
            }else {
              var G__9486 = j__9451 + 1;
              var G__9487 = init__9453;
              j__9451 = G__9486;
              init__9452 = G__9487;
              continue
            }
          }else {
            step_init__9447[0] = len__9450;
            step_init__9447[1] = init__9452;
            return init__9452
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9454)) {
        return cljs.core.deref.call(null, init__9454)
      }else {
        var G__9488 = i__9448 + step_init__9447[0];
        i__9448 = G__9488;
        continue
      }
    }else {
      return step_init__9447[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9455 = this;
  if(this__9455.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9456 = this__9455.tail.slice();
    new_tail__9456.push(o);
    return new cljs.core.PersistentVector(this__9455.meta, this__9455.cnt + 1, this__9455.shift, this__9455.root, new_tail__9456, null)
  }else {
    var root_overflow_QMARK___9457 = this__9455.cnt >>> 5 > 1 << this__9455.shift;
    var new_shift__9458 = root_overflow_QMARK___9457 ? this__9455.shift + 5 : this__9455.shift;
    var new_root__9460 = root_overflow_QMARK___9457 ? function() {
      var n_r__9459 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9459, 0, this__9455.root);
      cljs.core.pv_aset.call(null, n_r__9459, 1, cljs.core.new_path.call(null, null, this__9455.shift, new cljs.core.VectorNode(null, this__9455.tail)));
      return n_r__9459
    }() : cljs.core.push_tail.call(null, coll, this__9455.shift, this__9455.root, new cljs.core.VectorNode(null, this__9455.tail));
    return new cljs.core.PersistentVector(this__9455.meta, this__9455.cnt + 1, new_shift__9458, new_root__9460, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9461 = this;
  if(this__9461.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9461.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9462 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9463 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9464 = this;
  var this__9465 = this;
  return cljs.core.pr_str.call(null, this__9465)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9466 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9467 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9468 = this;
  if(this__9468.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9469 = this;
  return this__9469.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9470 = this;
  if(this__9470.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9470.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9471 = this;
  if(this__9471.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9471.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9471.meta)
    }else {
      if(1 < this__9471.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9471.meta, this__9471.cnt - 1, this__9471.shift, this__9471.root, this__9471.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9472 = cljs.core.array_for.call(null, coll, this__9471.cnt - 2);
          var nr__9473 = cljs.core.pop_tail.call(null, coll, this__9471.shift, this__9471.root);
          var new_root__9474 = nr__9473 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9473;
          var cnt_1__9475 = this__9471.cnt - 1;
          if(function() {
            var and__3941__auto____9476 = 5 < this__9471.shift;
            if(and__3941__auto____9476) {
              return cljs.core.pv_aget.call(null, new_root__9474, 1) == null
            }else {
              return and__3941__auto____9476
            }
          }()) {
            return new cljs.core.PersistentVector(this__9471.meta, cnt_1__9475, this__9471.shift - 5, cljs.core.pv_aget.call(null, new_root__9474, 0), new_tail__9472, null)
          }else {
            return new cljs.core.PersistentVector(this__9471.meta, cnt_1__9475, this__9471.shift, new_root__9474, new_tail__9472, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9477 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9478 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9479 = this;
  return new cljs.core.PersistentVector(meta, this__9479.cnt, this__9479.shift, this__9479.root, this__9479.tail, this__9479.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9480 = this;
  return this__9480.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9481 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9482 = this;
  if(function() {
    var and__3941__auto____9483 = 0 <= n;
    if(and__3941__auto____9483) {
      return n < this__9482.cnt
    }else {
      return and__3941__auto____9483
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9484 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9484.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9489 = xs.length;
  var xs__9490 = no_clone === true ? xs : xs.slice();
  if(l__9489 < 32) {
    return new cljs.core.PersistentVector(null, l__9489, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9490, null)
  }else {
    var node__9491 = xs__9490.slice(0, 32);
    var v__9492 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9491, null);
    var i__9493 = 32;
    var out__9494 = cljs.core._as_transient.call(null, v__9492);
    while(true) {
      if(i__9493 < l__9489) {
        var G__9495 = i__9493 + 1;
        var G__9496 = cljs.core.conj_BANG_.call(null, out__9494, xs__9490[i__9493]);
        i__9493 = G__9495;
        out__9494 = G__9496;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9494)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9497) {
    var args = cljs.core.seq(arglist__9497);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9498 = this;
  if(this__9498.off + 1 < this__9498.node.length) {
    var s__9499 = cljs.core.chunked_seq.call(null, this__9498.vec, this__9498.node, this__9498.i, this__9498.off + 1);
    if(s__9499 == null) {
      return null
    }else {
      return s__9499
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9500 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9501 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9502 = this;
  return this__9502.node[this__9502.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9503 = this;
  if(this__9503.off + 1 < this__9503.node.length) {
    var s__9504 = cljs.core.chunked_seq.call(null, this__9503.vec, this__9503.node, this__9503.i, this__9503.off + 1);
    if(s__9504 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9504
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9505 = this;
  var l__9506 = this__9505.node.length;
  var s__9507 = this__9505.i + l__9506 < cljs.core._count.call(null, this__9505.vec) ? cljs.core.chunked_seq.call(null, this__9505.vec, this__9505.i + l__9506, 0) : null;
  if(s__9507 == null) {
    return null
  }else {
    return s__9507
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9508 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9509 = this;
  return cljs.core.chunked_seq.call(null, this__9509.vec, this__9509.node, this__9509.i, this__9509.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9510 = this;
  return this__9510.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9511 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9511.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9512 = this;
  return cljs.core.array_chunk.call(null, this__9512.node, this__9512.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9513 = this;
  var l__9514 = this__9513.node.length;
  var s__9515 = this__9513.i + l__9514 < cljs.core._count.call(null, this__9513.vec) ? cljs.core.chunked_seq.call(null, this__9513.vec, this__9513.i + l__9514, 0) : null;
  if(s__9515 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9515
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9518 = this;
  var h__2135__auto____9519 = this__9518.__hash;
  if(!(h__2135__auto____9519 == null)) {
    return h__2135__auto____9519
  }else {
    var h__2135__auto____9520 = cljs.core.hash_coll.call(null, coll);
    this__9518.__hash = h__2135__auto____9520;
    return h__2135__auto____9520
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9521 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9522 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9523 = this;
  var v_pos__9524 = this__9523.start + key;
  return new cljs.core.Subvec(this__9523.meta, cljs.core._assoc.call(null, this__9523.v, v_pos__9524, val), this__9523.start, this__9523.end > v_pos__9524 + 1 ? this__9523.end : v_pos__9524 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9550 = null;
  var G__9550__2 = function(this_sym9525, k) {
    var this__9527 = this;
    var this_sym9525__9528 = this;
    var coll__9529 = this_sym9525__9528;
    return coll__9529.cljs$core$ILookup$_lookup$arity$2(coll__9529, k)
  };
  var G__9550__3 = function(this_sym9526, k, not_found) {
    var this__9527 = this;
    var this_sym9526__9530 = this;
    var coll__9531 = this_sym9526__9530;
    return coll__9531.cljs$core$ILookup$_lookup$arity$3(coll__9531, k, not_found)
  };
  G__9550 = function(this_sym9526, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9550__2.call(this, this_sym9526, k);
      case 3:
        return G__9550__3.call(this, this_sym9526, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9550
}();
cljs.core.Subvec.prototype.apply = function(this_sym9516, args9517) {
  var this__9532 = this;
  return this_sym9516.call.apply(this_sym9516, [this_sym9516].concat(args9517.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9533 = this;
  return new cljs.core.Subvec(this__9533.meta, cljs.core._assoc_n.call(null, this__9533.v, this__9533.end, o), this__9533.start, this__9533.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9534 = this;
  var this__9535 = this;
  return cljs.core.pr_str.call(null, this__9535)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9536 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9537 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9538 = this;
  var subvec_seq__9539 = function subvec_seq(i) {
    if(i === this__9538.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9538.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9539.call(null, this__9538.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9540 = this;
  return this__9540.end - this__9540.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9541 = this;
  return cljs.core._nth.call(null, this__9541.v, this__9541.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9542 = this;
  if(this__9542.start === this__9542.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9542.meta, this__9542.v, this__9542.start, this__9542.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9543 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9544 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9545 = this;
  return new cljs.core.Subvec(meta, this__9545.v, this__9545.start, this__9545.end, this__9545.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9546 = this;
  return this__9546.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9547 = this;
  return cljs.core._nth.call(null, this__9547.v, this__9547.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9548 = this;
  return cljs.core._nth.call(null, this__9548.v, this__9548.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9549 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9549.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9552 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9552, 0, tl.length);
  return ret__9552
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9556 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9557 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9556, subidx__9557, level === 5 ? tail_node : function() {
    var child__9558 = cljs.core.pv_aget.call(null, ret__9556, subidx__9557);
    if(!(child__9558 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9558, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9556
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9563 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9564 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9565 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9563, subidx__9564));
    if(function() {
      var and__3941__auto____9566 = new_child__9565 == null;
      if(and__3941__auto____9566) {
        return subidx__9564 === 0
      }else {
        return and__3941__auto____9566
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9563, subidx__9564, new_child__9565);
      return node__9563
    }
  }else {
    if(subidx__9564 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9563, subidx__9564, null);
        return node__9563
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto____9571 = 0 <= i;
    if(and__3941__auto____9571) {
      return i < tv.cnt
    }else {
      return and__3941__auto____9571
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9572 = tv.root;
      var node__9573 = root__9572;
      var level__9574 = tv.shift;
      while(true) {
        if(level__9574 > 0) {
          var G__9575 = cljs.core.tv_ensure_editable.call(null, root__9572.edit, cljs.core.pv_aget.call(null, node__9573, i >>> level__9574 & 31));
          var G__9576 = level__9574 - 5;
          node__9573 = G__9575;
          level__9574 = G__9576;
          continue
        }else {
          return node__9573.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9616 = null;
  var G__9616__2 = function(this_sym9579, k) {
    var this__9581 = this;
    var this_sym9579__9582 = this;
    var coll__9583 = this_sym9579__9582;
    return coll__9583.cljs$core$ILookup$_lookup$arity$2(coll__9583, k)
  };
  var G__9616__3 = function(this_sym9580, k, not_found) {
    var this__9581 = this;
    var this_sym9580__9584 = this;
    var coll__9585 = this_sym9580__9584;
    return coll__9585.cljs$core$ILookup$_lookup$arity$3(coll__9585, k, not_found)
  };
  G__9616 = function(this_sym9580, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9616__2.call(this, this_sym9580, k);
      case 3:
        return G__9616__3.call(this, this_sym9580, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9616
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9577, args9578) {
  var this__9586 = this;
  return this_sym9577.call.apply(this_sym9577, [this_sym9577].concat(args9578.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9587 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9588 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9589 = this;
  if(this__9589.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9590 = this;
  if(function() {
    var and__3941__auto____9591 = 0 <= n;
    if(and__3941__auto____9591) {
      return n < this__9590.cnt
    }else {
      return and__3941__auto____9591
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9592 = this;
  if(this__9592.root.edit) {
    return this__9592.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9593 = this;
  if(this__9593.root.edit) {
    if(function() {
      var and__3941__auto____9594 = 0 <= n;
      if(and__3941__auto____9594) {
        return n < this__9593.cnt
      }else {
        return and__3941__auto____9594
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9593.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9599 = function go(level, node) {
          var node__9597 = cljs.core.tv_ensure_editable.call(null, this__9593.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9597, n & 31, val);
            return node__9597
          }else {
            var subidx__9598 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9597, subidx__9598, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9597, subidx__9598)));
            return node__9597
          }
        }.call(null, this__9593.shift, this__9593.root);
        this__9593.root = new_root__9599;
        return tcoll
      }
    }else {
      if(n === this__9593.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9593.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9600 = this;
  if(this__9600.root.edit) {
    if(this__9600.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9600.cnt) {
        this__9600.cnt = 0;
        return tcoll
      }else {
        if((this__9600.cnt - 1 & 31) > 0) {
          this__9600.cnt = this__9600.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9601 = cljs.core.editable_array_for.call(null, tcoll, this__9600.cnt - 2);
            var new_root__9603 = function() {
              var nr__9602 = cljs.core.tv_pop_tail.call(null, tcoll, this__9600.shift, this__9600.root);
              if(!(nr__9602 == null)) {
                return nr__9602
              }else {
                return new cljs.core.VectorNode(this__9600.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3941__auto____9604 = 5 < this__9600.shift;
              if(and__3941__auto____9604) {
                return cljs.core.pv_aget.call(null, new_root__9603, 1) == null
              }else {
                return and__3941__auto____9604
              }
            }()) {
              var new_root__9605 = cljs.core.tv_ensure_editable.call(null, this__9600.root.edit, cljs.core.pv_aget.call(null, new_root__9603, 0));
              this__9600.root = new_root__9605;
              this__9600.shift = this__9600.shift - 5;
              this__9600.cnt = this__9600.cnt - 1;
              this__9600.tail = new_tail__9601;
              return tcoll
            }else {
              this__9600.root = new_root__9603;
              this__9600.cnt = this__9600.cnt - 1;
              this__9600.tail = new_tail__9601;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9606 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9607 = this;
  if(this__9607.root.edit) {
    if(this__9607.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9607.tail[this__9607.cnt & 31] = o;
      this__9607.cnt = this__9607.cnt + 1;
      return tcoll
    }else {
      var tail_node__9608 = new cljs.core.VectorNode(this__9607.root.edit, this__9607.tail);
      var new_tail__9609 = cljs.core.make_array.call(null, 32);
      new_tail__9609[0] = o;
      this__9607.tail = new_tail__9609;
      if(this__9607.cnt >>> 5 > 1 << this__9607.shift) {
        var new_root_array__9610 = cljs.core.make_array.call(null, 32);
        var new_shift__9611 = this__9607.shift + 5;
        new_root_array__9610[0] = this__9607.root;
        new_root_array__9610[1] = cljs.core.new_path.call(null, this__9607.root.edit, this__9607.shift, tail_node__9608);
        this__9607.root = new cljs.core.VectorNode(this__9607.root.edit, new_root_array__9610);
        this__9607.shift = new_shift__9611;
        this__9607.cnt = this__9607.cnt + 1;
        return tcoll
      }else {
        var new_root__9612 = cljs.core.tv_push_tail.call(null, tcoll, this__9607.shift, this__9607.root, tail_node__9608);
        this__9607.root = new_root__9612;
        this__9607.cnt = this__9607.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9613 = this;
  if(this__9613.root.edit) {
    this__9613.root.edit = null;
    var len__9614 = this__9613.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9615 = cljs.core.make_array.call(null, len__9614);
    cljs.core.array_copy.call(null, this__9613.tail, 0, trimmed_tail__9615, 0, len__9614);
    return new cljs.core.PersistentVector(null, this__9613.cnt, this__9613.shift, this__9613.root, trimmed_tail__9615, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9617 = this;
  var h__2135__auto____9618 = this__9617.__hash;
  if(!(h__2135__auto____9618 == null)) {
    return h__2135__auto____9618
  }else {
    var h__2135__auto____9619 = cljs.core.hash_coll.call(null, coll);
    this__9617.__hash = h__2135__auto____9619;
    return h__2135__auto____9619
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9620 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9621 = this;
  var this__9622 = this;
  return cljs.core.pr_str.call(null, this__9622)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9623 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9624 = this;
  return cljs.core._first.call(null, this__9624.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9625 = this;
  var temp__4090__auto____9626 = cljs.core.next.call(null, this__9625.front);
  if(temp__4090__auto____9626) {
    var f1__9627 = temp__4090__auto____9626;
    return new cljs.core.PersistentQueueSeq(this__9625.meta, f1__9627, this__9625.rear, null)
  }else {
    if(this__9625.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9625.meta, this__9625.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9628 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9629 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9629.front, this__9629.rear, this__9629.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9630 = this;
  return this__9630.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9631 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9631.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9632 = this;
  var h__2135__auto____9633 = this__9632.__hash;
  if(!(h__2135__auto____9633 == null)) {
    return h__2135__auto____9633
  }else {
    var h__2135__auto____9634 = cljs.core.hash_coll.call(null, coll);
    this__9632.__hash = h__2135__auto____9634;
    return h__2135__auto____9634
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9635 = this;
  if(cljs.core.truth_(this__9635.front)) {
    return new cljs.core.PersistentQueue(this__9635.meta, this__9635.count + 1, this__9635.front, cljs.core.conj.call(null, function() {
      var or__3943__auto____9636 = this__9635.rear;
      if(cljs.core.truth_(or__3943__auto____9636)) {
        return or__3943__auto____9636
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9635.meta, this__9635.count + 1, cljs.core.conj.call(null, this__9635.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9637 = this;
  var this__9638 = this;
  return cljs.core.pr_str.call(null, this__9638)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9639 = this;
  var rear__9640 = cljs.core.seq.call(null, this__9639.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto____9641 = this__9639.front;
    if(cljs.core.truth_(or__3943__auto____9641)) {
      return or__3943__auto____9641
    }else {
      return rear__9640
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9639.front, cljs.core.seq.call(null, rear__9640), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9642 = this;
  return this__9642.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9643 = this;
  return cljs.core._first.call(null, this__9643.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9644 = this;
  if(cljs.core.truth_(this__9644.front)) {
    var temp__4090__auto____9645 = cljs.core.next.call(null, this__9644.front);
    if(temp__4090__auto____9645) {
      var f1__9646 = temp__4090__auto____9645;
      return new cljs.core.PersistentQueue(this__9644.meta, this__9644.count - 1, f1__9646, this__9644.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9644.meta, this__9644.count - 1, cljs.core.seq.call(null, this__9644.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9647 = this;
  return cljs.core.first.call(null, this__9647.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9648 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9649 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9650 = this;
  return new cljs.core.PersistentQueue(meta, this__9650.count, this__9650.front, this__9650.rear, this__9650.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9651 = this;
  return this__9651.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9652 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9653 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9656 = array.length;
  var i__9657 = 0;
  while(true) {
    if(i__9657 < len__9656) {
      if(k === array[i__9657]) {
        return i__9657
      }else {
        var G__9658 = i__9657 + incr;
        i__9657 = G__9658;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9661 = cljs.core.hash.call(null, a);
  var b__9662 = cljs.core.hash.call(null, b);
  if(a__9661 < b__9662) {
    return-1
  }else {
    if(a__9661 > b__9662) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9670 = m.keys;
  var len__9671 = ks__9670.length;
  var so__9672 = m.strobj;
  var out__9673 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9674 = 0;
  var out__9675 = cljs.core.transient$.call(null, out__9673);
  while(true) {
    if(i__9674 < len__9671) {
      var k__9676 = ks__9670[i__9674];
      var G__9677 = i__9674 + 1;
      var G__9678 = cljs.core.assoc_BANG_.call(null, out__9675, k__9676, so__9672[k__9676]);
      i__9674 = G__9677;
      out__9675 = G__9678;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9675, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9684 = {};
  var l__9685 = ks.length;
  var i__9686 = 0;
  while(true) {
    if(i__9686 < l__9685) {
      var k__9687 = ks[i__9686];
      new_obj__9684[k__9687] = obj[k__9687];
      var G__9688 = i__9686 + 1;
      i__9686 = G__9688;
      continue
    }else {
    }
    break
  }
  return new_obj__9684
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9691 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9692 = this;
  var h__2135__auto____9693 = this__9692.__hash;
  if(!(h__2135__auto____9693 == null)) {
    return h__2135__auto____9693
  }else {
    var h__2135__auto____9694 = cljs.core.hash_imap.call(null, coll);
    this__9692.__hash = h__2135__auto____9694;
    return h__2135__auto____9694
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9695 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9696 = this;
  if(function() {
    var and__3941__auto____9697 = goog.isString(k);
    if(and__3941__auto____9697) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9696.keys) == null)
    }else {
      return and__3941__auto____9697
    }
  }()) {
    return this__9696.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9698 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto____9699 = this__9698.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto____9699) {
        return or__3943__auto____9699
      }else {
        return this__9698.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9698.keys) == null)) {
        var new_strobj__9700 = cljs.core.obj_clone.call(null, this__9698.strobj, this__9698.keys);
        new_strobj__9700[k] = v;
        return new cljs.core.ObjMap(this__9698.meta, this__9698.keys, new_strobj__9700, this__9698.update_count + 1, null)
      }else {
        var new_strobj__9701 = cljs.core.obj_clone.call(null, this__9698.strobj, this__9698.keys);
        var new_keys__9702 = this__9698.keys.slice();
        new_strobj__9701[k] = v;
        new_keys__9702.push(k);
        return new cljs.core.ObjMap(this__9698.meta, new_keys__9702, new_strobj__9701, this__9698.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9703 = this;
  if(function() {
    var and__3941__auto____9704 = goog.isString(k);
    if(and__3941__auto____9704) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9703.keys) == null)
    }else {
      return and__3941__auto____9704
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9726 = null;
  var G__9726__2 = function(this_sym9705, k) {
    var this__9707 = this;
    var this_sym9705__9708 = this;
    var coll__9709 = this_sym9705__9708;
    return coll__9709.cljs$core$ILookup$_lookup$arity$2(coll__9709, k)
  };
  var G__9726__3 = function(this_sym9706, k, not_found) {
    var this__9707 = this;
    var this_sym9706__9710 = this;
    var coll__9711 = this_sym9706__9710;
    return coll__9711.cljs$core$ILookup$_lookup$arity$3(coll__9711, k, not_found)
  };
  G__9726 = function(this_sym9706, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9726__2.call(this, this_sym9706, k);
      case 3:
        return G__9726__3.call(this, this_sym9706, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9726
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9689, args9690) {
  var this__9712 = this;
  return this_sym9689.call.apply(this_sym9689, [this_sym9689].concat(args9690.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9713 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9714 = this;
  var this__9715 = this;
  return cljs.core.pr_str.call(null, this__9715)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9716 = this;
  if(this__9716.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9679_SHARP_) {
      return cljs.core.vector.call(null, p1__9679_SHARP_, this__9716.strobj[p1__9679_SHARP_])
    }, this__9716.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9717 = this;
  return this__9717.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9718 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9719 = this;
  return new cljs.core.ObjMap(meta, this__9719.keys, this__9719.strobj, this__9719.update_count, this__9719.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9720 = this;
  return this__9720.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9721 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9721.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9722 = this;
  if(function() {
    var and__3941__auto____9723 = goog.isString(k);
    if(and__3941__auto____9723) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9722.keys) == null)
    }else {
      return and__3941__auto____9723
    }
  }()) {
    var new_keys__9724 = this__9722.keys.slice();
    var new_strobj__9725 = cljs.core.obj_clone.call(null, this__9722.strobj, this__9722.keys);
    new_keys__9724.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9724), 1);
    cljs.core.js_delete.call(null, new_strobj__9725, k);
    return new cljs.core.ObjMap(this__9722.meta, new_keys__9724, new_strobj__9725, this__9722.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9730 = this;
  var h__2135__auto____9731 = this__9730.__hash;
  if(!(h__2135__auto____9731 == null)) {
    return h__2135__auto____9731
  }else {
    var h__2135__auto____9732 = cljs.core.hash_imap.call(null, coll);
    this__9730.__hash = h__2135__auto____9732;
    return h__2135__auto____9732
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9733 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9734 = this;
  var bucket__9735 = this__9734.hashobj[cljs.core.hash.call(null, k)];
  var i__9736 = cljs.core.truth_(bucket__9735) ? cljs.core.scan_array.call(null, 2, k, bucket__9735) : null;
  if(cljs.core.truth_(i__9736)) {
    return bucket__9735[i__9736 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9737 = this;
  var h__9738 = cljs.core.hash.call(null, k);
  var bucket__9739 = this__9737.hashobj[h__9738];
  if(cljs.core.truth_(bucket__9739)) {
    var new_bucket__9740 = bucket__9739.slice();
    var new_hashobj__9741 = goog.object.clone(this__9737.hashobj);
    new_hashobj__9741[h__9738] = new_bucket__9740;
    var temp__4090__auto____9742 = cljs.core.scan_array.call(null, 2, k, new_bucket__9740);
    if(cljs.core.truth_(temp__4090__auto____9742)) {
      var i__9743 = temp__4090__auto____9742;
      new_bucket__9740[i__9743 + 1] = v;
      return new cljs.core.HashMap(this__9737.meta, this__9737.count, new_hashobj__9741, null)
    }else {
      new_bucket__9740.push(k, v);
      return new cljs.core.HashMap(this__9737.meta, this__9737.count + 1, new_hashobj__9741, null)
    }
  }else {
    var new_hashobj__9744 = goog.object.clone(this__9737.hashobj);
    new_hashobj__9744[h__9738] = [k, v];
    return new cljs.core.HashMap(this__9737.meta, this__9737.count + 1, new_hashobj__9744, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9745 = this;
  var bucket__9746 = this__9745.hashobj[cljs.core.hash.call(null, k)];
  var i__9747 = cljs.core.truth_(bucket__9746) ? cljs.core.scan_array.call(null, 2, k, bucket__9746) : null;
  if(cljs.core.truth_(i__9747)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9772 = null;
  var G__9772__2 = function(this_sym9748, k) {
    var this__9750 = this;
    var this_sym9748__9751 = this;
    var coll__9752 = this_sym9748__9751;
    return coll__9752.cljs$core$ILookup$_lookup$arity$2(coll__9752, k)
  };
  var G__9772__3 = function(this_sym9749, k, not_found) {
    var this__9750 = this;
    var this_sym9749__9753 = this;
    var coll__9754 = this_sym9749__9753;
    return coll__9754.cljs$core$ILookup$_lookup$arity$3(coll__9754, k, not_found)
  };
  G__9772 = function(this_sym9749, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9772__2.call(this, this_sym9749, k);
      case 3:
        return G__9772__3.call(this, this_sym9749, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9772
}();
cljs.core.HashMap.prototype.apply = function(this_sym9728, args9729) {
  var this__9755 = this;
  return this_sym9728.call.apply(this_sym9728, [this_sym9728].concat(args9729.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9756 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9757 = this;
  var this__9758 = this;
  return cljs.core.pr_str.call(null, this__9758)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9759 = this;
  if(this__9759.count > 0) {
    var hashes__9760 = cljs.core.js_keys.call(null, this__9759.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9727_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9759.hashobj[p1__9727_SHARP_]))
    }, hashes__9760)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9761 = this;
  return this__9761.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9762 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9763 = this;
  return new cljs.core.HashMap(meta, this__9763.count, this__9763.hashobj, this__9763.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9764 = this;
  return this__9764.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9765 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9765.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9766 = this;
  var h__9767 = cljs.core.hash.call(null, k);
  var bucket__9768 = this__9766.hashobj[h__9767];
  var i__9769 = cljs.core.truth_(bucket__9768) ? cljs.core.scan_array.call(null, 2, k, bucket__9768) : null;
  if(cljs.core.not.call(null, i__9769)) {
    return coll
  }else {
    var new_hashobj__9770 = goog.object.clone(this__9766.hashobj);
    if(3 > bucket__9768.length) {
      cljs.core.js_delete.call(null, new_hashobj__9770, h__9767)
    }else {
      var new_bucket__9771 = bucket__9768.slice();
      new_bucket__9771.splice(i__9769, 2);
      new_hashobj__9770[h__9767] = new_bucket__9771
    }
    return new cljs.core.HashMap(this__9766.meta, this__9766.count - 1, new_hashobj__9770, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9773 = ks.length;
  var i__9774 = 0;
  var out__9775 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9774 < len__9773) {
      var G__9776 = i__9774 + 1;
      var G__9777 = cljs.core.assoc.call(null, out__9775, ks[i__9774], vs[i__9774]);
      i__9774 = G__9776;
      out__9775 = G__9777;
      continue
    }else {
      return out__9775
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9781 = m.arr;
  var len__9782 = arr__9781.length;
  var i__9783 = 0;
  while(true) {
    if(len__9782 <= i__9783) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9781[i__9783], k)) {
        return i__9783
      }else {
        if("\ufdd0'else") {
          var G__9784 = i__9783 + 2;
          i__9783 = G__9784;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9787 = this;
  return new cljs.core.TransientArrayMap({}, this__9787.arr.length, this__9787.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9788 = this;
  var h__2135__auto____9789 = this__9788.__hash;
  if(!(h__2135__auto____9789 == null)) {
    return h__2135__auto____9789
  }else {
    var h__2135__auto____9790 = cljs.core.hash_imap.call(null, coll);
    this__9788.__hash = h__2135__auto____9790;
    return h__2135__auto____9790
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9791 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9792 = this;
  var idx__9793 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9793 === -1) {
    return not_found
  }else {
    return this__9792.arr[idx__9793 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9794 = this;
  var idx__9795 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9795 === -1) {
    if(this__9794.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9794.meta, this__9794.cnt + 1, function() {
        var G__9796__9797 = this__9794.arr.slice();
        G__9796__9797.push(k);
        G__9796__9797.push(v);
        return G__9796__9797
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9794.arr[idx__9795 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9794.meta, this__9794.cnt, function() {
          var G__9798__9799 = this__9794.arr.slice();
          G__9798__9799[idx__9795 + 1] = v;
          return G__9798__9799
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9800 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9832 = null;
  var G__9832__2 = function(this_sym9801, k) {
    var this__9803 = this;
    var this_sym9801__9804 = this;
    var coll__9805 = this_sym9801__9804;
    return coll__9805.cljs$core$ILookup$_lookup$arity$2(coll__9805, k)
  };
  var G__9832__3 = function(this_sym9802, k, not_found) {
    var this__9803 = this;
    var this_sym9802__9806 = this;
    var coll__9807 = this_sym9802__9806;
    return coll__9807.cljs$core$ILookup$_lookup$arity$3(coll__9807, k, not_found)
  };
  G__9832 = function(this_sym9802, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9832__2.call(this, this_sym9802, k);
      case 3:
        return G__9832__3.call(this, this_sym9802, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9832
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9785, args9786) {
  var this__9808 = this;
  return this_sym9785.call.apply(this_sym9785, [this_sym9785].concat(args9786.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9809 = this;
  var len__9810 = this__9809.arr.length;
  var i__9811 = 0;
  var init__9812 = init;
  while(true) {
    if(i__9811 < len__9810) {
      var init__9813 = f.call(null, init__9812, this__9809.arr[i__9811], this__9809.arr[i__9811 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9813)) {
        return cljs.core.deref.call(null, init__9813)
      }else {
        var G__9833 = i__9811 + 2;
        var G__9834 = init__9813;
        i__9811 = G__9833;
        init__9812 = G__9834;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9814 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9815 = this;
  var this__9816 = this;
  return cljs.core.pr_str.call(null, this__9816)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9817 = this;
  if(this__9817.cnt > 0) {
    var len__9818 = this__9817.arr.length;
    var array_map_seq__9819 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9818) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9817.arr[i], this__9817.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9819.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9820 = this;
  return this__9820.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9821 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9822 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9822.cnt, this__9822.arr, this__9822.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9823 = this;
  return this__9823.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9824 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9824.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9825 = this;
  var idx__9826 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9826 >= 0) {
    var len__9827 = this__9825.arr.length;
    var new_len__9828 = len__9827 - 2;
    if(new_len__9828 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9829 = cljs.core.make_array.call(null, new_len__9828);
      var s__9830 = 0;
      var d__9831 = 0;
      while(true) {
        if(s__9830 >= len__9827) {
          return new cljs.core.PersistentArrayMap(this__9825.meta, this__9825.cnt - 1, new_arr__9829, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9825.arr[s__9830])) {
            var G__9835 = s__9830 + 2;
            var G__9836 = d__9831;
            s__9830 = G__9835;
            d__9831 = G__9836;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9829[d__9831] = this__9825.arr[s__9830];
              new_arr__9829[d__9831 + 1] = this__9825.arr[s__9830 + 1];
              var G__9837 = s__9830 + 2;
              var G__9838 = d__9831 + 2;
              s__9830 = G__9837;
              d__9831 = G__9838;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9839 = cljs.core.count.call(null, ks);
  var i__9840 = 0;
  var out__9841 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9840 < len__9839) {
      var G__9842 = i__9840 + 1;
      var G__9843 = cljs.core.assoc_BANG_.call(null, out__9841, ks[i__9840], vs[i__9840]);
      i__9840 = G__9842;
      out__9841 = G__9843;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9841)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9844 = this;
  if(cljs.core.truth_(this__9844.editable_QMARK_)) {
    var idx__9845 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9845 >= 0) {
      this__9844.arr[idx__9845] = this__9844.arr[this__9844.len - 2];
      this__9844.arr[idx__9845 + 1] = this__9844.arr[this__9844.len - 1];
      var G__9846__9847 = this__9844.arr;
      G__9846__9847.pop();
      G__9846__9847.pop();
      G__9846__9847;
      this__9844.len = this__9844.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9848 = this;
  if(cljs.core.truth_(this__9848.editable_QMARK_)) {
    var idx__9849 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9849 === -1) {
      if(this__9848.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9848.len = this__9848.len + 2;
        this__9848.arr.push(key);
        this__9848.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9848.len, this__9848.arr), key, val)
      }
    }else {
      if(val === this__9848.arr[idx__9849 + 1]) {
        return tcoll
      }else {
        this__9848.arr[idx__9849 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9850 = this;
  if(cljs.core.truth_(this__9850.editable_QMARK_)) {
    if(function() {
      var G__9851__9852 = o;
      if(G__9851__9852) {
        if(function() {
          var or__3943__auto____9853 = G__9851__9852.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____9853) {
            return or__3943__auto____9853
          }else {
            return G__9851__9852.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9851__9852.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9851__9852)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9851__9852)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9854 = cljs.core.seq.call(null, o);
      var tcoll__9855 = tcoll;
      while(true) {
        var temp__4090__auto____9856 = cljs.core.first.call(null, es__9854);
        if(cljs.core.truth_(temp__4090__auto____9856)) {
          var e__9857 = temp__4090__auto____9856;
          var G__9863 = cljs.core.next.call(null, es__9854);
          var G__9864 = tcoll__9855.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9855, cljs.core.key.call(null, e__9857), cljs.core.val.call(null, e__9857));
          es__9854 = G__9863;
          tcoll__9855 = G__9864;
          continue
        }else {
          return tcoll__9855
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9858 = this;
  if(cljs.core.truth_(this__9858.editable_QMARK_)) {
    this__9858.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9858.len, 2), this__9858.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9859 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9860 = this;
  if(cljs.core.truth_(this__9860.editable_QMARK_)) {
    var idx__9861 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9861 === -1) {
      return not_found
    }else {
      return this__9860.arr[idx__9861 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9862 = this;
  if(cljs.core.truth_(this__9862.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9862.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9867 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9868 = 0;
  while(true) {
    if(i__9868 < len) {
      var G__9869 = cljs.core.assoc_BANG_.call(null, out__9867, arr[i__9868], arr[i__9868 + 1]);
      var G__9870 = i__9868 + 2;
      out__9867 = G__9869;
      i__9868 = G__9870;
      continue
    }else {
      return out__9867
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2253__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9875__9876 = arr.slice();
    G__9875__9876[i] = a;
    return G__9875__9876
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9877__9878 = arr.slice();
    G__9877__9878[i] = a;
    G__9877__9878[j] = b;
    return G__9877__9878
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9880 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9880, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9880, 2 * i, new_arr__9880.length - 2 * i);
  return new_arr__9880
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9883 = inode.ensure_editable(edit);
    editable__9883.arr[i] = a;
    return editable__9883
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9884 = inode.ensure_editable(edit);
    editable__9884.arr[i] = a;
    editable__9884.arr[j] = b;
    return editable__9884
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9891 = arr.length;
  var i__9892 = 0;
  var init__9893 = init;
  while(true) {
    if(i__9892 < len__9891) {
      var init__9896 = function() {
        var k__9894 = arr[i__9892];
        if(!(k__9894 == null)) {
          return f.call(null, init__9893, k__9894, arr[i__9892 + 1])
        }else {
          var node__9895 = arr[i__9892 + 1];
          if(!(node__9895 == null)) {
            return node__9895.kv_reduce(f, init__9893)
          }else {
            return init__9893
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9896)) {
        return cljs.core.deref.call(null, init__9896)
      }else {
        var G__9897 = i__9892 + 2;
        var G__9898 = init__9896;
        i__9892 = G__9897;
        init__9893 = G__9898;
        continue
      }
    }else {
      return init__9893
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9899 = this;
  var inode__9900 = this;
  if(this__9899.bitmap === bit) {
    return null
  }else {
    var editable__9901 = inode__9900.ensure_editable(e);
    var earr__9902 = editable__9901.arr;
    var len__9903 = earr__9902.length;
    editable__9901.bitmap = bit ^ editable__9901.bitmap;
    cljs.core.array_copy.call(null, earr__9902, 2 * (i + 1), earr__9902, 2 * i, len__9903 - 2 * (i + 1));
    earr__9902[len__9903 - 2] = null;
    earr__9902[len__9903 - 1] = null;
    return editable__9901
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9904 = this;
  var inode__9905 = this;
  var bit__9906 = 1 << (hash >>> shift & 31);
  var idx__9907 = cljs.core.bitmap_indexed_node_index.call(null, this__9904.bitmap, bit__9906);
  if((this__9904.bitmap & bit__9906) === 0) {
    var n__9908 = cljs.core.bit_count.call(null, this__9904.bitmap);
    if(2 * n__9908 < this__9904.arr.length) {
      var editable__9909 = inode__9905.ensure_editable(edit);
      var earr__9910 = editable__9909.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9910, 2 * idx__9907, earr__9910, 2 * (idx__9907 + 1), 2 * (n__9908 - idx__9907));
      earr__9910[2 * idx__9907] = key;
      earr__9910[2 * idx__9907 + 1] = val;
      editable__9909.bitmap = editable__9909.bitmap | bit__9906;
      return editable__9909
    }else {
      if(n__9908 >= 16) {
        var nodes__9911 = cljs.core.make_array.call(null, 32);
        var jdx__9912 = hash >>> shift & 31;
        nodes__9911[jdx__9912] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9913 = 0;
        var j__9914 = 0;
        while(true) {
          if(i__9913 < 32) {
            if((this__9904.bitmap >>> i__9913 & 1) === 0) {
              var G__9967 = i__9913 + 1;
              var G__9968 = j__9914;
              i__9913 = G__9967;
              j__9914 = G__9968;
              continue
            }else {
              nodes__9911[i__9913] = !(this__9904.arr[j__9914] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9904.arr[j__9914]), this__9904.arr[j__9914], this__9904.arr[j__9914 + 1], added_leaf_QMARK_) : this__9904.arr[j__9914 + 1];
              var G__9969 = i__9913 + 1;
              var G__9970 = j__9914 + 2;
              i__9913 = G__9969;
              j__9914 = G__9970;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9908 + 1, nodes__9911)
      }else {
        if("\ufdd0'else") {
          var new_arr__9915 = cljs.core.make_array.call(null, 2 * (n__9908 + 4));
          cljs.core.array_copy.call(null, this__9904.arr, 0, new_arr__9915, 0, 2 * idx__9907);
          new_arr__9915[2 * idx__9907] = key;
          new_arr__9915[2 * idx__9907 + 1] = val;
          cljs.core.array_copy.call(null, this__9904.arr, 2 * idx__9907, new_arr__9915, 2 * (idx__9907 + 1), 2 * (n__9908 - idx__9907));
          added_leaf_QMARK_.val = true;
          var editable__9916 = inode__9905.ensure_editable(edit);
          editable__9916.arr = new_arr__9915;
          editable__9916.bitmap = editable__9916.bitmap | bit__9906;
          return editable__9916
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9917 = this__9904.arr[2 * idx__9907];
    var val_or_node__9918 = this__9904.arr[2 * idx__9907 + 1];
    if(key_or_nil__9917 == null) {
      var n__9919 = val_or_node__9918.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9919 === val_or_node__9918) {
        return inode__9905
      }else {
        return cljs.core.edit_and_set.call(null, inode__9905, edit, 2 * idx__9907 + 1, n__9919)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9917)) {
        if(val === val_or_node__9918) {
          return inode__9905
        }else {
          return cljs.core.edit_and_set.call(null, inode__9905, edit, 2 * idx__9907 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9905, edit, 2 * idx__9907, null, 2 * idx__9907 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9917, val_or_node__9918, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9920 = this;
  var inode__9921 = this;
  return cljs.core.create_inode_seq.call(null, this__9920.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9922 = this;
  var inode__9923 = this;
  var bit__9924 = 1 << (hash >>> shift & 31);
  if((this__9922.bitmap & bit__9924) === 0) {
    return inode__9923
  }else {
    var idx__9925 = cljs.core.bitmap_indexed_node_index.call(null, this__9922.bitmap, bit__9924);
    var key_or_nil__9926 = this__9922.arr[2 * idx__9925];
    var val_or_node__9927 = this__9922.arr[2 * idx__9925 + 1];
    if(key_or_nil__9926 == null) {
      var n__9928 = val_or_node__9927.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9928 === val_or_node__9927) {
        return inode__9923
      }else {
        if(!(n__9928 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9923, edit, 2 * idx__9925 + 1, n__9928)
        }else {
          if(this__9922.bitmap === bit__9924) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9923.edit_and_remove_pair(edit, bit__9924, idx__9925)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9926)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9923.edit_and_remove_pair(edit, bit__9924, idx__9925)
      }else {
        if("\ufdd0'else") {
          return inode__9923
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9929 = this;
  var inode__9930 = this;
  if(e === this__9929.edit) {
    return inode__9930
  }else {
    var n__9931 = cljs.core.bit_count.call(null, this__9929.bitmap);
    var new_arr__9932 = cljs.core.make_array.call(null, n__9931 < 0 ? 4 : 2 * (n__9931 + 1));
    cljs.core.array_copy.call(null, this__9929.arr, 0, new_arr__9932, 0, 2 * n__9931);
    return new cljs.core.BitmapIndexedNode(e, this__9929.bitmap, new_arr__9932)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9933 = this;
  var inode__9934 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9933.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9935 = this;
  var inode__9936 = this;
  var bit__9937 = 1 << (hash >>> shift & 31);
  if((this__9935.bitmap & bit__9937) === 0) {
    return not_found
  }else {
    var idx__9938 = cljs.core.bitmap_indexed_node_index.call(null, this__9935.bitmap, bit__9937);
    var key_or_nil__9939 = this__9935.arr[2 * idx__9938];
    var val_or_node__9940 = this__9935.arr[2 * idx__9938 + 1];
    if(key_or_nil__9939 == null) {
      return val_or_node__9940.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9939)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9939, val_or_node__9940], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9941 = this;
  var inode__9942 = this;
  var bit__9943 = 1 << (hash >>> shift & 31);
  if((this__9941.bitmap & bit__9943) === 0) {
    return inode__9942
  }else {
    var idx__9944 = cljs.core.bitmap_indexed_node_index.call(null, this__9941.bitmap, bit__9943);
    var key_or_nil__9945 = this__9941.arr[2 * idx__9944];
    var val_or_node__9946 = this__9941.arr[2 * idx__9944 + 1];
    if(key_or_nil__9945 == null) {
      var n__9947 = val_or_node__9946.inode_without(shift + 5, hash, key);
      if(n__9947 === val_or_node__9946) {
        return inode__9942
      }else {
        if(!(n__9947 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9941.bitmap, cljs.core.clone_and_set.call(null, this__9941.arr, 2 * idx__9944 + 1, n__9947))
        }else {
          if(this__9941.bitmap === bit__9943) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9941.bitmap ^ bit__9943, cljs.core.remove_pair.call(null, this__9941.arr, idx__9944))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9945)) {
        return new cljs.core.BitmapIndexedNode(null, this__9941.bitmap ^ bit__9943, cljs.core.remove_pair.call(null, this__9941.arr, idx__9944))
      }else {
        if("\ufdd0'else") {
          return inode__9942
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9948 = this;
  var inode__9949 = this;
  var bit__9950 = 1 << (hash >>> shift & 31);
  var idx__9951 = cljs.core.bitmap_indexed_node_index.call(null, this__9948.bitmap, bit__9950);
  if((this__9948.bitmap & bit__9950) === 0) {
    var n__9952 = cljs.core.bit_count.call(null, this__9948.bitmap);
    if(n__9952 >= 16) {
      var nodes__9953 = cljs.core.make_array.call(null, 32);
      var jdx__9954 = hash >>> shift & 31;
      nodes__9953[jdx__9954] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9955 = 0;
      var j__9956 = 0;
      while(true) {
        if(i__9955 < 32) {
          if((this__9948.bitmap >>> i__9955 & 1) === 0) {
            var G__9971 = i__9955 + 1;
            var G__9972 = j__9956;
            i__9955 = G__9971;
            j__9956 = G__9972;
            continue
          }else {
            nodes__9953[i__9955] = !(this__9948.arr[j__9956] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9948.arr[j__9956]), this__9948.arr[j__9956], this__9948.arr[j__9956 + 1], added_leaf_QMARK_) : this__9948.arr[j__9956 + 1];
            var G__9973 = i__9955 + 1;
            var G__9974 = j__9956 + 2;
            i__9955 = G__9973;
            j__9956 = G__9974;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9952 + 1, nodes__9953)
    }else {
      var new_arr__9957 = cljs.core.make_array.call(null, 2 * (n__9952 + 1));
      cljs.core.array_copy.call(null, this__9948.arr, 0, new_arr__9957, 0, 2 * idx__9951);
      new_arr__9957[2 * idx__9951] = key;
      new_arr__9957[2 * idx__9951 + 1] = val;
      cljs.core.array_copy.call(null, this__9948.arr, 2 * idx__9951, new_arr__9957, 2 * (idx__9951 + 1), 2 * (n__9952 - idx__9951));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9948.bitmap | bit__9950, new_arr__9957)
    }
  }else {
    var key_or_nil__9958 = this__9948.arr[2 * idx__9951];
    var val_or_node__9959 = this__9948.arr[2 * idx__9951 + 1];
    if(key_or_nil__9958 == null) {
      var n__9960 = val_or_node__9959.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9960 === val_or_node__9959) {
        return inode__9949
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9948.bitmap, cljs.core.clone_and_set.call(null, this__9948.arr, 2 * idx__9951 + 1, n__9960))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9958)) {
        if(val === val_or_node__9959) {
          return inode__9949
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9948.bitmap, cljs.core.clone_and_set.call(null, this__9948.arr, 2 * idx__9951 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9948.bitmap, cljs.core.clone_and_set.call(null, this__9948.arr, 2 * idx__9951, null, 2 * idx__9951 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9958, val_or_node__9959, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9961 = this;
  var inode__9962 = this;
  var bit__9963 = 1 << (hash >>> shift & 31);
  if((this__9961.bitmap & bit__9963) === 0) {
    return not_found
  }else {
    var idx__9964 = cljs.core.bitmap_indexed_node_index.call(null, this__9961.bitmap, bit__9963);
    var key_or_nil__9965 = this__9961.arr[2 * idx__9964];
    var val_or_node__9966 = this__9961.arr[2 * idx__9964 + 1];
    if(key_or_nil__9965 == null) {
      return val_or_node__9966.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9965)) {
        return val_or_node__9966
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__9982 = array_node.arr;
  var len__9983 = 2 * (array_node.cnt - 1);
  var new_arr__9984 = cljs.core.make_array.call(null, len__9983);
  var i__9985 = 0;
  var j__9986 = 1;
  var bitmap__9987 = 0;
  while(true) {
    if(i__9985 < len__9983) {
      if(function() {
        var and__3941__auto____9988 = !(i__9985 === idx);
        if(and__3941__auto____9988) {
          return!(arr__9982[i__9985] == null)
        }else {
          return and__3941__auto____9988
        }
      }()) {
        new_arr__9984[j__9986] = arr__9982[i__9985];
        var G__9989 = i__9985 + 1;
        var G__9990 = j__9986 + 2;
        var G__9991 = bitmap__9987 | 1 << i__9985;
        i__9985 = G__9989;
        j__9986 = G__9990;
        bitmap__9987 = G__9991;
        continue
      }else {
        var G__9992 = i__9985 + 1;
        var G__9993 = j__9986;
        var G__9994 = bitmap__9987;
        i__9985 = G__9992;
        j__9986 = G__9993;
        bitmap__9987 = G__9994;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__9987, new_arr__9984)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9995 = this;
  var inode__9996 = this;
  var idx__9997 = hash >>> shift & 31;
  var node__9998 = this__9995.arr[idx__9997];
  if(node__9998 == null) {
    var editable__9999 = cljs.core.edit_and_set.call(null, inode__9996, edit, idx__9997, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__9999.cnt = editable__9999.cnt + 1;
    return editable__9999
  }else {
    var n__10000 = node__9998.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10000 === node__9998) {
      return inode__9996
    }else {
      return cljs.core.edit_and_set.call(null, inode__9996, edit, idx__9997, n__10000)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10001 = this;
  var inode__10002 = this;
  return cljs.core.create_array_node_seq.call(null, this__10001.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10003 = this;
  var inode__10004 = this;
  var idx__10005 = hash >>> shift & 31;
  var node__10006 = this__10003.arr[idx__10005];
  if(node__10006 == null) {
    return inode__10004
  }else {
    var n__10007 = node__10006.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10007 === node__10006) {
      return inode__10004
    }else {
      if(n__10007 == null) {
        if(this__10003.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10004, edit, idx__10005)
        }else {
          var editable__10008 = cljs.core.edit_and_set.call(null, inode__10004, edit, idx__10005, n__10007);
          editable__10008.cnt = editable__10008.cnt - 1;
          return editable__10008
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10004, edit, idx__10005, n__10007)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10009 = this;
  var inode__10010 = this;
  if(e === this__10009.edit) {
    return inode__10010
  }else {
    return new cljs.core.ArrayNode(e, this__10009.cnt, this__10009.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10011 = this;
  var inode__10012 = this;
  var len__10013 = this__10011.arr.length;
  var i__10014 = 0;
  var init__10015 = init;
  while(true) {
    if(i__10014 < len__10013) {
      var node__10016 = this__10011.arr[i__10014];
      if(!(node__10016 == null)) {
        var init__10017 = node__10016.kv_reduce(f, init__10015);
        if(cljs.core.reduced_QMARK_.call(null, init__10017)) {
          return cljs.core.deref.call(null, init__10017)
        }else {
          var G__10036 = i__10014 + 1;
          var G__10037 = init__10017;
          i__10014 = G__10036;
          init__10015 = G__10037;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10015
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10018 = this;
  var inode__10019 = this;
  var idx__10020 = hash >>> shift & 31;
  var node__10021 = this__10018.arr[idx__10020];
  if(!(node__10021 == null)) {
    return node__10021.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10022 = this;
  var inode__10023 = this;
  var idx__10024 = hash >>> shift & 31;
  var node__10025 = this__10022.arr[idx__10024];
  if(!(node__10025 == null)) {
    var n__10026 = node__10025.inode_without(shift + 5, hash, key);
    if(n__10026 === node__10025) {
      return inode__10023
    }else {
      if(n__10026 == null) {
        if(this__10022.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10023, null, idx__10024)
        }else {
          return new cljs.core.ArrayNode(null, this__10022.cnt - 1, cljs.core.clone_and_set.call(null, this__10022.arr, idx__10024, n__10026))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10022.cnt, cljs.core.clone_and_set.call(null, this__10022.arr, idx__10024, n__10026))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10023
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10027 = this;
  var inode__10028 = this;
  var idx__10029 = hash >>> shift & 31;
  var node__10030 = this__10027.arr[idx__10029];
  if(node__10030 == null) {
    return new cljs.core.ArrayNode(null, this__10027.cnt + 1, cljs.core.clone_and_set.call(null, this__10027.arr, idx__10029, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10031 = node__10030.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10031 === node__10030) {
      return inode__10028
    }else {
      return new cljs.core.ArrayNode(null, this__10027.cnt, cljs.core.clone_and_set.call(null, this__10027.arr, idx__10029, n__10031))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10032 = this;
  var inode__10033 = this;
  var idx__10034 = hash >>> shift & 31;
  var node__10035 = this__10032.arr[idx__10034];
  if(!(node__10035 == null)) {
    return node__10035.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10040 = 2 * cnt;
  var i__10041 = 0;
  while(true) {
    if(i__10041 < lim__10040) {
      if(cljs.core.key_test.call(null, key, arr[i__10041])) {
        return i__10041
      }else {
        var G__10042 = i__10041 + 2;
        i__10041 = G__10042;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10043 = this;
  var inode__10044 = this;
  if(hash === this__10043.collision_hash) {
    var idx__10045 = cljs.core.hash_collision_node_find_index.call(null, this__10043.arr, this__10043.cnt, key);
    if(idx__10045 === -1) {
      if(this__10043.arr.length > 2 * this__10043.cnt) {
        var editable__10046 = cljs.core.edit_and_set.call(null, inode__10044, edit, 2 * this__10043.cnt, key, 2 * this__10043.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10046.cnt = editable__10046.cnt + 1;
        return editable__10046
      }else {
        var len__10047 = this__10043.arr.length;
        var new_arr__10048 = cljs.core.make_array.call(null, len__10047 + 2);
        cljs.core.array_copy.call(null, this__10043.arr, 0, new_arr__10048, 0, len__10047);
        new_arr__10048[len__10047] = key;
        new_arr__10048[len__10047 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10044.ensure_editable_array(edit, this__10043.cnt + 1, new_arr__10048)
      }
    }else {
      if(this__10043.arr[idx__10045 + 1] === val) {
        return inode__10044
      }else {
        return cljs.core.edit_and_set.call(null, inode__10044, edit, idx__10045 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10043.collision_hash >>> shift & 31), [null, inode__10044, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10049 = this;
  var inode__10050 = this;
  return cljs.core.create_inode_seq.call(null, this__10049.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10051 = this;
  var inode__10052 = this;
  var idx__10053 = cljs.core.hash_collision_node_find_index.call(null, this__10051.arr, this__10051.cnt, key);
  if(idx__10053 === -1) {
    return inode__10052
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10051.cnt === 1) {
      return null
    }else {
      var editable__10054 = inode__10052.ensure_editable(edit);
      var earr__10055 = editable__10054.arr;
      earr__10055[idx__10053] = earr__10055[2 * this__10051.cnt - 2];
      earr__10055[idx__10053 + 1] = earr__10055[2 * this__10051.cnt - 1];
      earr__10055[2 * this__10051.cnt - 1] = null;
      earr__10055[2 * this__10051.cnt - 2] = null;
      editable__10054.cnt = editable__10054.cnt - 1;
      return editable__10054
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10056 = this;
  var inode__10057 = this;
  if(e === this__10056.edit) {
    return inode__10057
  }else {
    var new_arr__10058 = cljs.core.make_array.call(null, 2 * (this__10056.cnt + 1));
    cljs.core.array_copy.call(null, this__10056.arr, 0, new_arr__10058, 0, 2 * this__10056.cnt);
    return new cljs.core.HashCollisionNode(e, this__10056.collision_hash, this__10056.cnt, new_arr__10058)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10059 = this;
  var inode__10060 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10059.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10061 = this;
  var inode__10062 = this;
  var idx__10063 = cljs.core.hash_collision_node_find_index.call(null, this__10061.arr, this__10061.cnt, key);
  if(idx__10063 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10061.arr[idx__10063])) {
      return cljs.core.PersistentVector.fromArray([this__10061.arr[idx__10063], this__10061.arr[idx__10063 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10064 = this;
  var inode__10065 = this;
  var idx__10066 = cljs.core.hash_collision_node_find_index.call(null, this__10064.arr, this__10064.cnt, key);
  if(idx__10066 === -1) {
    return inode__10065
  }else {
    if(this__10064.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10064.collision_hash, this__10064.cnt - 1, cljs.core.remove_pair.call(null, this__10064.arr, cljs.core.quot.call(null, idx__10066, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10067 = this;
  var inode__10068 = this;
  if(hash === this__10067.collision_hash) {
    var idx__10069 = cljs.core.hash_collision_node_find_index.call(null, this__10067.arr, this__10067.cnt, key);
    if(idx__10069 === -1) {
      var len__10070 = this__10067.arr.length;
      var new_arr__10071 = cljs.core.make_array.call(null, len__10070 + 2);
      cljs.core.array_copy.call(null, this__10067.arr, 0, new_arr__10071, 0, len__10070);
      new_arr__10071[len__10070] = key;
      new_arr__10071[len__10070 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10067.collision_hash, this__10067.cnt + 1, new_arr__10071)
    }else {
      if(cljs.core._EQ_.call(null, this__10067.arr[idx__10069], val)) {
        return inode__10068
      }else {
        return new cljs.core.HashCollisionNode(null, this__10067.collision_hash, this__10067.cnt, cljs.core.clone_and_set.call(null, this__10067.arr, idx__10069 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10067.collision_hash >>> shift & 31), [null, inode__10068])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10072 = this;
  var inode__10073 = this;
  var idx__10074 = cljs.core.hash_collision_node_find_index.call(null, this__10072.arr, this__10072.cnt, key);
  if(idx__10074 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10072.arr[idx__10074])) {
      return this__10072.arr[idx__10074 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10075 = this;
  var inode__10076 = this;
  if(e === this__10075.edit) {
    this__10075.arr = array;
    this__10075.cnt = count;
    return inode__10076
  }else {
    return new cljs.core.HashCollisionNode(this__10075.edit, this__10075.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10081 = cljs.core.hash.call(null, key1);
    if(key1hash__10081 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10081, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10082 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10081, key1, val1, added_leaf_QMARK___10082).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10082)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10083 = cljs.core.hash.call(null, key1);
    if(key1hash__10083 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10083, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10084 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10083, key1, val1, added_leaf_QMARK___10084).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10084)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10085 = this;
  var h__2135__auto____10086 = this__10085.__hash;
  if(!(h__2135__auto____10086 == null)) {
    return h__2135__auto____10086
  }else {
    var h__2135__auto____10087 = cljs.core.hash_coll.call(null, coll);
    this__10085.__hash = h__2135__auto____10087;
    return h__2135__auto____10087
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10088 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10089 = this;
  var this__10090 = this;
  return cljs.core.pr_str.call(null, this__10090)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10091 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10092 = this;
  if(this__10092.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10092.nodes[this__10092.i], this__10092.nodes[this__10092.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10092.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10093 = this;
  if(this__10093.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10093.nodes, this__10093.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10093.nodes, this__10093.i, cljs.core.next.call(null, this__10093.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10094 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10095 = this;
  return new cljs.core.NodeSeq(meta, this__10095.nodes, this__10095.i, this__10095.s, this__10095.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10096 = this;
  return this__10096.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10097 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10097.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10104 = nodes.length;
      var j__10105 = i;
      while(true) {
        if(j__10105 < len__10104) {
          if(!(nodes[j__10105] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10105, null, null)
          }else {
            var temp__4090__auto____10106 = nodes[j__10105 + 1];
            if(cljs.core.truth_(temp__4090__auto____10106)) {
              var node__10107 = temp__4090__auto____10106;
              var temp__4090__auto____10108 = node__10107.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____10108)) {
                var node_seq__10109 = temp__4090__auto____10108;
                return new cljs.core.NodeSeq(null, nodes, j__10105 + 2, node_seq__10109, null)
              }else {
                var G__10110 = j__10105 + 2;
                j__10105 = G__10110;
                continue
              }
            }else {
              var G__10111 = j__10105 + 2;
              j__10105 = G__10111;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10112 = this;
  var h__2135__auto____10113 = this__10112.__hash;
  if(!(h__2135__auto____10113 == null)) {
    return h__2135__auto____10113
  }else {
    var h__2135__auto____10114 = cljs.core.hash_coll.call(null, coll);
    this__10112.__hash = h__2135__auto____10114;
    return h__2135__auto____10114
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10115 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10116 = this;
  var this__10117 = this;
  return cljs.core.pr_str.call(null, this__10117)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10118 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10119 = this;
  return cljs.core.first.call(null, this__10119.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10120 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10120.nodes, this__10120.i, cljs.core.next.call(null, this__10120.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10121 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10122 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10122.nodes, this__10122.i, this__10122.s, this__10122.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10123 = this;
  return this__10123.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10124 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10124.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10131 = nodes.length;
      var j__10132 = i;
      while(true) {
        if(j__10132 < len__10131) {
          var temp__4090__auto____10133 = nodes[j__10132];
          if(cljs.core.truth_(temp__4090__auto____10133)) {
            var nj__10134 = temp__4090__auto____10133;
            var temp__4090__auto____10135 = nj__10134.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____10135)) {
              var ns__10136 = temp__4090__auto____10135;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10132 + 1, ns__10136, null)
            }else {
              var G__10137 = j__10132 + 1;
              j__10132 = G__10137;
              continue
            }
          }else {
            var G__10138 = j__10132 + 1;
            j__10132 = G__10138;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10141 = this;
  return new cljs.core.TransientHashMap({}, this__10141.root, this__10141.cnt, this__10141.has_nil_QMARK_, this__10141.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10142 = this;
  var h__2135__auto____10143 = this__10142.__hash;
  if(!(h__2135__auto____10143 == null)) {
    return h__2135__auto____10143
  }else {
    var h__2135__auto____10144 = cljs.core.hash_imap.call(null, coll);
    this__10142.__hash = h__2135__auto____10144;
    return h__2135__auto____10144
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10145 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10146 = this;
  if(k == null) {
    if(this__10146.has_nil_QMARK_) {
      return this__10146.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10146.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10146.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10147 = this;
  if(k == null) {
    if(function() {
      var and__3941__auto____10148 = this__10147.has_nil_QMARK_;
      if(and__3941__auto____10148) {
        return v === this__10147.nil_val
      }else {
        return and__3941__auto____10148
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10147.meta, this__10147.has_nil_QMARK_ ? this__10147.cnt : this__10147.cnt + 1, this__10147.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10149 = new cljs.core.Box(false);
    var new_root__10150 = (this__10147.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10147.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10149);
    if(new_root__10150 === this__10147.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10147.meta, added_leaf_QMARK___10149.val ? this__10147.cnt + 1 : this__10147.cnt, new_root__10150, this__10147.has_nil_QMARK_, this__10147.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10151 = this;
  if(k == null) {
    return this__10151.has_nil_QMARK_
  }else {
    if(this__10151.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10151.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10174 = null;
  var G__10174__2 = function(this_sym10152, k) {
    var this__10154 = this;
    var this_sym10152__10155 = this;
    var coll__10156 = this_sym10152__10155;
    return coll__10156.cljs$core$ILookup$_lookup$arity$2(coll__10156, k)
  };
  var G__10174__3 = function(this_sym10153, k, not_found) {
    var this__10154 = this;
    var this_sym10153__10157 = this;
    var coll__10158 = this_sym10153__10157;
    return coll__10158.cljs$core$ILookup$_lookup$arity$3(coll__10158, k, not_found)
  };
  G__10174 = function(this_sym10153, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10174__2.call(this, this_sym10153, k);
      case 3:
        return G__10174__3.call(this, this_sym10153, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10174
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10139, args10140) {
  var this__10159 = this;
  return this_sym10139.call.apply(this_sym10139, [this_sym10139].concat(args10140.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10160 = this;
  var init__10161 = this__10160.has_nil_QMARK_ ? f.call(null, init, null, this__10160.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10161)) {
    return cljs.core.deref.call(null, init__10161)
  }else {
    if(!(this__10160.root == null)) {
      return this__10160.root.kv_reduce(f, init__10161)
    }else {
      if("\ufdd0'else") {
        return init__10161
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10162 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10163 = this;
  var this__10164 = this;
  return cljs.core.pr_str.call(null, this__10164)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10165 = this;
  if(this__10165.cnt > 0) {
    var s__10166 = !(this__10165.root == null) ? this__10165.root.inode_seq() : null;
    if(this__10165.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10165.nil_val], true), s__10166)
    }else {
      return s__10166
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10167 = this;
  return this__10167.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10168 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10169 = this;
  return new cljs.core.PersistentHashMap(meta, this__10169.cnt, this__10169.root, this__10169.has_nil_QMARK_, this__10169.nil_val, this__10169.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10170 = this;
  return this__10170.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10171 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10171.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10172 = this;
  if(k == null) {
    if(this__10172.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10172.meta, this__10172.cnt - 1, this__10172.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10172.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10173 = this__10172.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10173 === this__10172.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10172.meta, this__10172.cnt - 1, new_root__10173, this__10172.has_nil_QMARK_, this__10172.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10175 = ks.length;
  var i__10176 = 0;
  var out__10177 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10176 < len__10175) {
      var G__10178 = i__10176 + 1;
      var G__10179 = cljs.core.assoc_BANG_.call(null, out__10177, ks[i__10176], vs[i__10176]);
      i__10176 = G__10178;
      out__10177 = G__10179;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10177)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10180 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10181 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10182 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10183 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10184 = this;
  if(k == null) {
    if(this__10184.has_nil_QMARK_) {
      return this__10184.nil_val
    }else {
      return null
    }
  }else {
    if(this__10184.root == null) {
      return null
    }else {
      return this__10184.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10185 = this;
  if(k == null) {
    if(this__10185.has_nil_QMARK_) {
      return this__10185.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10185.root == null) {
      return not_found
    }else {
      return this__10185.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10186 = this;
  if(this__10186.edit) {
    return this__10186.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10187 = this;
  var tcoll__10188 = this;
  if(this__10187.edit) {
    if(function() {
      var G__10189__10190 = o;
      if(G__10189__10190) {
        if(function() {
          var or__3943__auto____10191 = G__10189__10190.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____10191) {
            return or__3943__auto____10191
          }else {
            return G__10189__10190.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10189__10190.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10189__10190)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10189__10190)
      }
    }()) {
      return tcoll__10188.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10192 = cljs.core.seq.call(null, o);
      var tcoll__10193 = tcoll__10188;
      while(true) {
        var temp__4090__auto____10194 = cljs.core.first.call(null, es__10192);
        if(cljs.core.truth_(temp__4090__auto____10194)) {
          var e__10195 = temp__4090__auto____10194;
          var G__10206 = cljs.core.next.call(null, es__10192);
          var G__10207 = tcoll__10193.assoc_BANG_(cljs.core.key.call(null, e__10195), cljs.core.val.call(null, e__10195));
          es__10192 = G__10206;
          tcoll__10193 = G__10207;
          continue
        }else {
          return tcoll__10193
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10196 = this;
  var tcoll__10197 = this;
  if(this__10196.edit) {
    if(k == null) {
      if(this__10196.nil_val === v) {
      }else {
        this__10196.nil_val = v
      }
      if(this__10196.has_nil_QMARK_) {
      }else {
        this__10196.count = this__10196.count + 1;
        this__10196.has_nil_QMARK_ = true
      }
      return tcoll__10197
    }else {
      var added_leaf_QMARK___10198 = new cljs.core.Box(false);
      var node__10199 = (this__10196.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10196.root).inode_assoc_BANG_(this__10196.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10198);
      if(node__10199 === this__10196.root) {
      }else {
        this__10196.root = node__10199
      }
      if(added_leaf_QMARK___10198.val) {
        this__10196.count = this__10196.count + 1
      }else {
      }
      return tcoll__10197
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10200 = this;
  var tcoll__10201 = this;
  if(this__10200.edit) {
    if(k == null) {
      if(this__10200.has_nil_QMARK_) {
        this__10200.has_nil_QMARK_ = false;
        this__10200.nil_val = null;
        this__10200.count = this__10200.count - 1;
        return tcoll__10201
      }else {
        return tcoll__10201
      }
    }else {
      if(this__10200.root == null) {
        return tcoll__10201
      }else {
        var removed_leaf_QMARK___10202 = new cljs.core.Box(false);
        var node__10203 = this__10200.root.inode_without_BANG_(this__10200.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10202);
        if(node__10203 === this__10200.root) {
        }else {
          this__10200.root = node__10203
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10202[0])) {
          this__10200.count = this__10200.count - 1
        }else {
        }
        return tcoll__10201
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10204 = this;
  var tcoll__10205 = this;
  if(this__10204.edit) {
    this__10204.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10204.count, this__10204.root, this__10204.has_nil_QMARK_, this__10204.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10210 = node;
  var stack__10211 = stack;
  while(true) {
    if(!(t__10210 == null)) {
      var G__10212 = ascending_QMARK_ ? t__10210.left : t__10210.right;
      var G__10213 = cljs.core.conj.call(null, stack__10211, t__10210);
      t__10210 = G__10212;
      stack__10211 = G__10213;
      continue
    }else {
      return stack__10211
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10214 = this;
  var h__2135__auto____10215 = this__10214.__hash;
  if(!(h__2135__auto____10215 == null)) {
    return h__2135__auto____10215
  }else {
    var h__2135__auto____10216 = cljs.core.hash_coll.call(null, coll);
    this__10214.__hash = h__2135__auto____10216;
    return h__2135__auto____10216
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10217 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10218 = this;
  var this__10219 = this;
  return cljs.core.pr_str.call(null, this__10219)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10220 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10221 = this;
  if(this__10221.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10221.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10222 = this;
  return cljs.core.peek.call(null, this__10222.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10223 = this;
  var t__10224 = cljs.core.first.call(null, this__10223.stack);
  var next_stack__10225 = cljs.core.tree_map_seq_push.call(null, this__10223.ascending_QMARK_ ? t__10224.right : t__10224.left, cljs.core.next.call(null, this__10223.stack), this__10223.ascending_QMARK_);
  if(!(next_stack__10225 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10225, this__10223.ascending_QMARK_, this__10223.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10226 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10227 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10227.stack, this__10227.ascending_QMARK_, this__10227.cnt, this__10227.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10228 = this;
  return this__10228.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto____10230 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3941__auto____10230) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3941__auto____10230
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto____10232 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3941__auto____10232) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3941__auto____10232
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10236 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10236)) {
    return cljs.core.deref.call(null, init__10236)
  }else {
    var init__10237 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10236) : init__10236;
    if(cljs.core.reduced_QMARK_.call(null, init__10237)) {
      return cljs.core.deref.call(null, init__10237)
    }else {
      var init__10238 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10237) : init__10237;
      if(cljs.core.reduced_QMARK_.call(null, init__10238)) {
        return cljs.core.deref.call(null, init__10238)
      }else {
        return init__10238
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10241 = this;
  var h__2135__auto____10242 = this__10241.__hash;
  if(!(h__2135__auto____10242 == null)) {
    return h__2135__auto____10242
  }else {
    var h__2135__auto____10243 = cljs.core.hash_coll.call(null, coll);
    this__10241.__hash = h__2135__auto____10243;
    return h__2135__auto____10243
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10244 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10245 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10246 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10246.key, this__10246.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10294 = null;
  var G__10294__2 = function(this_sym10247, k) {
    var this__10249 = this;
    var this_sym10247__10250 = this;
    var node__10251 = this_sym10247__10250;
    return node__10251.cljs$core$ILookup$_lookup$arity$2(node__10251, k)
  };
  var G__10294__3 = function(this_sym10248, k, not_found) {
    var this__10249 = this;
    var this_sym10248__10252 = this;
    var node__10253 = this_sym10248__10252;
    return node__10253.cljs$core$ILookup$_lookup$arity$3(node__10253, k, not_found)
  };
  G__10294 = function(this_sym10248, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10294__2.call(this, this_sym10248, k);
      case 3:
        return G__10294__3.call(this, this_sym10248, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10294
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10239, args10240) {
  var this__10254 = this;
  return this_sym10239.call.apply(this_sym10239, [this_sym10239].concat(args10240.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10255 = this;
  return cljs.core.PersistentVector.fromArray([this__10255.key, this__10255.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10256 = this;
  return this__10256.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10257 = this;
  return this__10257.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10258 = this;
  var node__10259 = this;
  return ins.balance_right(node__10259)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10260 = this;
  var node__10261 = this;
  return new cljs.core.RedNode(this__10260.key, this__10260.val, this__10260.left, this__10260.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10262 = this;
  var node__10263 = this;
  return cljs.core.balance_right_del.call(null, this__10262.key, this__10262.val, this__10262.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10264 = this;
  var node__10265 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10266 = this;
  var node__10267 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10267, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10268 = this;
  var node__10269 = this;
  return cljs.core.balance_left_del.call(null, this__10268.key, this__10268.val, del, this__10268.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10270 = this;
  var node__10271 = this;
  return ins.balance_left(node__10271)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10272 = this;
  var node__10273 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10273, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10295 = null;
  var G__10295__0 = function() {
    var this__10274 = this;
    var this__10276 = this;
    return cljs.core.pr_str.call(null, this__10276)
  };
  G__10295 = function() {
    switch(arguments.length) {
      case 0:
        return G__10295__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10295
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10277 = this;
  var node__10278 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10278, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10279 = this;
  var node__10280 = this;
  return node__10280
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10281 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10282 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10283 = this;
  return cljs.core.list.call(null, this__10283.key, this__10283.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10284 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10285 = this;
  return this__10285.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10286 = this;
  return cljs.core.PersistentVector.fromArray([this__10286.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10287 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10287.key, this__10287.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10288 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10289 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10289.key, this__10289.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10290 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10291 = this;
  if(n === 0) {
    return this__10291.key
  }else {
    if(n === 1) {
      return this__10291.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10292 = this;
  if(n === 0) {
    return this__10292.key
  }else {
    if(n === 1) {
      return this__10292.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10293 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10298 = this;
  var h__2135__auto____10299 = this__10298.__hash;
  if(!(h__2135__auto____10299 == null)) {
    return h__2135__auto____10299
  }else {
    var h__2135__auto____10300 = cljs.core.hash_coll.call(null, coll);
    this__10298.__hash = h__2135__auto____10300;
    return h__2135__auto____10300
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10301 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10302 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10303 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10303.key, this__10303.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10351 = null;
  var G__10351__2 = function(this_sym10304, k) {
    var this__10306 = this;
    var this_sym10304__10307 = this;
    var node__10308 = this_sym10304__10307;
    return node__10308.cljs$core$ILookup$_lookup$arity$2(node__10308, k)
  };
  var G__10351__3 = function(this_sym10305, k, not_found) {
    var this__10306 = this;
    var this_sym10305__10309 = this;
    var node__10310 = this_sym10305__10309;
    return node__10310.cljs$core$ILookup$_lookup$arity$3(node__10310, k, not_found)
  };
  G__10351 = function(this_sym10305, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10351__2.call(this, this_sym10305, k);
      case 3:
        return G__10351__3.call(this, this_sym10305, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10351
}();
cljs.core.RedNode.prototype.apply = function(this_sym10296, args10297) {
  var this__10311 = this;
  return this_sym10296.call.apply(this_sym10296, [this_sym10296].concat(args10297.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10312 = this;
  return cljs.core.PersistentVector.fromArray([this__10312.key, this__10312.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10313 = this;
  return this__10313.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10314 = this;
  return this__10314.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10315 = this;
  var node__10316 = this;
  return new cljs.core.RedNode(this__10315.key, this__10315.val, this__10315.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10317 = this;
  var node__10318 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10319 = this;
  var node__10320 = this;
  return new cljs.core.RedNode(this__10319.key, this__10319.val, this__10319.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10321 = this;
  var node__10322 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10323 = this;
  var node__10324 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10324, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10325 = this;
  var node__10326 = this;
  return new cljs.core.RedNode(this__10325.key, this__10325.val, del, this__10325.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10327 = this;
  var node__10328 = this;
  return new cljs.core.RedNode(this__10327.key, this__10327.val, ins, this__10327.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10329 = this;
  var node__10330 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10329.left)) {
    return new cljs.core.RedNode(this__10329.key, this__10329.val, this__10329.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10329.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10329.right)) {
      return new cljs.core.RedNode(this__10329.right.key, this__10329.right.val, new cljs.core.BlackNode(this__10329.key, this__10329.val, this__10329.left, this__10329.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10329.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10330, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10352 = null;
  var G__10352__0 = function() {
    var this__10331 = this;
    var this__10333 = this;
    return cljs.core.pr_str.call(null, this__10333)
  };
  G__10352 = function() {
    switch(arguments.length) {
      case 0:
        return G__10352__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10352
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10334 = this;
  var node__10335 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10334.right)) {
    return new cljs.core.RedNode(this__10334.key, this__10334.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10334.left, null), this__10334.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10334.left)) {
      return new cljs.core.RedNode(this__10334.left.key, this__10334.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10334.left.left, null), new cljs.core.BlackNode(this__10334.key, this__10334.val, this__10334.left.right, this__10334.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10335, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10336 = this;
  var node__10337 = this;
  return new cljs.core.BlackNode(this__10336.key, this__10336.val, this__10336.left, this__10336.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10338 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10339 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10340 = this;
  return cljs.core.list.call(null, this__10340.key, this__10340.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10341 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10342 = this;
  return this__10342.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10343 = this;
  return cljs.core.PersistentVector.fromArray([this__10343.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10344 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10344.key, this__10344.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10345 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10346 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10346.key, this__10346.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10347 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10348 = this;
  if(n === 0) {
    return this__10348.key
  }else {
    if(n === 1) {
      return this__10348.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10349 = this;
  if(n === 0) {
    return this__10349.key
  }else {
    if(n === 1) {
      return this__10349.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10350 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10356 = comp.call(null, k, tree.key);
    if(c__10356 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10356 < 0) {
        var ins__10357 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10357 == null)) {
          return tree.add_left(ins__10357)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10358 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10358 == null)) {
            return tree.add_right(ins__10358)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10361 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10361)) {
            return new cljs.core.RedNode(app__10361.key, app__10361.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10361.left, null), new cljs.core.RedNode(right.key, right.val, app__10361.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10361, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10362 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10362)) {
              return new cljs.core.RedNode(app__10362.key, app__10362.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10362.left, null), new cljs.core.BlackNode(right.key, right.val, app__10362.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10362, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10368 = comp.call(null, k, tree.key);
    if(c__10368 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10368 < 0) {
        var del__10369 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto____10370 = !(del__10369 == null);
          if(or__3943__auto____10370) {
            return or__3943__auto____10370
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10369, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10369, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10371 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto____10372 = !(del__10371 == null);
            if(or__3943__auto____10372) {
              return or__3943__auto____10372
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10371)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10371, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10375 = tree.key;
  var c__10376 = comp.call(null, k, tk__10375);
  if(c__10376 === 0) {
    return tree.replace(tk__10375, v, tree.left, tree.right)
  }else {
    if(c__10376 < 0) {
      return tree.replace(tk__10375, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10375, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10379 = this;
  var h__2135__auto____10380 = this__10379.__hash;
  if(!(h__2135__auto____10380 == null)) {
    return h__2135__auto____10380
  }else {
    var h__2135__auto____10381 = cljs.core.hash_imap.call(null, coll);
    this__10379.__hash = h__2135__auto____10381;
    return h__2135__auto____10381
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10382 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10383 = this;
  var n__10384 = coll.entry_at(k);
  if(!(n__10384 == null)) {
    return n__10384.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10385 = this;
  var found__10386 = [null];
  var t__10387 = cljs.core.tree_map_add.call(null, this__10385.comp, this__10385.tree, k, v, found__10386);
  if(t__10387 == null) {
    var found_node__10388 = cljs.core.nth.call(null, found__10386, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10388.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10385.comp, cljs.core.tree_map_replace.call(null, this__10385.comp, this__10385.tree, k, v), this__10385.cnt, this__10385.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10385.comp, t__10387.blacken(), this__10385.cnt + 1, this__10385.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10389 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10423 = null;
  var G__10423__2 = function(this_sym10390, k) {
    var this__10392 = this;
    var this_sym10390__10393 = this;
    var coll__10394 = this_sym10390__10393;
    return coll__10394.cljs$core$ILookup$_lookup$arity$2(coll__10394, k)
  };
  var G__10423__3 = function(this_sym10391, k, not_found) {
    var this__10392 = this;
    var this_sym10391__10395 = this;
    var coll__10396 = this_sym10391__10395;
    return coll__10396.cljs$core$ILookup$_lookup$arity$3(coll__10396, k, not_found)
  };
  G__10423 = function(this_sym10391, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10423__2.call(this, this_sym10391, k);
      case 3:
        return G__10423__3.call(this, this_sym10391, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10423
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10377, args10378) {
  var this__10397 = this;
  return this_sym10377.call.apply(this_sym10377, [this_sym10377].concat(args10378.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10398 = this;
  if(!(this__10398.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10398.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10399 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10400 = this;
  if(this__10400.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10400.tree, false, this__10400.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10401 = this;
  var this__10402 = this;
  return cljs.core.pr_str.call(null, this__10402)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10403 = this;
  var coll__10404 = this;
  var t__10405 = this__10403.tree;
  while(true) {
    if(!(t__10405 == null)) {
      var c__10406 = this__10403.comp.call(null, k, t__10405.key);
      if(c__10406 === 0) {
        return t__10405
      }else {
        if(c__10406 < 0) {
          var G__10424 = t__10405.left;
          t__10405 = G__10424;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10425 = t__10405.right;
            t__10405 = G__10425;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10407 = this;
  if(this__10407.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10407.tree, ascending_QMARK_, this__10407.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10408 = this;
  if(this__10408.cnt > 0) {
    var stack__10409 = null;
    var t__10410 = this__10408.tree;
    while(true) {
      if(!(t__10410 == null)) {
        var c__10411 = this__10408.comp.call(null, k, t__10410.key);
        if(c__10411 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10409, t__10410), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10411 < 0) {
              var G__10426 = cljs.core.conj.call(null, stack__10409, t__10410);
              var G__10427 = t__10410.left;
              stack__10409 = G__10426;
              t__10410 = G__10427;
              continue
            }else {
              var G__10428 = stack__10409;
              var G__10429 = t__10410.right;
              stack__10409 = G__10428;
              t__10410 = G__10429;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10411 > 0) {
                var G__10430 = cljs.core.conj.call(null, stack__10409, t__10410);
                var G__10431 = t__10410.right;
                stack__10409 = G__10430;
                t__10410 = G__10431;
                continue
              }else {
                var G__10432 = stack__10409;
                var G__10433 = t__10410.left;
                stack__10409 = G__10432;
                t__10410 = G__10433;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10409 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10409, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10412 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10413 = this;
  return this__10413.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10414 = this;
  if(this__10414.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10414.tree, true, this__10414.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10415 = this;
  return this__10415.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10416 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10417 = this;
  return new cljs.core.PersistentTreeMap(this__10417.comp, this__10417.tree, this__10417.cnt, meta, this__10417.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10418 = this;
  return this__10418.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10419 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10419.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10420 = this;
  var found__10421 = [null];
  var t__10422 = cljs.core.tree_map_remove.call(null, this__10420.comp, this__10420.tree, k, found__10421);
  if(t__10422 == null) {
    if(cljs.core.nth.call(null, found__10421, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10420.comp, null, 0, this__10420.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10420.comp, t__10422.blacken(), this__10420.cnt - 1, this__10420.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10436 = cljs.core.seq.call(null, keyvals);
    var out__10437 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10436) {
        var G__10438 = cljs.core.nnext.call(null, in__10436);
        var G__10439 = cljs.core.assoc_BANG_.call(null, out__10437, cljs.core.first.call(null, in__10436), cljs.core.second.call(null, in__10436));
        in__10436 = G__10438;
        out__10437 = G__10439;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10437)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10440) {
    var keyvals = cljs.core.seq(arglist__10440);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10441) {
    var keyvals = cljs.core.seq(arglist__10441);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10445 = [];
    var obj__10446 = {};
    var kvs__10447 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10447) {
        ks__10445.push(cljs.core.first.call(null, kvs__10447));
        obj__10446[cljs.core.first.call(null, kvs__10447)] = cljs.core.second.call(null, kvs__10447);
        var G__10448 = cljs.core.nnext.call(null, kvs__10447);
        kvs__10447 = G__10448;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10445, obj__10446)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10449) {
    var keyvals = cljs.core.seq(arglist__10449);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10452 = cljs.core.seq.call(null, keyvals);
    var out__10453 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10452) {
        var G__10454 = cljs.core.nnext.call(null, in__10452);
        var G__10455 = cljs.core.assoc.call(null, out__10453, cljs.core.first.call(null, in__10452), cljs.core.second.call(null, in__10452));
        in__10452 = G__10454;
        out__10453 = G__10455;
        continue
      }else {
        return out__10453
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10456) {
    var keyvals = cljs.core.seq(arglist__10456);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10459 = cljs.core.seq.call(null, keyvals);
    var out__10460 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10459) {
        var G__10461 = cljs.core.nnext.call(null, in__10459);
        var G__10462 = cljs.core.assoc.call(null, out__10460, cljs.core.first.call(null, in__10459), cljs.core.second.call(null, in__10459));
        in__10459 = G__10461;
        out__10460 = G__10462;
        continue
      }else {
        return out__10460
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10463) {
    var comparator = cljs.core.first(arglist__10463);
    var keyvals = cljs.core.rest(arglist__10463);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10464_SHARP_, p2__10465_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto____10467 = p1__10464_SHARP_;
          if(cljs.core.truth_(or__3943__auto____10467)) {
            return or__3943__auto____10467
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10465_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10468) {
    var maps = cljs.core.seq(arglist__10468);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10476 = function(m, e) {
        var k__10474 = cljs.core.first.call(null, e);
        var v__10475 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10474)) {
          return cljs.core.assoc.call(null, m, k__10474, f.call(null, cljs.core._lookup.call(null, m, k__10474, null), v__10475))
        }else {
          return cljs.core.assoc.call(null, m, k__10474, v__10475)
        }
      };
      var merge2__10478 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10476, function() {
          var or__3943__auto____10477 = m1;
          if(cljs.core.truth_(or__3943__auto____10477)) {
            return or__3943__auto____10477
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10478, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10479) {
    var f = cljs.core.first(arglist__10479);
    var maps = cljs.core.rest(arglist__10479);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10484 = cljs.core.ObjMap.EMPTY;
  var keys__10485 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10485) {
      var key__10486 = cljs.core.first.call(null, keys__10485);
      var entry__10487 = cljs.core._lookup.call(null, map, key__10486, "\ufdd0'cljs.core/not-found");
      var G__10488 = cljs.core.not_EQ_.call(null, entry__10487, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10484, key__10486, entry__10487) : ret__10484;
      var G__10489 = cljs.core.next.call(null, keys__10485);
      ret__10484 = G__10488;
      keys__10485 = G__10489;
      continue
    }else {
      return ret__10484
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10493 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10493.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10494 = this;
  var h__2135__auto____10495 = this__10494.__hash;
  if(!(h__2135__auto____10495 == null)) {
    return h__2135__auto____10495
  }else {
    var h__2135__auto____10496 = cljs.core.hash_iset.call(null, coll);
    this__10494.__hash = h__2135__auto____10496;
    return h__2135__auto____10496
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10497 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10498 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10498.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10519 = null;
  var G__10519__2 = function(this_sym10499, k) {
    var this__10501 = this;
    var this_sym10499__10502 = this;
    var coll__10503 = this_sym10499__10502;
    return coll__10503.cljs$core$ILookup$_lookup$arity$2(coll__10503, k)
  };
  var G__10519__3 = function(this_sym10500, k, not_found) {
    var this__10501 = this;
    var this_sym10500__10504 = this;
    var coll__10505 = this_sym10500__10504;
    return coll__10505.cljs$core$ILookup$_lookup$arity$3(coll__10505, k, not_found)
  };
  G__10519 = function(this_sym10500, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10519__2.call(this, this_sym10500, k);
      case 3:
        return G__10519__3.call(this, this_sym10500, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10519
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10491, args10492) {
  var this__10506 = this;
  return this_sym10491.call.apply(this_sym10491, [this_sym10491].concat(args10492.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10507 = this;
  return new cljs.core.PersistentHashSet(this__10507.meta, cljs.core.assoc.call(null, this__10507.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10508 = this;
  var this__10509 = this;
  return cljs.core.pr_str.call(null, this__10509)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10510 = this;
  return cljs.core.keys.call(null, this__10510.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10511 = this;
  return new cljs.core.PersistentHashSet(this__10511.meta, cljs.core.dissoc.call(null, this__10511.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10512 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10513 = this;
  var and__3941__auto____10514 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____10514) {
    var and__3941__auto____10515 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____10515) {
      return cljs.core.every_QMARK_.call(null, function(p1__10490_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10490_SHARP_)
      }, other)
    }else {
      return and__3941__auto____10515
    }
  }else {
    return and__3941__auto____10514
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10516 = this;
  return new cljs.core.PersistentHashSet(meta, this__10516.hash_map, this__10516.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10517 = this;
  return this__10517.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10518 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10518.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10520 = cljs.core.count.call(null, items);
  var i__10521 = 0;
  var out__10522 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10521 < len__10520) {
      var G__10523 = i__10521 + 1;
      var G__10524 = cljs.core.conj_BANG_.call(null, out__10522, items[i__10521]);
      i__10521 = G__10523;
      out__10522 = G__10524;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10522)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10542 = null;
  var G__10542__2 = function(this_sym10528, k) {
    var this__10530 = this;
    var this_sym10528__10531 = this;
    var tcoll__10532 = this_sym10528__10531;
    if(cljs.core._lookup.call(null, this__10530.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10542__3 = function(this_sym10529, k, not_found) {
    var this__10530 = this;
    var this_sym10529__10533 = this;
    var tcoll__10534 = this_sym10529__10533;
    if(cljs.core._lookup.call(null, this__10530.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10542 = function(this_sym10529, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10542__2.call(this, this_sym10529, k);
      case 3:
        return G__10542__3.call(this, this_sym10529, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10542
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10526, args10527) {
  var this__10535 = this;
  return this_sym10526.call.apply(this_sym10526, [this_sym10526].concat(args10527.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10536 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10537 = this;
  if(cljs.core._lookup.call(null, this__10537.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10538 = this;
  return cljs.core.count.call(null, this__10538.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10539 = this;
  this__10539.transient_map = cljs.core.dissoc_BANG_.call(null, this__10539.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10540 = this;
  this__10540.transient_map = cljs.core.assoc_BANG_.call(null, this__10540.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10541 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10541.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10545 = this;
  var h__2135__auto____10546 = this__10545.__hash;
  if(!(h__2135__auto____10546 == null)) {
    return h__2135__auto____10546
  }else {
    var h__2135__auto____10547 = cljs.core.hash_iset.call(null, coll);
    this__10545.__hash = h__2135__auto____10547;
    return h__2135__auto____10547
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10548 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10549 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10549.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10575 = null;
  var G__10575__2 = function(this_sym10550, k) {
    var this__10552 = this;
    var this_sym10550__10553 = this;
    var coll__10554 = this_sym10550__10553;
    return coll__10554.cljs$core$ILookup$_lookup$arity$2(coll__10554, k)
  };
  var G__10575__3 = function(this_sym10551, k, not_found) {
    var this__10552 = this;
    var this_sym10551__10555 = this;
    var coll__10556 = this_sym10551__10555;
    return coll__10556.cljs$core$ILookup$_lookup$arity$3(coll__10556, k, not_found)
  };
  G__10575 = function(this_sym10551, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10575__2.call(this, this_sym10551, k);
      case 3:
        return G__10575__3.call(this, this_sym10551, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10575
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10543, args10544) {
  var this__10557 = this;
  return this_sym10543.call.apply(this_sym10543, [this_sym10543].concat(args10544.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10558 = this;
  return new cljs.core.PersistentTreeSet(this__10558.meta, cljs.core.assoc.call(null, this__10558.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10559 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10559.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10560 = this;
  var this__10561 = this;
  return cljs.core.pr_str.call(null, this__10561)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10562 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10562.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10563 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10563.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10564 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10565 = this;
  return cljs.core._comparator.call(null, this__10565.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10566 = this;
  return cljs.core.keys.call(null, this__10566.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10567 = this;
  return new cljs.core.PersistentTreeSet(this__10567.meta, cljs.core.dissoc.call(null, this__10567.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10568 = this;
  return cljs.core.count.call(null, this__10568.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10569 = this;
  var and__3941__auto____10570 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____10570) {
    var and__3941__auto____10571 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____10571) {
      return cljs.core.every_QMARK_.call(null, function(p1__10525_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10525_SHARP_)
      }, other)
    }else {
      return and__3941__auto____10571
    }
  }else {
    return and__3941__auto____10570
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10572 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10572.tree_map, this__10572.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10573 = this;
  return this__10573.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10574 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10574.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10580__delegate = function(keys) {
      var in__10578 = cljs.core.seq.call(null, keys);
      var out__10579 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10578)) {
          var G__10581 = cljs.core.next.call(null, in__10578);
          var G__10582 = cljs.core.conj_BANG_.call(null, out__10579, cljs.core.first.call(null, in__10578));
          in__10578 = G__10581;
          out__10579 = G__10582;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10579)
        }
        break
      }
    };
    var G__10580 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10580__delegate.call(this, keys)
    };
    G__10580.cljs$lang$maxFixedArity = 0;
    G__10580.cljs$lang$applyTo = function(arglist__10583) {
      var keys = cljs.core.seq(arglist__10583);
      return G__10580__delegate(keys)
    };
    G__10580.cljs$lang$arity$variadic = G__10580__delegate;
    return G__10580
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10584) {
    var keys = cljs.core.seq(arglist__10584);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10586) {
    var comparator = cljs.core.first(arglist__10586);
    var keys = cljs.core.rest(arglist__10586);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10592 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto____10593 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto____10593)) {
        var e__10594 = temp__4090__auto____10593;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10594))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10592, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10585_SHARP_) {
      var temp__4090__auto____10595 = cljs.core.find.call(null, smap, p1__10585_SHARP_);
      if(cljs.core.truth_(temp__4090__auto____10595)) {
        var e__10596 = temp__4090__auto____10595;
        return cljs.core.second.call(null, e__10596)
      }else {
        return p1__10585_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10626 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10619, seen) {
        while(true) {
          var vec__10620__10621 = p__10619;
          var f__10622 = cljs.core.nth.call(null, vec__10620__10621, 0, null);
          var xs__10623 = vec__10620__10621;
          var temp__4092__auto____10624 = cljs.core.seq.call(null, xs__10623);
          if(temp__4092__auto____10624) {
            var s__10625 = temp__4092__auto____10624;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10622)) {
              var G__10627 = cljs.core.rest.call(null, s__10625);
              var G__10628 = seen;
              p__10619 = G__10627;
              seen = G__10628;
              continue
            }else {
              return cljs.core.cons.call(null, f__10622, step.call(null, cljs.core.rest.call(null, s__10625), cljs.core.conj.call(null, seen, f__10622)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10626.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10631 = cljs.core.PersistentVector.EMPTY;
  var s__10632 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10632)) {
      var G__10633 = cljs.core.conj.call(null, ret__10631, cljs.core.first.call(null, s__10632));
      var G__10634 = cljs.core.next.call(null, s__10632);
      ret__10631 = G__10633;
      s__10632 = G__10634;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10631)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3943__auto____10637 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3943__auto____10637) {
        return or__3943__auto____10637
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10638 = x.lastIndexOf("/");
      if(i__10638 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10638 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3943__auto____10641 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3943__auto____10641) {
      return or__3943__auto____10641
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10642 = x.lastIndexOf("/");
    if(i__10642 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10642)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10649 = cljs.core.ObjMap.EMPTY;
  var ks__10650 = cljs.core.seq.call(null, keys);
  var vs__10651 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto____10652 = ks__10650;
      if(and__3941__auto____10652) {
        return vs__10651
      }else {
        return and__3941__auto____10652
      }
    }()) {
      var G__10653 = cljs.core.assoc.call(null, map__10649, cljs.core.first.call(null, ks__10650), cljs.core.first.call(null, vs__10651));
      var G__10654 = cljs.core.next.call(null, ks__10650);
      var G__10655 = cljs.core.next.call(null, vs__10651);
      map__10649 = G__10653;
      ks__10650 = G__10654;
      vs__10651 = G__10655;
      continue
    }else {
      return map__10649
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10658__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10643_SHARP_, p2__10644_SHARP_) {
        return max_key.call(null, k, p1__10643_SHARP_, p2__10644_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10658 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10658__delegate.call(this, k, x, y, more)
    };
    G__10658.cljs$lang$maxFixedArity = 3;
    G__10658.cljs$lang$applyTo = function(arglist__10659) {
      var k = cljs.core.first(arglist__10659);
      var x = cljs.core.first(cljs.core.next(arglist__10659));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10659)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10659)));
      return G__10658__delegate(k, x, y, more)
    };
    G__10658.cljs$lang$arity$variadic = G__10658__delegate;
    return G__10658
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10660__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10656_SHARP_, p2__10657_SHARP_) {
        return min_key.call(null, k, p1__10656_SHARP_, p2__10657_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10660 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10660__delegate.call(this, k, x, y, more)
    };
    G__10660.cljs$lang$maxFixedArity = 3;
    G__10660.cljs$lang$applyTo = function(arglist__10661) {
      var k = cljs.core.first(arglist__10661);
      var x = cljs.core.first(cljs.core.next(arglist__10661));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10661)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10661)));
      return G__10660__delegate(k, x, y, more)
    };
    G__10660.cljs$lang$arity$variadic = G__10660__delegate;
    return G__10660
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10664 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10664) {
        var s__10665 = temp__4092__auto____10664;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10665), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10665)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10668 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10668) {
      var s__10669 = temp__4092__auto____10668;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10669)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10669), take_while.call(null, pred, cljs.core.rest.call(null, s__10669)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10671 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10671.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10683 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__4092__auto____10684 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto____10684)) {
        var vec__10685__10686 = temp__4092__auto____10684;
        var e__10687 = cljs.core.nth.call(null, vec__10685__10686, 0, null);
        var s__10688 = vec__10685__10686;
        if(cljs.core.truth_(include__10683.call(null, e__10687))) {
          return s__10688
        }else {
          return cljs.core.next.call(null, s__10688)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10683, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____10689 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto____10689)) {
      var vec__10690__10691 = temp__4092__auto____10689;
      var e__10692 = cljs.core.nth.call(null, vec__10690__10691, 0, null);
      var s__10693 = vec__10690__10691;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10692)) ? s__10693 : cljs.core.next.call(null, s__10693))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10705 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__4092__auto____10706 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto____10706)) {
        var vec__10707__10708 = temp__4092__auto____10706;
        var e__10709 = cljs.core.nth.call(null, vec__10707__10708, 0, null);
        var s__10710 = vec__10707__10708;
        if(cljs.core.truth_(include__10705.call(null, e__10709))) {
          return s__10710
        }else {
          return cljs.core.next.call(null, s__10710)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10705, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____10711 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto____10711)) {
      var vec__10712__10713 = temp__4092__auto____10711;
      var e__10714 = cljs.core.nth.call(null, vec__10712__10713, 0, null);
      var s__10715 = vec__10712__10713;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10714)) ? s__10715 : cljs.core.next.call(null, s__10715))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10716 = this;
  var h__2135__auto____10717 = this__10716.__hash;
  if(!(h__2135__auto____10717 == null)) {
    return h__2135__auto____10717
  }else {
    var h__2135__auto____10718 = cljs.core.hash_coll.call(null, rng);
    this__10716.__hash = h__2135__auto____10718;
    return h__2135__auto____10718
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10719 = this;
  if(this__10719.step > 0) {
    if(this__10719.start + this__10719.step < this__10719.end) {
      return new cljs.core.Range(this__10719.meta, this__10719.start + this__10719.step, this__10719.end, this__10719.step, null)
    }else {
      return null
    }
  }else {
    if(this__10719.start + this__10719.step > this__10719.end) {
      return new cljs.core.Range(this__10719.meta, this__10719.start + this__10719.step, this__10719.end, this__10719.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10720 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10721 = this;
  var this__10722 = this;
  return cljs.core.pr_str.call(null, this__10722)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10723 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10724 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10725 = this;
  if(this__10725.step > 0) {
    if(this__10725.start < this__10725.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10725.start > this__10725.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10726 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10726.end - this__10726.start) / this__10726.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10727 = this;
  return this__10727.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10728 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10728.meta, this__10728.start + this__10728.step, this__10728.end, this__10728.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10729 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10730 = this;
  return new cljs.core.Range(meta, this__10730.start, this__10730.end, this__10730.step, this__10730.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10731 = this;
  return this__10731.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10732 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10732.start + n * this__10732.step
  }else {
    if(function() {
      var and__3941__auto____10733 = this__10732.start > this__10732.end;
      if(and__3941__auto____10733) {
        return this__10732.step === 0
      }else {
        return and__3941__auto____10733
      }
    }()) {
      return this__10732.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10734 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10734.start + n * this__10734.step
  }else {
    if(function() {
      var and__3941__auto____10735 = this__10734.start > this__10734.end;
      if(and__3941__auto____10735) {
        return this__10734.step === 0
      }else {
        return and__3941__auto____10735
      }
    }()) {
      return this__10734.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10736 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10736.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10739 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10739) {
      var s__10740 = temp__4092__auto____10739;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10740), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10740)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10747 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10747) {
      var s__10748 = temp__4092__auto____10747;
      var fst__10749 = cljs.core.first.call(null, s__10748);
      var fv__10750 = f.call(null, fst__10749);
      var run__10751 = cljs.core.cons.call(null, fst__10749, cljs.core.take_while.call(null, function(p1__10741_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10750, f.call(null, p1__10741_SHARP_))
      }, cljs.core.next.call(null, s__10748)));
      return cljs.core.cons.call(null, run__10751, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10751), s__10748))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____10766 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____10766) {
        var s__10767 = temp__4090__auto____10766;
        return reductions.call(null, f, cljs.core.first.call(null, s__10767), cljs.core.rest.call(null, s__10767))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10768 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10768) {
        var s__10769 = temp__4092__auto____10768;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10769)), cljs.core.rest.call(null, s__10769))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10772 = null;
      var G__10772__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10772__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10772__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10772__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10772__4 = function() {
        var G__10773__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10773 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10773__delegate.call(this, x, y, z, args)
        };
        G__10773.cljs$lang$maxFixedArity = 3;
        G__10773.cljs$lang$applyTo = function(arglist__10774) {
          var x = cljs.core.first(arglist__10774);
          var y = cljs.core.first(cljs.core.next(arglist__10774));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10774)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10774)));
          return G__10773__delegate(x, y, z, args)
        };
        G__10773.cljs$lang$arity$variadic = G__10773__delegate;
        return G__10773
      }();
      G__10772 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10772__0.call(this);
          case 1:
            return G__10772__1.call(this, x);
          case 2:
            return G__10772__2.call(this, x, y);
          case 3:
            return G__10772__3.call(this, x, y, z);
          default:
            return G__10772__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10772.cljs$lang$maxFixedArity = 3;
      G__10772.cljs$lang$applyTo = G__10772__4.cljs$lang$applyTo;
      return G__10772
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10775 = null;
      var G__10775__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10775__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10775__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10775__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10775__4 = function() {
        var G__10776__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10776 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10776__delegate.call(this, x, y, z, args)
        };
        G__10776.cljs$lang$maxFixedArity = 3;
        G__10776.cljs$lang$applyTo = function(arglist__10777) {
          var x = cljs.core.first(arglist__10777);
          var y = cljs.core.first(cljs.core.next(arglist__10777));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10777)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10777)));
          return G__10776__delegate(x, y, z, args)
        };
        G__10776.cljs$lang$arity$variadic = G__10776__delegate;
        return G__10776
      }();
      G__10775 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10775__0.call(this);
          case 1:
            return G__10775__1.call(this, x);
          case 2:
            return G__10775__2.call(this, x, y);
          case 3:
            return G__10775__3.call(this, x, y, z);
          default:
            return G__10775__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10775.cljs$lang$maxFixedArity = 3;
      G__10775.cljs$lang$applyTo = G__10775__4.cljs$lang$applyTo;
      return G__10775
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10778 = null;
      var G__10778__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10778__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10778__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10778__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10778__4 = function() {
        var G__10779__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10779 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10779__delegate.call(this, x, y, z, args)
        };
        G__10779.cljs$lang$maxFixedArity = 3;
        G__10779.cljs$lang$applyTo = function(arglist__10780) {
          var x = cljs.core.first(arglist__10780);
          var y = cljs.core.first(cljs.core.next(arglist__10780));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10780)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10780)));
          return G__10779__delegate(x, y, z, args)
        };
        G__10779.cljs$lang$arity$variadic = G__10779__delegate;
        return G__10779
      }();
      G__10778 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10778__0.call(this);
          case 1:
            return G__10778__1.call(this, x);
          case 2:
            return G__10778__2.call(this, x, y);
          case 3:
            return G__10778__3.call(this, x, y, z);
          default:
            return G__10778__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10778.cljs$lang$maxFixedArity = 3;
      G__10778.cljs$lang$applyTo = G__10778__4.cljs$lang$applyTo;
      return G__10778
    }()
  };
  var juxt__4 = function() {
    var G__10781__delegate = function(f, g, h, fs) {
      var fs__10771 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10782 = null;
        var G__10782__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10752_SHARP_, p2__10753_SHARP_) {
            return cljs.core.conj.call(null, p1__10752_SHARP_, p2__10753_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10771)
        };
        var G__10782__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10754_SHARP_, p2__10755_SHARP_) {
            return cljs.core.conj.call(null, p1__10754_SHARP_, p2__10755_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10771)
        };
        var G__10782__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10756_SHARP_, p2__10757_SHARP_) {
            return cljs.core.conj.call(null, p1__10756_SHARP_, p2__10757_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10771)
        };
        var G__10782__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10758_SHARP_, p2__10759_SHARP_) {
            return cljs.core.conj.call(null, p1__10758_SHARP_, p2__10759_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10771)
        };
        var G__10782__4 = function() {
          var G__10783__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10760_SHARP_, p2__10761_SHARP_) {
              return cljs.core.conj.call(null, p1__10760_SHARP_, cljs.core.apply.call(null, p2__10761_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10771)
          };
          var G__10783 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10783__delegate.call(this, x, y, z, args)
          };
          G__10783.cljs$lang$maxFixedArity = 3;
          G__10783.cljs$lang$applyTo = function(arglist__10784) {
            var x = cljs.core.first(arglist__10784);
            var y = cljs.core.first(cljs.core.next(arglist__10784));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10784)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10784)));
            return G__10783__delegate(x, y, z, args)
          };
          G__10783.cljs$lang$arity$variadic = G__10783__delegate;
          return G__10783
        }();
        G__10782 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10782__0.call(this);
            case 1:
              return G__10782__1.call(this, x);
            case 2:
              return G__10782__2.call(this, x, y);
            case 3:
              return G__10782__3.call(this, x, y, z);
            default:
              return G__10782__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10782.cljs$lang$maxFixedArity = 3;
        G__10782.cljs$lang$applyTo = G__10782__4.cljs$lang$applyTo;
        return G__10782
      }()
    };
    var G__10781 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10781__delegate.call(this, f, g, h, fs)
    };
    G__10781.cljs$lang$maxFixedArity = 3;
    G__10781.cljs$lang$applyTo = function(arglist__10785) {
      var f = cljs.core.first(arglist__10785);
      var g = cljs.core.first(cljs.core.next(arglist__10785));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10785)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10785)));
      return G__10781__delegate(f, g, h, fs)
    };
    G__10781.cljs$lang$arity$variadic = G__10781__delegate;
    return G__10781
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10788 = cljs.core.next.call(null, coll);
        coll = G__10788;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____10787 = cljs.core.seq.call(null, coll);
        if(and__3941__auto____10787) {
          return n > 0
        }else {
          return and__3941__auto____10787
        }
      }())) {
        var G__10789 = n - 1;
        var G__10790 = cljs.core.next.call(null, coll);
        n = G__10789;
        coll = G__10790;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10792 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10792), s)) {
    if(cljs.core.count.call(null, matches__10792) === 1) {
      return cljs.core.first.call(null, matches__10792)
    }else {
      return cljs.core.vec.call(null, matches__10792)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10794 = re.exec(s);
  if(matches__10794 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10794) === 1) {
      return cljs.core.first.call(null, matches__10794)
    }else {
      return cljs.core.vec.call(null, matches__10794)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10799 = cljs.core.re_find.call(null, re, s);
  var match_idx__10800 = s.search(re);
  var match_str__10801 = cljs.core.coll_QMARK_.call(null, match_data__10799) ? cljs.core.first.call(null, match_data__10799) : match_data__10799;
  var post_match__10802 = cljs.core.subs.call(null, s, match_idx__10800 + cljs.core.count.call(null, match_str__10801));
  if(cljs.core.truth_(match_data__10799)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10799, re_seq.call(null, re, post_match__10802))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10809__10810 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10811 = cljs.core.nth.call(null, vec__10809__10810, 0, null);
  var flags__10812 = cljs.core.nth.call(null, vec__10809__10810, 1, null);
  var pattern__10813 = cljs.core.nth.call(null, vec__10809__10810, 2, null);
  return new RegExp(pattern__10813, flags__10812)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10803_SHARP_) {
    return print_one.call(null, p1__10803_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3941__auto____10823 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3941__auto____10823)) {
            var and__3941__auto____10827 = function() {
              var G__10824__10825 = obj;
              if(G__10824__10825) {
                if(function() {
                  var or__3943__auto____10826 = G__10824__10825.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto____10826) {
                    return or__3943__auto____10826
                  }else {
                    return G__10824__10825.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10824__10825.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10824__10825)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10824__10825)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____10827)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____10827
            }
          }else {
            return and__3941__auto____10823
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3941__auto____10828 = !(obj == null);
          if(and__3941__auto____10828) {
            return obj.cljs$lang$type
          }else {
            return and__3941__auto____10828
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10829__10830 = obj;
          if(G__10829__10830) {
            if(function() {
              var or__3943__auto____10831 = G__10829__10830.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3943__auto____10831) {
                return or__3943__auto____10831
              }else {
                return G__10829__10830.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10829__10830.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10829__10830)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10829__10830)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__10851 = new goog.string.StringBuffer;
  var G__10852__10853 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10852__10853) {
    var string__10854 = cljs.core.first.call(null, G__10852__10853);
    var G__10852__10855 = G__10852__10853;
    while(true) {
      sb__10851.append(string__10854);
      var temp__4092__auto____10856 = cljs.core.next.call(null, G__10852__10855);
      if(temp__4092__auto____10856) {
        var G__10852__10857 = temp__4092__auto____10856;
        var G__10870 = cljs.core.first.call(null, G__10852__10857);
        var G__10871 = G__10852__10857;
        string__10854 = G__10870;
        G__10852__10855 = G__10871;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10858__10859 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10858__10859) {
    var obj__10860 = cljs.core.first.call(null, G__10858__10859);
    var G__10858__10861 = G__10858__10859;
    while(true) {
      sb__10851.append(" ");
      var G__10862__10863 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10860, opts));
      if(G__10862__10863) {
        var string__10864 = cljs.core.first.call(null, G__10862__10863);
        var G__10862__10865 = G__10862__10863;
        while(true) {
          sb__10851.append(string__10864);
          var temp__4092__auto____10866 = cljs.core.next.call(null, G__10862__10865);
          if(temp__4092__auto____10866) {
            var G__10862__10867 = temp__4092__auto____10866;
            var G__10872 = cljs.core.first.call(null, G__10862__10867);
            var G__10873 = G__10862__10867;
            string__10864 = G__10872;
            G__10862__10865 = G__10873;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____10868 = cljs.core.next.call(null, G__10858__10861);
      if(temp__4092__auto____10868) {
        var G__10858__10869 = temp__4092__auto____10868;
        var G__10874 = cljs.core.first.call(null, G__10858__10869);
        var G__10875 = G__10858__10869;
        obj__10860 = G__10874;
        G__10858__10861 = G__10875;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10851
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10877 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10877.append("\n");
  return[cljs.core.str(sb__10877)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__10896__10897 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10896__10897) {
    var string__10898 = cljs.core.first.call(null, G__10896__10897);
    var G__10896__10899 = G__10896__10897;
    while(true) {
      cljs.core.string_print.call(null, string__10898);
      var temp__4092__auto____10900 = cljs.core.next.call(null, G__10896__10899);
      if(temp__4092__auto____10900) {
        var G__10896__10901 = temp__4092__auto____10900;
        var G__10914 = cljs.core.first.call(null, G__10896__10901);
        var G__10915 = G__10896__10901;
        string__10898 = G__10914;
        G__10896__10899 = G__10915;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10902__10903 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10902__10903) {
    var obj__10904 = cljs.core.first.call(null, G__10902__10903);
    var G__10902__10905 = G__10902__10903;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__10906__10907 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10904, opts));
      if(G__10906__10907) {
        var string__10908 = cljs.core.first.call(null, G__10906__10907);
        var G__10906__10909 = G__10906__10907;
        while(true) {
          cljs.core.string_print.call(null, string__10908);
          var temp__4092__auto____10910 = cljs.core.next.call(null, G__10906__10909);
          if(temp__4092__auto____10910) {
            var G__10906__10911 = temp__4092__auto____10910;
            var G__10916 = cljs.core.first.call(null, G__10906__10911);
            var G__10917 = G__10906__10911;
            string__10908 = G__10916;
            G__10906__10909 = G__10917;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____10912 = cljs.core.next.call(null, G__10902__10905);
      if(temp__4092__auto____10912) {
        var G__10902__10913 = temp__4092__auto____10912;
        var G__10918 = cljs.core.first.call(null, G__10902__10913);
        var G__10919 = G__10902__10913;
        obj__10904 = G__10918;
        G__10902__10905 = G__10919;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10920) {
    var objs = cljs.core.seq(arglist__10920);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10921) {
    var objs = cljs.core.seq(arglist__10921);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10922) {
    var objs = cljs.core.seq(arglist__10922);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10923) {
    var objs = cljs.core.seq(arglist__10923);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10924) {
    var objs = cljs.core.seq(arglist__10924);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10925) {
    var objs = cljs.core.seq(arglist__10925);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10926) {
    var objs = cljs.core.seq(arglist__10926);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10927) {
    var objs = cljs.core.seq(arglist__10927);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10928) {
    var fmt = cljs.core.first(arglist__10928);
    var args = cljs.core.rest(arglist__10928);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10929 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10929, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10930 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10930, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10931 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10931, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__4092__auto____10932 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__4092__auto____10932)) {
        var nspc__10933 = temp__4092__auto____10932;
        return[cljs.core.str(nspc__10933), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__4092__auto____10934 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__4092__auto____10934)) {
          var nspc__10935 = temp__4092__auto____10934;
          return[cljs.core.str(nspc__10935), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10936 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10936, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10938 = function(n, len) {
    var ns__10937 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10937) < len) {
        var G__10940 = [cljs.core.str("0"), cljs.core.str(ns__10937)].join("");
        ns__10937 = G__10940;
        continue
      }else {
        return ns__10937
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10938.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10938.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10938.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10938.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10938.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10938.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10939 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10939, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10941 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10942 = this;
  var G__10943__10944 = cljs.core.seq.call(null, this__10942.watches);
  if(G__10943__10944) {
    var G__10946__10948 = cljs.core.first.call(null, G__10943__10944);
    var vec__10947__10949 = G__10946__10948;
    var key__10950 = cljs.core.nth.call(null, vec__10947__10949, 0, null);
    var f__10951 = cljs.core.nth.call(null, vec__10947__10949, 1, null);
    var G__10943__10952 = G__10943__10944;
    var G__10946__10953 = G__10946__10948;
    var G__10943__10954 = G__10943__10952;
    while(true) {
      var vec__10955__10956 = G__10946__10953;
      var key__10957 = cljs.core.nth.call(null, vec__10955__10956, 0, null);
      var f__10958 = cljs.core.nth.call(null, vec__10955__10956, 1, null);
      var G__10943__10959 = G__10943__10954;
      f__10958.call(null, key__10957, this$, oldval, newval);
      var temp__4092__auto____10960 = cljs.core.next.call(null, G__10943__10959);
      if(temp__4092__auto____10960) {
        var G__10943__10961 = temp__4092__auto____10960;
        var G__10968 = cljs.core.first.call(null, G__10943__10961);
        var G__10969 = G__10943__10961;
        G__10946__10953 = G__10968;
        G__10943__10954 = G__10969;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10962 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10962.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10963 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10963.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10964 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10964.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10965 = this;
  return this__10965.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10966 = this;
  return this__10966.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10967 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10981__delegate = function(x, p__10970) {
      var map__10976__10977 = p__10970;
      var map__10976__10978 = cljs.core.seq_QMARK_.call(null, map__10976__10977) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10976__10977) : map__10976__10977;
      var validator__10979 = cljs.core._lookup.call(null, map__10976__10978, "\ufdd0'validator", null);
      var meta__10980 = cljs.core._lookup.call(null, map__10976__10978, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10980, validator__10979, null)
    };
    var G__10981 = function(x, var_args) {
      var p__10970 = null;
      if(goog.isDef(var_args)) {
        p__10970 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10981__delegate.call(this, x, p__10970)
    };
    G__10981.cljs$lang$maxFixedArity = 1;
    G__10981.cljs$lang$applyTo = function(arglist__10982) {
      var x = cljs.core.first(arglist__10982);
      var p__10970 = cljs.core.rest(arglist__10982);
      return G__10981__delegate(x, p__10970)
    };
    G__10981.cljs$lang$arity$variadic = G__10981__delegate;
    return G__10981
  }();
  atom = function(x, var_args) {
    var p__10970 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto____10986 = a.validator;
  if(cljs.core.truth_(temp__4092__auto____10986)) {
    var validate__10987 = temp__4092__auto____10986;
    if(cljs.core.truth_(validate__10987.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440, "\ufdd0'column", 13))))].join(""));
    }
  }else {
  }
  var old_value__10988 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10988, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10989__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10989 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10989__delegate.call(this, a, f, x, y, z, more)
    };
    G__10989.cljs$lang$maxFixedArity = 5;
    G__10989.cljs$lang$applyTo = function(arglist__10990) {
      var a = cljs.core.first(arglist__10990);
      var f = cljs.core.first(cljs.core.next(arglist__10990));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10990)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10990))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10990)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10990)))));
      return G__10989__delegate(a, f, x, y, z, more)
    };
    G__10989.cljs$lang$arity$variadic = G__10989__delegate;
    return G__10989
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10991) {
    var iref = cljs.core.first(arglist__10991);
    var f = cljs.core.first(cljs.core.next(arglist__10991));
    var args = cljs.core.rest(cljs.core.next(arglist__10991));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10992 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10992.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10993 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10993.state, function(p__10994) {
    var map__10995__10996 = p__10994;
    var map__10995__10997 = cljs.core.seq_QMARK_.call(null, map__10995__10996) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10995__10996) : map__10995__10996;
    var curr_state__10998 = map__10995__10997;
    var done__10999 = cljs.core._lookup.call(null, map__10995__10997, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10999)) {
      return curr_state__10998
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10993.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11028__11029 = options;
    var map__11028__11030 = cljs.core.seq_QMARK_.call(null, map__11028__11029) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11028__11029) : map__11028__11029;
    var keywordize_keys__11031 = cljs.core._lookup.call(null, map__11028__11030, "\ufdd0'keywordize-keys", null);
    var keyfn__11032 = cljs.core.truth_(keywordize_keys__11031) ? cljs.core.keyword : cljs.core.str;
    var f__11055 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2405__auto____11054 = function iter__11044(s__11045) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11045__11050 = s__11045;
                    while(true) {
                      var temp__4092__auto____11051 = cljs.core.seq.call(null, s__11045__11050);
                      if(temp__4092__auto____11051) {
                        var xs__4579__auto____11052 = temp__4092__auto____11051;
                        var k__11053 = cljs.core.first.call(null, xs__4579__auto____11052);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11032.call(null, k__11053), thisfn.call(null, x[k__11053])], true), iter__11044.call(null, cljs.core.rest.call(null, s__11045__11050)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2405__auto____11054.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11055.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11056) {
    var x = cljs.core.first(arglist__11056);
    var options = cljs.core.rest(arglist__11056);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11061 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11065__delegate = function(args) {
      var temp__4090__auto____11062 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11061), args, null);
      if(cljs.core.truth_(temp__4090__auto____11062)) {
        var v__11063 = temp__4090__auto____11062;
        return v__11063
      }else {
        var ret__11064 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11061, cljs.core.assoc, args, ret__11064);
        return ret__11064
      }
    };
    var G__11065 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11065__delegate.call(this, args)
    };
    G__11065.cljs$lang$maxFixedArity = 0;
    G__11065.cljs$lang$applyTo = function(arglist__11066) {
      var args = cljs.core.seq(arglist__11066);
      return G__11065__delegate(args)
    };
    G__11065.cljs$lang$arity$variadic = G__11065__delegate;
    return G__11065
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11068 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11068)) {
        var G__11069 = ret__11068;
        f = G__11069;
        continue
      }else {
        return ret__11068
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11070__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11070 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11070__delegate.call(this, f, args)
    };
    G__11070.cljs$lang$maxFixedArity = 1;
    G__11070.cljs$lang$applyTo = function(arglist__11071) {
      var f = cljs.core.first(arglist__11071);
      var args = cljs.core.rest(arglist__11071);
      return G__11070__delegate(f, args)
    };
    G__11070.cljs$lang$arity$variadic = G__11070__delegate;
    return G__11070
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11073 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11073, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11073, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto____11082 = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto____11082) {
      return or__3943__auto____11082
    }else {
      var or__3943__auto____11083 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____11083) {
        return or__3943__auto____11083
      }else {
        var and__3941__auto____11084 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto____11084) {
          var and__3941__auto____11085 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____11085) {
            var and__3941__auto____11086 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____11086) {
              var ret__11087 = true;
              var i__11088 = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____11089 = cljs.core.not.call(null, ret__11087);
                  if(or__3943__auto____11089) {
                    return or__3943__auto____11089
                  }else {
                    return i__11088 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11087
                }else {
                  var G__11090 = isa_QMARK_.call(null, h, child.call(null, i__11088), parent.call(null, i__11088));
                  var G__11091 = i__11088 + 1;
                  ret__11087 = G__11090;
                  i__11088 = G__11091;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____11086
            }
          }else {
            return and__3941__auto____11085
          }
        }else {
          return and__3941__auto____11084
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724, "\ufdd0'column", 12))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728, "\ufdd0'column", 12))))].join(""));
    }
    var tp__11100 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11101 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11102 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11103 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3943__auto____11104 = cljs.core.contains_QMARK_.call(null, tp__11100.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11102.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11102.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11100, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11103.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11101, parent, ta__11102), "\ufdd0'descendants":tf__11103.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11102, tag, td__11101)})
    }();
    if(cljs.core.truth_(or__3943__auto____11104)) {
      return or__3943__auto____11104
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11109 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11110 = cljs.core.truth_(parentMap__11109.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11109.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11111 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11110)) ? cljs.core.assoc.call(null, parentMap__11109, tag, childsParents__11110) : cljs.core.dissoc.call(null, parentMap__11109, tag);
    var deriv_seq__11112 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11092_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11092_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11092_SHARP_), cljs.core.second.call(null, p1__11092_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11111)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11109.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11093_SHARP_, p2__11094_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11093_SHARP_, p2__11094_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11112))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11120 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto____11122 = cljs.core.truth_(function() {
    var and__3941__auto____11121 = xprefs__11120;
    if(cljs.core.truth_(and__3941__auto____11121)) {
      return xprefs__11120.call(null, y)
    }else {
      return and__3941__auto____11121
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto____11122)) {
    return or__3943__auto____11122
  }else {
    var or__3943__auto____11124 = function() {
      var ps__11123 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11123) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11123), prefer_table))) {
          }else {
          }
          var G__11127 = cljs.core.rest.call(null, ps__11123);
          ps__11123 = G__11127;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____11124)) {
      return or__3943__auto____11124
    }else {
      var or__3943__auto____11126 = function() {
        var ps__11125 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11125) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11125), y, prefer_table))) {
            }else {
            }
            var G__11128 = cljs.core.rest.call(null, ps__11125);
            ps__11125 = G__11128;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____11126)) {
        return or__3943__auto____11126
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto____11130 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto____11130)) {
    return or__3943__auto____11130
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11148 = cljs.core.reduce.call(null, function(be, p__11140) {
    var vec__11141__11142 = p__11140;
    var k__11143 = cljs.core.nth.call(null, vec__11141__11142, 0, null);
    var ___11144 = cljs.core.nth.call(null, vec__11141__11142, 1, null);
    var e__11145 = vec__11141__11142;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11143)) {
      var be2__11147 = cljs.core.truth_(function() {
        var or__3943__auto____11146 = be == null;
        if(or__3943__auto____11146) {
          return or__3943__auto____11146
        }else {
          return cljs.core.dominates.call(null, k__11143, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11145 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11147), k__11143, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11143), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11147)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11147
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11148)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11148));
      return cljs.core.second.call(null, best_entry__11148)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto____11153 = mf;
    if(and__3941__auto____11153) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto____11153
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2306__auto____11154 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11155 = cljs.core._reset[goog.typeOf(x__2306__auto____11154)];
      if(or__3943__auto____11155) {
        return or__3943__auto____11155
      }else {
        var or__3943__auto____11156 = cljs.core._reset["_"];
        if(or__3943__auto____11156) {
          return or__3943__auto____11156
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto____11161 = mf;
    if(and__3941__auto____11161) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto____11161
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2306__auto____11162 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11163 = cljs.core._add_method[goog.typeOf(x__2306__auto____11162)];
      if(or__3943__auto____11163) {
        return or__3943__auto____11163
      }else {
        var or__3943__auto____11164 = cljs.core._add_method["_"];
        if(or__3943__auto____11164) {
          return or__3943__auto____11164
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____11169 = mf;
    if(and__3941__auto____11169) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto____11169
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2306__auto____11170 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11171 = cljs.core._remove_method[goog.typeOf(x__2306__auto____11170)];
      if(or__3943__auto____11171) {
        return or__3943__auto____11171
      }else {
        var or__3943__auto____11172 = cljs.core._remove_method["_"];
        if(or__3943__auto____11172) {
          return or__3943__auto____11172
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto____11177 = mf;
    if(and__3941__auto____11177) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto____11177
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2306__auto____11178 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11179 = cljs.core._prefer_method[goog.typeOf(x__2306__auto____11178)];
      if(or__3943__auto____11179) {
        return or__3943__auto____11179
      }else {
        var or__3943__auto____11180 = cljs.core._prefer_method["_"];
        if(or__3943__auto____11180) {
          return or__3943__auto____11180
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____11185 = mf;
    if(and__3941__auto____11185) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto____11185
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2306__auto____11186 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11187 = cljs.core._get_method[goog.typeOf(x__2306__auto____11186)];
      if(or__3943__auto____11187) {
        return or__3943__auto____11187
      }else {
        var or__3943__auto____11188 = cljs.core._get_method["_"];
        if(or__3943__auto____11188) {
          return or__3943__auto____11188
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto____11193 = mf;
    if(and__3941__auto____11193) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto____11193
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2306__auto____11194 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11195 = cljs.core._methods[goog.typeOf(x__2306__auto____11194)];
      if(or__3943__auto____11195) {
        return or__3943__auto____11195
      }else {
        var or__3943__auto____11196 = cljs.core._methods["_"];
        if(or__3943__auto____11196) {
          return or__3943__auto____11196
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto____11201 = mf;
    if(and__3941__auto____11201) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto____11201
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2306__auto____11202 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11203 = cljs.core._prefers[goog.typeOf(x__2306__auto____11202)];
      if(or__3943__auto____11203) {
        return or__3943__auto____11203
      }else {
        var or__3943__auto____11204 = cljs.core._prefers["_"];
        if(or__3943__auto____11204) {
          return or__3943__auto____11204
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto____11209 = mf;
    if(and__3941__auto____11209) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto____11209
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2306__auto____11210 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____11211 = cljs.core._dispatch[goog.typeOf(x__2306__auto____11210)];
      if(or__3943__auto____11211) {
        return or__3943__auto____11211
      }else {
        var or__3943__auto____11212 = cljs.core._dispatch["_"];
        if(or__3943__auto____11212) {
          return or__3943__auto____11212
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11215 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11216 = cljs.core._get_method.call(null, mf, dispatch_val__11215);
  if(cljs.core.truth_(target_fn__11216)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11215)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11216, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11217 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11218 = this;
  cljs.core.swap_BANG_.call(null, this__11218.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11218.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11218.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11218.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11219 = this;
  cljs.core.swap_BANG_.call(null, this__11219.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11219.method_cache, this__11219.method_table, this__11219.cached_hierarchy, this__11219.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11220 = this;
  cljs.core.swap_BANG_.call(null, this__11220.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11220.method_cache, this__11220.method_table, this__11220.cached_hierarchy, this__11220.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11221 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11221.cached_hierarchy), cljs.core.deref.call(null, this__11221.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11221.method_cache, this__11221.method_table, this__11221.cached_hierarchy, this__11221.hierarchy)
  }
  var temp__4090__auto____11222 = cljs.core.deref.call(null, this__11221.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto____11222)) {
    var target_fn__11223 = temp__4090__auto____11222;
    return target_fn__11223
  }else {
    var temp__4090__auto____11224 = cljs.core.find_and_cache_best_method.call(null, this__11221.name, dispatch_val, this__11221.hierarchy, this__11221.method_table, this__11221.prefer_table, this__11221.method_cache, this__11221.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____11224)) {
      var target_fn__11225 = temp__4090__auto____11224;
      return target_fn__11225
    }else {
      return cljs.core.deref.call(null, this__11221.method_table).call(null, this__11221.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11226 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11226.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11226.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11226.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11226.method_cache, this__11226.method_table, this__11226.cached_hierarchy, this__11226.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11227 = this;
  return cljs.core.deref.call(null, this__11227.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11228 = this;
  return cljs.core.deref.call(null, this__11228.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11229 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11229.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11231__delegate = function(_, args) {
    var self__11230 = this;
    return cljs.core._dispatch.call(null, self__11230, args)
  };
  var G__11231 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11231__delegate.call(this, _, args)
  };
  G__11231.cljs$lang$maxFixedArity = 1;
  G__11231.cljs$lang$applyTo = function(arglist__11232) {
    var _ = cljs.core.first(arglist__11232);
    var args = cljs.core.rest(arglist__11232);
    return G__11231__delegate(_, args)
  };
  G__11231.cljs$lang$arity$variadic = G__11231__delegate;
  return G__11231
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11233 = this;
  return cljs.core._dispatch.call(null, self__11233, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11234 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11236, _) {
  var this__11235 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11235.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11237 = this;
  var and__3941__auto____11238 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3941__auto____11238) {
    return this__11237.uuid === other.uuid
  }else {
    return and__3941__auto____11238
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11239 = this;
  var this__11240 = this;
  return cljs.core.pr_str.call(null, this__11240)
};
cljs.core.UUID;
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12417 = document.createElement("div");
var test_html__12418 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12417.innerHTML = test_html__12418;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12417.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12417.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12417.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11770 = s;
      var limit__11771 = limit;
      var parts__11772 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11771, 1)) {
          return cljs.core.conj.call(null, parts__11772, s__11770)
        }else {
          var temp__4090__auto____11773 = cljs.core.re_find.call(null, re, s__11770);
          if(cljs.core.truth_(temp__4090__auto____11773)) {
            var m__11774 = temp__4090__auto____11773;
            var index__11775 = s__11770.indexOf(m__11774);
            var G__11776 = s__11770.substring(index__11775 + cljs.core.count.call(null, m__11774));
            var G__11777 = limit__11771 - 1;
            var G__11778 = cljs.core.conj.call(null, parts__11772, s__11770.substring(0, index__11775));
            s__11770 = G__11776;
            limit__11771 = G__11777;
            parts__11772 = G__11778;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11772, s__11770)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11782 = s.length;
  while(true) {
    if(index__11782 === 0) {
      return""
    }else {
      var ch__11783 = cljs.core._lookup.call(null, s, index__11782 - 1, null);
      if(function() {
        var or__3943__auto____11784 = cljs.core._EQ_.call(null, ch__11783, "\n");
        if(or__3943__auto____11784) {
          return or__3943__auto____11784
        }else {
          return cljs.core._EQ_.call(null, ch__11783, "\r")
        }
      }()) {
        var G__11785 = index__11782 - 1;
        index__11782 = G__11785;
        continue
      }else {
        return s.substring(0, index__11782)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11789 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3943__auto____11790 = cljs.core.not.call(null, s__11789);
    if(or__3943__auto____11790) {
      return or__3943__auto____11790
    }else {
      var or__3943__auto____11791 = cljs.core._EQ_.call(null, "", s__11789);
      if(or__3943__auto____11791) {
        return or__3943__auto____11791
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11789)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11798 = new goog.string.StringBuffer;
  var length__11799 = s.length;
  var index__11800 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11799, index__11800)) {
      return buffer__11798.toString()
    }else {
      var ch__11801 = s.charAt(index__11800);
      var temp__4090__auto____11802 = cljs.core._lookup.call(null, cmap, ch__11801, null);
      if(cljs.core.truth_(temp__4090__auto____11802)) {
        var replacement__11803 = temp__4090__auto____11802;
        buffer__11798.append([cljs.core.str(replacement__11803)].join(""))
      }else {
        buffer__11798.append(ch__11801)
      }
      var G__11804 = index__11800 + 1;
      index__11800 = G__11804;
      continue
    }
    break
  }
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__12010 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__12011 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__12012 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__12011, "caption":table_section_wrapper__12011, "optgroup":opt_wrapper__12010, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__12012, "thead":table_section_wrapper__12011, "th":cell_wrapper__12012, "option":opt_wrapper__12010, "tbody":table_section_wrapper__12011, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__12011});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___12025 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__12029 = function() {
    var and__3941__auto____12026 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3941__auto____12026) {
      return no_tbody_QMARK___12025
    }else {
      return and__3941__auto____12026
    }
  }() ? function() {
    var and__3941__auto____12027 = div.firstChild;
    if(cljs.core.truth_(and__3941__auto____12027)) {
      return div.firstChild.childNodes
    }else {
      return and__3941__auto____12027
    }
  }() : function() {
    var and__3941__auto____12028 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3941__auto____12028) {
      return no_tbody_QMARK___12025
    }else {
      return and__3941__auto____12028
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__12030__12031 = cljs.core.seq.call(null, tbody__12029);
  if(G__12030__12031) {
    var child__12032 = cljs.core.first.call(null, G__12030__12031);
    var G__12030__12033 = G__12030__12031;
    while(true) {
      if(function() {
        var and__3941__auto____12034 = cljs.core._EQ_.call(null, child__12032.nodeName, "tbody");
        if(and__3941__auto____12034) {
          return cljs.core._EQ_.call(null, child__12032.childNodes.length, 0)
        }else {
          return and__3941__auto____12034
        }
      }()) {
        child__12032.parentNode.removeChild(child__12032)
      }else {
      }
      var temp__4092__auto____12035 = cljs.core.next.call(null, G__12030__12033);
      if(temp__4092__auto____12035) {
        var G__12030__12036 = temp__4092__auto____12035;
        var G__12037 = cljs.core.first.call(null, G__12030__12036);
        var G__12038 = G__12030__12036;
        child__12032 = G__12037;
        G__12030__12033 = G__12038;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__12052 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__12053 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__12052)))].join("").toLowerCase();
  var vec__12051__12054 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__12053, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__12055 = cljs.core.nth.call(null, vec__12051__12054, 0, null);
  var start_wrap__12056 = cljs.core.nth.call(null, vec__12051__12054, 1, null);
  var end_wrap__12057 = cljs.core.nth.call(null, vec__12051__12054, 2, null);
  var div__12061 = function() {
    var wrapper__12059 = function() {
      var div__12058 = document.createElement("div");
      div__12058.innerHTML = [cljs.core.str(start_wrap__12056), cljs.core.str(html__12052), cljs.core.str(end_wrap__12057)].join("");
      return div__12058
    }();
    var level__12060 = depth__12055;
    while(true) {
      if(level__12060 > 0) {
        var G__12063 = wrapper__12059.lastChild;
        var G__12064 = level__12060 - 1;
        wrapper__12059 = G__12063;
        level__12060 = G__12064;
        continue
      }else {
        return wrapper__12059
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__12061, html__12052)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3941__auto____12062 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3941__auto____12062) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__12052)
    }else {
      return and__3941__auto____12062
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__12061, html__12052)
  }else {
  }
  return div__12061.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3941__auto____12069 = content;
    if(and__3941__auto____12069) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3941__auto____12069
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2306__auto____12070 = content == null ? null : content;
    return function() {
      var or__3943__auto____12071 = domina.nodes[goog.typeOf(x__2306__auto____12070)];
      if(or__3943__auto____12071) {
        return or__3943__auto____12071
      }else {
        var or__3943__auto____12072 = domina.nodes["_"];
        if(or__3943__auto____12072) {
          return or__3943__auto____12072
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3941__auto____12077 = nodeseq;
    if(and__3941__auto____12077) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3941__auto____12077
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2306__auto____12078 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3943__auto____12079 = domina.single_node[goog.typeOf(x__2306__auto____12078)];
      if(or__3943__auto____12079) {
        return or__3943__auto____12079
      }else {
        var or__3943__auto____12080 = domina.single_node["_"];
        if(or__3943__auto____12080) {
          return or__3943__auto____12080
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____12082 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3941__auto____12082)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3941__auto____12082
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__12083) {
    var mesg = cljs.core.seq(arglist__12083);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__12084) {
    var mesg = cljs.core.seq(arglist__12084);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t12092) {
    domina.t12092 = function(class_name, by_class, meta12093) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta12093 = meta12093;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t12092.cljs$lang$type = true;
    domina.t12092.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
      return cljs.core.list.call(null, "domina/t12092")
    };
    domina.t12092.prototype.domina$DomContent$ = true;
    domina.t12092.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__12095 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__12095.class_name)))
    };
    domina.t12092.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__12096 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__12096.class_name)))
    };
    domina.t12092.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12094) {
      var this__12097 = this;
      return this__12097.meta12093
    };
    domina.t12092.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12094, meta12093) {
      var this__12098 = this;
      return new domina.t12092(this__12098.class_name, this__12098.by_class, meta12093)
    };
    domina.t12092
  }else {
  }
  return new domina.t12092(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__12099_SHARP_) {
    return p1__12099_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__12100_SHARP_, p2__12101_SHARP_) {
    return goog.dom.insertChildAt(p1__12100_SHARP_, p2__12101_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12103_SHARP_, p2__12102_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__12102_SHARP_, p1__12103_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12105_SHARP_, p2__12104_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__12104_SHARP_, p1__12105_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12107_SHARP_, p2__12106_SHARP_) {
    return goog.dom.replaceNode(p2__12106_SHARP_, p1__12107_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__12109 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__12109))) {
    return null
  }else {
    return s__12109
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__12116__12117 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12116__12117) {
      var n__12118 = cljs.core.first.call(null, G__12116__12117);
      var G__12116__12119 = G__12116__12117;
      while(true) {
        goog.style.setStyle(n__12118, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__4092__auto____12120 = cljs.core.next.call(null, G__12116__12119);
        if(temp__4092__auto____12120) {
          var G__12116__12121 = temp__4092__auto____12120;
          var G__12122 = cljs.core.first.call(null, G__12116__12121);
          var G__12123 = G__12116__12121;
          n__12118 = G__12122;
          G__12116__12119 = G__12123;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__12124) {
    var content = cljs.core.first(arglist__12124);
    var name = cljs.core.first(cljs.core.next(arglist__12124));
    var value = cljs.core.rest(cljs.core.next(arglist__12124));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__12131__12132 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12131__12132) {
      var n__12133 = cljs.core.first.call(null, G__12131__12132);
      var G__12131__12134 = G__12131__12132;
      while(true) {
        n__12133.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__4092__auto____12135 = cljs.core.next.call(null, G__12131__12134);
        if(temp__4092__auto____12135) {
          var G__12131__12136 = temp__4092__auto____12135;
          var G__12137 = cljs.core.first.call(null, G__12131__12136);
          var G__12138 = G__12131__12136;
          n__12133 = G__12137;
          G__12131__12134 = G__12138;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__12139) {
    var content = cljs.core.first(arglist__12139);
    var name = cljs.core.first(cljs.core.next(arglist__12139));
    var value = cljs.core.rest(cljs.core.next(arglist__12139));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__12146__12147 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12146__12147) {
    var n__12148 = cljs.core.first.call(null, G__12146__12147);
    var G__12146__12149 = G__12146__12147;
    while(true) {
      n__12148.removeAttribute(cljs.core.name.call(null, name));
      var temp__4092__auto____12150 = cljs.core.next.call(null, G__12146__12149);
      if(temp__4092__auto____12150) {
        var G__12146__12151 = temp__4092__auto____12150;
        var G__12152 = cljs.core.first.call(null, G__12146__12151);
        var G__12153 = G__12146__12151;
        n__12148 = G__12152;
        G__12146__12149 = G__12153;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__12159__12160 = pair.split(/\s*:\s*/);
    var k__12161 = cljs.core.nth.call(null, vec__12159__12160, 0, null);
    var v__12162 = cljs.core.nth.call(null, vec__12159__12160, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto____12163 = k__12161;
      if(cljs.core.truth_(and__3941__auto____12163)) {
        return v__12162
      }else {
        return and__3941__auto____12163
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__12161.toLowerCase()), v__12162)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__12166 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__12166)) {
    return domina.parse_style_attributes.call(null, style__12166)
  }else {
    if(cljs.core.truth_(style__12166.cssText)) {
      return domina.parse_style_attributes.call(null, style__12166.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__12172 = domina.single_node.call(null, content);
  var attrs__12173 = node__12172.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__12164_SHARP_) {
    var attr__12174 = attrs__12173.item(p1__12164_SHARP_);
    var value__12175 = attr__12174.nodeValue;
    if(function() {
      var and__3941__auto____12176 = cljs.core.not_EQ_.call(null, null, value__12175);
      if(and__3941__auto____12176) {
        return cljs.core.not_EQ_.call(null, "", value__12175)
      }else {
        return and__3941__auto____12176
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__12174.nodeName.toLowerCase())], [attr__12174.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__12173.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12196__12197 = cljs.core.seq.call(null, styles);
  if(G__12196__12197) {
    var G__12199__12201 = cljs.core.first.call(null, G__12196__12197);
    var vec__12200__12202 = G__12199__12201;
    var name__12203 = cljs.core.nth.call(null, vec__12200__12202, 0, null);
    var value__12204 = cljs.core.nth.call(null, vec__12200__12202, 1, null);
    var G__12196__12205 = G__12196__12197;
    var G__12199__12206 = G__12199__12201;
    var G__12196__12207 = G__12196__12205;
    while(true) {
      var vec__12208__12209 = G__12199__12206;
      var name__12210 = cljs.core.nth.call(null, vec__12208__12209, 0, null);
      var value__12211 = cljs.core.nth.call(null, vec__12208__12209, 1, null);
      var G__12196__12212 = G__12196__12207;
      domina.set_style_BANG_.call(null, content, name__12210, value__12211);
      var temp__4092__auto____12213 = cljs.core.next.call(null, G__12196__12212);
      if(temp__4092__auto____12213) {
        var G__12196__12214 = temp__4092__auto____12213;
        var G__12215 = cljs.core.first.call(null, G__12196__12214);
        var G__12216 = G__12196__12214;
        G__12199__12206 = G__12215;
        G__12196__12207 = G__12216;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12236__12237 = cljs.core.seq.call(null, attrs);
  if(G__12236__12237) {
    var G__12239__12241 = cljs.core.first.call(null, G__12236__12237);
    var vec__12240__12242 = G__12239__12241;
    var name__12243 = cljs.core.nth.call(null, vec__12240__12242, 0, null);
    var value__12244 = cljs.core.nth.call(null, vec__12240__12242, 1, null);
    var G__12236__12245 = G__12236__12237;
    var G__12239__12246 = G__12239__12241;
    var G__12236__12247 = G__12236__12245;
    while(true) {
      var vec__12248__12249 = G__12239__12246;
      var name__12250 = cljs.core.nth.call(null, vec__12248__12249, 0, null);
      var value__12251 = cljs.core.nth.call(null, vec__12248__12249, 1, null);
      var G__12236__12252 = G__12236__12247;
      domina.set_attr_BANG_.call(null, content, name__12250, value__12251);
      var temp__4092__auto____12253 = cljs.core.next.call(null, G__12236__12252);
      if(temp__4092__auto____12253) {
        var G__12236__12254 = temp__4092__auto____12253;
        var G__12255 = cljs.core.first.call(null, G__12236__12254);
        var G__12256 = G__12236__12254;
        G__12239__12246 = G__12255;
        G__12236__12247 = G__12256;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12263__12264 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12263__12264) {
    var node__12265 = cljs.core.first.call(null, G__12263__12264);
    var G__12263__12266 = G__12263__12264;
    while(true) {
      goog.dom.classes.add(node__12265, class$);
      var temp__4092__auto____12267 = cljs.core.next.call(null, G__12263__12266);
      if(temp__4092__auto____12267) {
        var G__12263__12268 = temp__4092__auto____12267;
        var G__12269 = cljs.core.first.call(null, G__12263__12268);
        var G__12270 = G__12263__12268;
        node__12265 = G__12269;
        G__12263__12266 = G__12270;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12277__12278 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12277__12278) {
    var node__12279 = cljs.core.first.call(null, G__12277__12278);
    var G__12277__12280 = G__12277__12278;
    while(true) {
      goog.dom.classes.remove(node__12279, class$);
      var temp__4092__auto____12281 = cljs.core.next.call(null, G__12277__12280);
      if(temp__4092__auto____12281) {
        var G__12277__12282 = temp__4092__auto____12281;
        var G__12283 = cljs.core.first.call(null, G__12277__12282);
        var G__12284 = G__12277__12282;
        node__12279 = G__12283;
        G__12277__12280 = G__12284;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12292 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12293__12294 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12293__12294) {
    var node__12295 = cljs.core.first.call(null, G__12293__12294);
    var G__12293__12296 = G__12293__12294;
    while(true) {
      goog.dom.classes.set(node__12295, classes__12292);
      var temp__4092__auto____12297 = cljs.core.next.call(null, G__12293__12296);
      if(temp__4092__auto____12297) {
        var G__12293__12298 = temp__4092__auto____12297;
        var G__12299 = cljs.core.first.call(null, G__12293__12298);
        var G__12300 = G__12293__12298;
        node__12295 = G__12299;
        G__12293__12296 = G__12300;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12307__12308 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12307__12308) {
    var node__12309 = cljs.core.first.call(null, G__12307__12308);
    var G__12307__12310 = G__12307__12308;
    while(true) {
      goog.dom.setTextContent(node__12309, value);
      var temp__4092__auto____12311 = cljs.core.next.call(null, G__12307__12310);
      if(temp__4092__auto____12311) {
        var G__12307__12312 = temp__4092__auto____12311;
        var G__12313 = cljs.core.first.call(null, G__12307__12312);
        var G__12314 = G__12307__12312;
        node__12309 = G__12313;
        G__12307__12310 = G__12314;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12321__12322 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12321__12322) {
    var node__12323 = cljs.core.first.call(null, G__12321__12322);
    var G__12321__12324 = G__12321__12322;
    while(true) {
      goog.dom.forms.setValue(node__12323, value);
      var temp__4092__auto____12325 = cljs.core.next.call(null, G__12321__12324);
      if(temp__4092__auto____12325) {
        var G__12321__12326 = temp__4092__auto____12325;
        var G__12327 = cljs.core.first.call(null, G__12321__12326);
        var G__12328 = G__12321__12326;
        node__12323 = G__12327;
        G__12321__12324 = G__12328;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12345 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12346 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12347 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12348 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12347);
  if(cljs.core.truth_(function() {
    var and__3941__auto____12349 = allows_inner_html_QMARK___12345;
    if(and__3941__auto____12349) {
      var and__3941__auto____12351 = function() {
        var or__3943__auto____12350 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3943__auto____12350)) {
          return or__3943__auto____12350
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12346)
        }
      }();
      if(cljs.core.truth_(and__3941__auto____12351)) {
        return!special_tag_QMARK___12348
      }else {
        return and__3941__auto____12351
      }
    }else {
      return and__3941__auto____12349
    }
  }())) {
    var value__12352 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12355__12356 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12355__12356) {
        var node__12357 = cljs.core.first.call(null, G__12355__12356);
        var G__12355__12358 = G__12355__12356;
        while(true) {
          goog.events.removeAll(node__12357);
          node__12357.innerHTML = value__12352;
          var temp__4092__auto____12359 = cljs.core.next.call(null, G__12355__12358);
          if(temp__4092__auto____12359) {
            var G__12355__12360 = temp__4092__auto____12359;
            var G__12361 = cljs.core.first.call(null, G__12355__12360);
            var G__12362 = G__12355__12360;
            node__12357 = G__12361;
            G__12355__12358 = G__12362;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12353) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12353)) {
        var e__12354 = e12353;
        domina.replace_children_BANG_.call(null, content, value__12352)
      }else {
        if("\ufdd0'else") {
          throw e12353;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12368 = domina.single_node.call(null, node).__domina_data;
    var value__12369 = cljs.core.truth_(m__12368) ? cljs.core._lookup.call(null, m__12368, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3941__auto____12370 = bubble;
      if(cljs.core.truth_(and__3941__auto____12370)) {
        return value__12369 == null
      }else {
        return and__3941__auto____12370
      }
    }())) {
      var temp__4092__auto____12371 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__4092__auto____12371)) {
        var parent__12372 = temp__4092__auto____12371;
        return get_data.call(null, parent__12372, key, true)
      }else {
        return null
      }
    }else {
      return value__12369
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12378 = function() {
    var or__3943__auto____12377 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3943__auto____12377)) {
      return or__3943__auto____12377
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12378, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12390 = domina.nodes.call(null, parent_content);
  var children__12391 = domina.nodes.call(null, child_content);
  var first_child__12399 = function() {
    var frag__12392 = document.createDocumentFragment();
    var G__12393__12394 = cljs.core.seq.call(null, children__12391);
    if(G__12393__12394) {
      var child__12395 = cljs.core.first.call(null, G__12393__12394);
      var G__12393__12396 = G__12393__12394;
      while(true) {
        frag__12392.appendChild(child__12395);
        var temp__4092__auto____12397 = cljs.core.next.call(null, G__12393__12396);
        if(temp__4092__auto____12397) {
          var G__12393__12398 = temp__4092__auto____12397;
          var G__12401 = cljs.core.first.call(null, G__12393__12398);
          var G__12402 = G__12393__12398;
          child__12395 = G__12401;
          G__12393__12396 = G__12402;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12392
  }();
  var other_children__12400 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12390) - 1, function() {
    return first_child__12399.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12390)) {
    f.call(null, cljs.core.first.call(null, parents__12390), first_child__12399);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12373_SHARP_, p2__12374_SHARP_) {
      return f.call(null, p1__12373_SHARP_, p2__12374_SHARP_)
    }, cljs.core.rest.call(null, parents__12390), other_children__12400))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3941__auto____12404 = obj;
  if(cljs.core.truth_(and__3941__auto____12404)) {
    return obj.length
  }else {
    return and__3941__auto____12404
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12408__12409 = list_thing;
      if(G__12408__12409) {
        if(function() {
          var or__3943__auto____12410 = G__12408__12409.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____12410) {
            return or__3943__auto____12410
          }else {
            return G__12408__12409.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12408__12409.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12408__12409)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12408__12409)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12411__12412 = content;
      if(G__12411__12412) {
        if(function() {
          var or__3943__auto____12413 = G__12411__12412.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____12413) {
            return or__3943__auto____12413
          }else {
            return G__12411__12412.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12411__12412.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12411__12412)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12411__12412)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12414__12415 = content;
      if(G__12414__12415) {
        if(function() {
          var or__3943__auto____12416 = G__12414__12415.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____12416) {
            return or__3943__auto____12416
          }else {
            return G__12414__12415.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12414__12415.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12414__12415)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12414__12415)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t12428) {
      domina.css.t12428 = function(expr, base, sel, meta12429) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta12429 = meta12429;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t12428.cljs$lang$type = true;
      domina.css.t12428.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
        return cljs.core.list.call(null, "domina.css/t12428")
      };
      domina.css.t12428.prototype.domina$DomContent$ = true;
      domina.css.t12428.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__12431 = this;
        return cljs.core.mapcat.call(null, function(p1__12419_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12431.expr, p1__12419_SHARP_))
        }, domina.nodes.call(null, this__12431.base))
      };
      domina.css.t12428.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__12432 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__12420_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12432.expr, p1__12420_SHARP_))
        }, domina.nodes.call(null, this__12432.base))))
      };
      domina.css.t12428.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12430) {
        var this__12433 = this;
        return this__12433.meta12429
      };
      domina.css.t12428.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12430, meta12429) {
        var this__12434 = this;
        return new domina.css.t12428(this__12434.expr, this__12434.base, this__12434.sel, meta12429)
      };
      domina.css.t12428
    }else {
    }
    return new domina.css.t12428(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("site");
goog.require("cljs.core");
goog.require("domina.css");
goog.require("domina");
goog.require("domina.css");
goog.require("domina");
site.rgb_str = function rgb_str(p__7248) {
  var vec__7254__7255 = p__7248;
  var r__7256 = cljs.core.nth.call(null, vec__7254__7255, 0, null);
  var g__7257 = cljs.core.nth.call(null, vec__7254__7255, 1, null);
  var b__7258 = cljs.core.nth.call(null, vec__7254__7255, 2, null);
  return[cljs.core.str("rgb("), cljs.core.str(r__7256), cljs.core.str(","), cljs.core.str(g__7257), cljs.core.str(","), cljs.core.str(b__7258), cljs.core.str(")")].join("")
};
site.set_color = function set_color(style, foreground, background) {
  style.color = site.rgb_str.call(null, foreground);
  return style.backgroundColor = site.rgb_str.call(null, background)
};
site.img_url = function img_url(div) {
  return domina.attr.call(null, domina.css.sel.call(null, div, "img"), "src")
};
site.set_colors = function set_colors(div) {
  return(new AlbumColors(site.img_url.call(null, div))).getColors(function(p__7265) {
    var vec__7266__7267 = p__7265;
    var background__7268 = cljs.core.nth.call(null, vec__7266__7267, 0, null);
    var ___7269 = cljs.core.nth.call(null, vec__7266__7267, 1, null);
    var foreground__7270 = cljs.core.nth.call(null, vec__7266__7267, 2, null);
    return site.set_color.call(null, div.style, foreground__7270, background__7268)
  })
};
site.init = function init() {
  var G__7277__7278 = cljs.core.seq.call(null, domina.nodes.call(null, domina.by_class.call(null, "thumbnail")));
  if(G__7277__7278) {
    var div__7279 = cljs.core.first.call(null, G__7277__7278);
    var G__7277__7280 = G__7277__7278;
    while(true) {
      site.set_colors.call(null, div__7279);
      var temp__4092__auto____7281 = cljs.core.next.call(null, G__7277__7280);
      if(temp__4092__auto____7281) {
        var G__7277__7282 = temp__4092__auto____7281;
        var G__7283 = cljs.core.first.call(null, G__7277__7282);
        var G__7284 = G__7277__7282;
        div__7279 = G__7283;
        G__7277__7280 = G__7284;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("site.init", site.init);
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_)
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.elements_ = []
};
goog.structs.Queue.prototype.head_ = 0;
goog.structs.Queue.prototype.tail_ = 0;
goog.structs.Queue.prototype.enqueue = function(element) {
  this.elements_[this.tail_++] = element
};
goog.structs.Queue.prototype.dequeue = function() {
  if(this.head_ == this.tail_) {
    return undefined
  }
  var result = this.elements_[this.head_];
  delete this.elements_[this.head_];
  this.head_++;
  return result
};
goog.structs.Queue.prototype.peek = function() {
  if(this.head_ == this.tail_) {
    return undefined
  }
  return this.elements_[this.head_]
};
goog.structs.Queue.prototype.getCount = function() {
  return this.tail_ - this.head_
};
goog.structs.Queue.prototype.isEmpty = function() {
  return this.tail_ - this.head_ == 0
};
goog.structs.Queue.prototype.clear = function() {
  this.elements_.length = 0;
  this.head_ = 0;
  this.tail_ = 0
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.elements_, obj)
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.indexOf(this.elements_, obj);
  if(index < 0) {
    return false
  }
  if(index == this.head_) {
    this.dequeue()
  }else {
    goog.array.removeAt(this.elements_, index);
    this.tail_--
  }
  return true
};
goog.structs.Queue.prototype.getValues = function() {
  return this.elements_.slice(this.head_, this.tail_)
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if(this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0}
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if(min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax()
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if(max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax()
};
goog.structs.Pool.prototype.getObject = function() {
  var obj = this.removeFreeObject_();
  if(obj) {
    this.inUseSet_.add(obj)
  }
  return obj
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if(this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true
  }
  return false
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while(this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if(!this.objectCanBeReused(obj)) {
      this.adjustForMinMax()
    }else {
      break
    }
  }
  if(!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject()
  }
  return obj
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if(this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while(this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject())
  }
  while(this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue())
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return{}
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if(typeof obj.dispose == "function") {
    obj.dispose()
  }else {
    for(var i in obj) {
      obj[i] = null
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if(typeof obj.canBeReused == "function") {
    return obj.canBeReused()
  }
  return true
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj)
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount()
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount()
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount()
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty()
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if(this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while(!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue())
  }
  delete this.freeQueue_
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if(opt_heap) {
    this.insertAll(opt_heap)
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1)
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if(heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if(heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for(var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]))
      }
      return
    }
  }else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap)
  }
  for(var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i])
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if(count <= 0) {
    return undefined
  }else {
    if(count == 1) {
      goog.array.clear(nodes)
    }else {
      nodes[0] = nodes.pop();
      this.moveDown_(0)
    }
  }
  return rootNode.getValue()
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if(nodes.length == 0) {
    return undefined
  }
  return nodes[0].getValue()
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey()
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while(index < Math.floor(count / 2)) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if(nodes[smallerChildIndex].getKey() > node.getKey()) {
      break
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex
  }
  nodes[index] = node
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while(index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if(nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex
    }else {
      break
    }
  }
  nodes[index] = node
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return Math.floor((index - 1) / 2)
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for(var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue())
  }
  return rv
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for(var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey())
  }
  return rv
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val
  })
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key
  })
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this)
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_)
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_)
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this)
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value)
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove()
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount)
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if(!opt_callback) {
    return goog.structs.PriorityPool.superClass_.getObject.call(this)
  }
  var priority = opt_priority || goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while(requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if(!obj) {
      return
    }else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj])
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_()
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_()
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  this.requestQueue_.clear();
  this.requestQueue_ = null
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
  this.headers_ = opt_headers
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if(headers) {
    goog.structs.forEach(headers, function(value, key) {
      xhrIo.headers.set(key, value)
    })
  }
  return xhrIo
};
goog.net.XhrIoPool.prototype.disposeObject = function(obj) {
  obj.dispose()
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  return!obj.isDisposed() && !obj.isActive()
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.require("goog.object");
goog.require("goog.structs.SimplePool");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.KEY_POOL_INITIAL_COUNT = 0;
goog.events.EventHandler.KEY_POOL_MAX_COUNT = 100;
goog.events.EventHandler.keyPool_ = new goog.structs.SimplePool(goog.events.EventHandler.KEY_POOL_INITIAL_COUNT, goog.events.EventHandler.KEY_POOL_MAX_COUNT);
goog.events.EventHandler.keys_ = null;
goog.events.EventHandler.key_ = null;
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.recordListenerKey_ = function(key) {
  if(this.keys_) {
    this.keys_[key] = true
  }else {
    if(this.key_) {
      this.keys_ = goog.events.EventHandler.keyPool_.getObject();
      this.keys_[this.key_] = true;
      this.key_ = null;
      this.keys_[key] = true
    }else {
      this.key_ = key
    }
  }
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(this.key_ || this.keys_) {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
      }
    }else {
      var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
      if(listener) {
        var key = listener.key;
        goog.events.unlistenByKey(key);
        if(this.keys_) {
          goog.object.remove(this.keys_, key)
        }else {
          if(this.key_ == key) {
            this.key_ = null
          }
        }
      }
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  if(this.keys_) {
    for(var key in this.keys_) {
      goog.events.unlistenByKey(key);
      delete this.keys_[key]
    }
    goog.events.EventHandler.keyPool_.releaseObject(this.keys_);
    this.keys_ = null
  }else {
    if(this.key_) {
      goog.events.unlistenByKey(this.key_)
    }
  }
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.net.XhrManager");
goog.provide("goog.net.XhrManager.Event");
goog.provide("goog.net.XhrManager.Request");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIoPool");
goog.require("goog.structs.Map");
goog.net.XhrManager = function(opt_maxRetries, opt_headers, opt_minCount, opt_maxCount, opt_timeoutInterval) {
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.timeoutInterval_ = goog.isDef(opt_timeoutInterval) ? Math.max(0, opt_timeoutInterval) : 0;
  this.xhrPool_ = new goog.net.XhrIoPool(opt_headers, opt_minCount, opt_maxCount);
  this.requests_ = new goog.structs.Map;
  this.eventHandler_ = new goog.events.EventHandler(this)
};
goog.inherits(goog.net.XhrManager, goog.events.EventTarget);
goog.net.XhrManager.ERROR_ID_IN_USE_ = "[goog.net.XhrManager] ID in use";
goog.net.XhrManager.XHR_EVENT_TYPES_ = [goog.net.EventType.READY, goog.net.EventType.COMPLETE, goog.net.EventType.SUCCESS, goog.net.EventType.ERROR, goog.net.EventType.ABORT, goog.net.EventType.TIMEOUT];
goog.net.XhrManager.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrManager.prototype.getOutstandingCount = function() {
  return this.requests_.getCount()
};
goog.net.XhrManager.prototype.send = function(id, url, opt_method, opt_content, opt_headers, opt_priority, opt_callback, opt_maxRetries) {
  var requests = this.requests_;
  if(requests.get(id)) {
    throw Error(goog.net.XhrManager.ERROR_ID_IN_USE_);
  }
  var request = new goog.net.XhrManager.Request(url, goog.bind(this.handleEvent_, this, id), opt_method, opt_content, opt_headers, opt_callback, goog.isDef(opt_maxRetries) ? opt_maxRetries : this.maxRetries_);
  this.requests_.set(id, request);
  var callback = goog.bind(this.handleAvailableXhr_, this, id);
  this.xhrPool_.getObject(callback, opt_priority);
  return request
};
goog.net.XhrManager.prototype.abort = function(id, opt_force) {
  var request = this.requests_.get(id);
  if(request) {
    var xhrIo = request.xhrIo;
    request.setAborted(true);
    if(opt_force) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      goog.events.listenOnce(xhrIo, goog.net.EventType.READY, function() {
        this.xhrPool_.releaseObject(xhrIo)
      }, false, this);
      this.requests_.remove(id)
    }
    if(xhrIo) {
      xhrIo.abort()
    }
  }
};
goog.net.XhrManager.prototype.handleAvailableXhr_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if(request && !request.xhrIo) {
    this.addXhrListener_(xhrIo, request.getXhrEventCallback());
    xhrIo.setTimeoutInterval(this.timeoutInterval_);
    request.xhrIo = request.xhrLite = xhrIo;
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.READY, this, id, xhrIo));
    this.retry_(id, xhrIo);
    if(request.getAborted()) {
      xhrIo.abort()
    }
  }else {
    this.xhrPool_.releaseObject(xhrIo)
  }
};
goog.net.XhrManager.prototype.handleEvent_ = function(id, e) {
  var xhrIo = e.target;
  switch(e.type) {
    case goog.net.EventType.READY:
      this.retry_(id, xhrIo);
      break;
    case goog.net.EventType.COMPLETE:
      return this.handleComplete_(id, xhrIo, e);
    case goog.net.EventType.SUCCESS:
      this.handleSuccess_(id, xhrIo);
      break;
    case goog.net.EventType.TIMEOUT:
    ;
    case goog.net.EventType.ERROR:
      this.handleError_(id, xhrIo);
      break;
    case goog.net.EventType.ABORT:
      this.handleAbort_(id, xhrIo);
      break
  }
  return null
};
goog.net.XhrManager.prototype.retry_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if(request && !request.getCompleted() && !request.hasReachedMaxRetries()) {
    request.increaseAttemptCount();
    xhrIo.send(request.getUrl(), request.getMethod(), request.getContent(), request.getHeaders())
  }else {
    if(request) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      this.requests_.remove(id)
    }
    this.xhrPool_.releaseObject(xhrIo)
  }
};
goog.net.XhrManager.prototype.handleComplete_ = function(id, xhrIo, e) {
  var request = this.requests_.get(id);
  if(xhrIo.getLastErrorCode() == goog.net.ErrorCode.ABORT || xhrIo.isSuccess() || request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.COMPLETE, this, id, xhrIo));
    if(request) {
      request.setCompleted(true);
      if(request.getCompleteCallback()) {
        return request.getCompleteCallback().call(xhrIo, e)
      }
    }
  }
  return null
};
goog.net.XhrManager.prototype.handleAbort_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ABORT, this, id, xhrIo))
};
goog.net.XhrManager.prototype.handleSuccess_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.SUCCESS, this, id, xhrIo))
};
goog.net.XhrManager.prototype.handleError_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if(request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ERROR, this, id, xhrIo))
  }
};
goog.net.XhrManager.prototype.removeXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.unlisten(xhrIo, types, func)
};
goog.net.XhrManager.prototype.addXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.listen(xhrIo, types, func)
};
goog.net.XhrManager.prototype.disposeInternal = function() {
  goog.net.XhrManager.superClass_.disposeInternal.call(this);
  this.xhrPool_.dispose();
  this.xhrPool_ = null;
  this.eventHandler_.dispose();
  this.eventHandler_ = null;
  var requests = this.requests_;
  goog.structs.forEach(requests, function(value, key) {
    value.dispose()
  });
  requests.clear();
  this.requests_ = null
};
goog.net.XhrManager.Event = function(type, target, id, xhrIo) {
  goog.events.Event.call(this, type, target);
  this.id = id;
  this.xhrIo = xhrIo;
  this.xhrLite = xhrIo
};
goog.inherits(goog.net.XhrManager.Event, goog.events.Event);
goog.net.XhrManager.Event.prototype.disposeInternal = function() {
  goog.net.XhrManager.Event.superClass_.disposeInternal.call(this);
  delete this.id;
  this.xhrIo = null;
  this.xhrLite = null
};
goog.net.XhrManager.Request = function(url, xhrEventCallback, opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries) {
  goog.Disposable.call(this);
  this.url_ = url;
  this.method_ = opt_method || "GET";
  this.content_ = opt_content;
  this.headers_ = opt_headers || null;
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.attemptCount_ = 0;
  this.completed_ = false;
  this.aborted_ = false;
  this.xhrEventCallback_ = xhrEventCallback;
  this.completeCallback_ = opt_callback;
  this.xhrIo = null
};
goog.inherits(goog.net.XhrManager.Request, goog.Disposable);
goog.net.XhrManager.Request.prototype.getUrl = function() {
  return this.url_
};
goog.net.XhrManager.Request.prototype.getMethod = function() {
  return this.method_
};
goog.net.XhrManager.Request.prototype.getContent = function() {
  return this.content_
};
goog.net.XhrManager.Request.prototype.getHeaders = function() {
  return this.headers_
};
goog.net.XhrManager.Request.prototype.getMaxRetries = function() {
  return this.maxRetries_
};
goog.net.XhrManager.Request.prototype.getAttemptCount = function() {
  return this.attemptCount_
};
goog.net.XhrManager.Request.prototype.increaseAttemptCount = function() {
  this.attemptCount_++
};
goog.net.XhrManager.Request.prototype.hasReachedMaxRetries = function() {
  return this.attemptCount_ > this.maxRetries_
};
goog.net.XhrManager.Request.prototype.setCompleted = function(complete) {
  this.completed_ = complete
};
goog.net.XhrManager.Request.prototype.getCompleted = function() {
  return this.completed_
};
goog.net.XhrManager.Request.prototype.setAborted = function(aborted) {
  this.aborted_ = aborted
};
goog.net.XhrManager.Request.prototype.getAborted = function() {
  return this.aborted_
};
goog.net.XhrManager.Request.prototype.getXhrEventCallback = function() {
  return this.xhrEventCallback_
};
goog.net.XhrManager.Request.prototype.getCompleteCallback = function() {
  return this.completeCallback_
};
goog.net.XhrManager.Request.prototype.disposeInternal = function() {
  goog.net.XhrManager.Request.superClass_.disposeInternal.call(this);
  delete this.xhrEventCallback_;
  delete this.completeCallback_
};
goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3941__auto____11809 = evt;
    if(and__3941__auto____11809) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3941__auto____11809
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    var x__2306__auto____11810 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____11811 = domina.events.prevent_default[goog.typeOf(x__2306__auto____11810)];
      if(or__3943__auto____11811) {
        return or__3943__auto____11811
      }else {
        var or__3943__auto____11812 = domina.events.prevent_default["_"];
        if(or__3943__auto____11812) {
          return or__3943__auto____11812
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3941__auto____11817 = evt;
    if(and__3941__auto____11817) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3941__auto____11817
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    var x__2306__auto____11818 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____11819 = domina.events.stop_propagation[goog.typeOf(x__2306__auto____11818)];
      if(or__3943__auto____11819) {
        return or__3943__auto____11819
      }else {
        var or__3943__auto____11820 = domina.events.stop_propagation["_"];
        if(or__3943__auto____11820) {
          return or__3943__auto____11820
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3941__auto____11825 = evt;
    if(and__3941__auto____11825) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3941__auto____11825
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    var x__2306__auto____11826 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____11827 = domina.events.target[goog.typeOf(x__2306__auto____11826)];
      if(or__3943__auto____11827) {
        return or__3943__auto____11827
      }else {
        var or__3943__auto____11828 = domina.events.target["_"];
        if(or__3943__auto____11828) {
          return or__3943__auto____11828
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3941__auto____11833 = evt;
    if(and__3941__auto____11833) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3941__auto____11833
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    var x__2306__auto____11834 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____11835 = domina.events.current_target[goog.typeOf(x__2306__auto____11834)];
      if(or__3943__auto____11835) {
        return or__3943__auto____11835
      }else {
        var or__3943__auto____11836 = domina.events.current_target["_"];
        if(or__3943__auto____11836) {
          return or__3943__auto____11836
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3941__auto____11841 = evt;
    if(and__3941__auto____11841) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3941__auto____11841
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    var x__2306__auto____11842 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____11843 = domina.events.event_type[goog.typeOf(x__2306__auto____11842)];
      if(or__3943__auto____11843) {
        return or__3943__auto____11843
      }else {
        var or__3943__auto____11844 = domina.events.event_type["_"];
        if(or__3943__auto____11844) {
          return or__3943__auto____11844
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3941__auto____11849 = evt;
    if(and__3941__auto____11849) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3941__auto____11849
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    var x__2306__auto____11850 = evt == null ? null : evt;
    return function() {
      var or__3943__auto____11851 = domina.events.raw_event[goog.typeOf(x__2306__auto____11850)];
      if(or__3943__auto____11851) {
        return or__3943__auto____11851
      }else {
        var or__3943__auto____11852 = domina.events.raw_event["_"];
        if(or__3943__auto____11852) {
          return or__3943__auto____11852
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t11869) {
        domina.events.t11869 = function(evt, f, create_listener_function, meta11870) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta11870 = meta11870;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t11869.cljs$lang$type = true;
        domina.events.t11869.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
          return cljs.core.list.call(null, "domina.events/t11869")
        };
        domina.events.t11869.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__11872 = this;
          var temp__4090__auto____11873 = this__11872.evt[k];
          if(cljs.core.truth_(temp__4090__auto____11873)) {
            var val__11874 = temp__4090__auto____11873;
            return val__11874
          }else {
            return this__11872.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t11869.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__11875 = this;
          var or__3943__auto____11876 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3943__auto____11876)) {
            return or__3943__auto____11876
          }else {
            return not_found
          }
        };
        domina.events.t11869.prototype.domina$events$Event$ = true;
        domina.events.t11869.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__11877 = this;
          return this__11877.evt.preventDefault()
        };
        domina.events.t11869.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__11878 = this;
          return this__11878.evt.stopPropagation()
        };
        domina.events.t11869.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__11879 = this;
          return this__11879.evt.target
        };
        domina.events.t11869.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__11880 = this;
          return this__11880.evt.currentTarget
        };
        domina.events.t11869.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__11881 = this;
          return this__11881.evt.type
        };
        domina.events.t11869.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__11882 = this;
          return this__11882.evt
        };
        domina.events.t11869.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11871) {
          var this__11883 = this;
          return this__11883.meta11870
        };
        domina.events.t11869.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11871, meta11870) {
          var this__11884 = this;
          return new domina.events.t11869(this__11884.evt, this__11884.f, this__11884.create_listener_function, meta11870)
        };
        domina.events.t11869
      }else {
      }
      return new domina.events.t11869(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__11898 = domina.events.create_listener_function.call(null, listener);
  var t__11899 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2405__auto____11910 = function iter__11900(s__11901) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11901__11906 = s__11901;
        while(true) {
          var temp__4092__auto____11907 = cljs.core.seq.call(null, s__11901__11906);
          if(temp__4092__auto____11907) {
            var xs__4579__auto____11908 = temp__4092__auto____11907;
            var node__11909 = cljs.core.first.call(null, xs__4579__auto____11908);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__11909, t__11899, f__11898, capture) : goog.events.listen(node__11909, t__11899, f__11898, capture), iter__11900.call(null, cljs.core.rest.call(null, s__11901__11906)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2405__auto____11910.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__11918__11919 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11918__11919) {
      var node__11920 = cljs.core.first.call(null, G__11918__11919);
      var G__11918__11921 = G__11918__11919;
      while(true) {
        goog.events.removeAll(node__11920);
        var temp__4092__auto____11922 = cljs.core.next.call(null, G__11918__11921);
        if(temp__4092__auto____11922) {
          var G__11918__11923 = temp__4092__auto____11922;
          var G__11925 = cljs.core.first.call(null, G__11918__11923);
          var G__11926 = G__11918__11923;
          node__11920 = G__11925;
          G__11918__11921 = G__11926;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__11924 = domina.events.find_builtin_type.call(null, type);
    return goog.events.removeAll(domina.events.node, type__11924)
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__4090__auto____11929 = n.parentNode;
      if(cljs.core.truth_(temp__4090__auto____11929)) {
        var parent__11930 = temp__4090__auto____11929;
        var G__11931 = parent__11930;
        var G__11932 = cljs.core.cons.call(null, parent__11930, so_far);
        n = G__11931;
        so_far = G__11932;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__11946 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__11947__11948 = cljs.core.seq.call(null, ancestors__11946);
  if(G__11947__11948) {
    var n__11949 = cljs.core.first.call(null, G__11947__11948);
    var G__11947__11950 = G__11947__11948;
    while(true) {
      if(cljs.core.truth_(n__11949.propagationStopped)) {
      }else {
        evt.currentTarget = n__11949;
        goog.events.fireListeners(n__11949, evt.type, true, evt)
      }
      var temp__4092__auto____11951 = cljs.core.next.call(null, G__11947__11950);
      if(temp__4092__auto____11951) {
        var G__11947__11952 = temp__4092__auto____11951;
        var G__11959 = cljs.core.first.call(null, G__11947__11952);
        var G__11960 = G__11947__11952;
        n__11949 = G__11959;
        G__11947__11950 = G__11960;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11953__11954 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__11946));
  if(G__11953__11954) {
    var n__11955 = cljs.core.first.call(null, G__11953__11954);
    var G__11953__11956 = G__11953__11954;
    while(true) {
      if(cljs.core.truth_(n__11955.propagationStopped)) {
      }else {
        evt.currentTarget = n__11955;
        goog.events.fireListeners(n__11955, evt.type, false, evt)
      }
      var temp__4092__auto____11957 = cljs.core.next.call(null, G__11953__11956);
      if(temp__4092__auto____11957) {
        var G__11953__11958 = temp__4092__auto____11957;
        var G__11961 = cljs.core.first.call(null, G__11953__11958);
        var G__11962 = G__11953__11958;
        n__11955 = G__11961;
        G__11953__11956 = G__11962;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3941__auto____11964 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3941__auto____11964)) {
    return o.dispatchEvent
  }else {
    return and__3941__auto____11964
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__11985 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__11986__11987 = cljs.core.seq.call(null, evt_map);
    if(G__11986__11987) {
      var G__11989__11991 = cljs.core.first.call(null, G__11986__11987);
      var vec__11990__11992 = G__11989__11991;
      var k__11993 = cljs.core.nth.call(null, vec__11990__11992, 0, null);
      var v__11994 = cljs.core.nth.call(null, vec__11990__11992, 1, null);
      var G__11986__11995 = G__11986__11987;
      var G__11989__11996 = G__11989__11991;
      var G__11986__11997 = G__11986__11995;
      while(true) {
        var vec__11998__11999 = G__11989__11996;
        var k__12000 = cljs.core.nth.call(null, vec__11998__11999, 0, null);
        var v__12001 = cljs.core.nth.call(null, vec__11998__11999, 1, null);
        var G__11986__12002 = G__11986__11997;
        evt__11985[k__12000] = v__12001;
        var temp__4092__auto____12003 = cljs.core.next.call(null, G__11986__12002);
        if(temp__4092__auto____12003) {
          var G__11986__12004 = temp__4092__auto____12003;
          var G__12005 = cljs.core.first.call(null, G__11986__12004);
          var G__12006 = G__11986__12004;
          G__11989__11996 = G__12005;
          G__11986__11997 = G__12006;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__11985)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__11985)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__12009 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__12007_SHARP_) {
    return goog.events.getListeners(p1__12007_SHARP_, type__12009, false)
  }, domina.nodes.call(null, content))
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto____11495 = reader;
    if(and__3941__auto____11495) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto____11495
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2306__auto____11496 = reader == null ? null : reader;
    return function() {
      var or__3943__auto____11497 = cljs.reader.read_char[goog.typeOf(x__2306__auto____11496)];
      if(or__3943__auto____11497) {
        return or__3943__auto____11497
      }else {
        var or__3943__auto____11498 = cljs.reader.read_char["_"];
        if(or__3943__auto____11498) {
          return or__3943__auto____11498
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto____11503 = reader;
    if(and__3941__auto____11503) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto____11503
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2306__auto____11504 = reader == null ? null : reader;
    return function() {
      var or__3943__auto____11505 = cljs.reader.unread[goog.typeOf(x__2306__auto____11504)];
      if(or__3943__auto____11505) {
        return or__3943__auto____11505
      }else {
        var or__3943__auto____11506 = cljs.reader.unread["_"];
        if(or__3943__auto____11506) {
          return or__3943__auto____11506
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2252__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__11507 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__11507.buffer_atom))) {
    var idx__11508 = cljs.core.deref.call(null, this__11507.index_atom);
    cljs.core.swap_BANG_.call(null, this__11507.index_atom, cljs.core.inc);
    return this__11507.s[idx__11508]
  }else {
    var buf__11509 = cljs.core.deref.call(null, this__11507.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__11507.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__11509)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__11510 = this;
  return cljs.core.swap_BANG_.call(null, this__11510.buffer_atom, function(p1__11490_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__11490_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto____11512 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto____11512)) {
    return or__3943__auto____11512
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto____11517 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto____11517) {
    return or__3943__auto____11517
  }else {
    var and__3941__auto____11519 = function() {
      var or__3943__auto____11518 = "+" === initch;
      if(or__3943__auto____11518) {
        return or__3943__auto____11518
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto____11519)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__11520 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__11520);
        return next_ch__11520
      }())
    }else {
      return and__3941__auto____11519
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__11521) {
    var rdr = cljs.core.first(arglist__11521);
    var msg = cljs.core.rest(arglist__11521);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto____11525 = !(ch === "#");
  if(and__3941__auto____11525) {
    var and__3941__auto____11526 = !(ch === "'");
    if(and__3941__auto____11526) {
      var and__3941__auto____11527 = !(ch === ":");
      if(and__3941__auto____11527) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____11527
      }
    }else {
      return and__3941__auto____11526
    }
  }else {
    return and__3941__auto____11525
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__11532 = new goog.string.StringBuffer(initch);
  var ch__11533 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto____11534 = ch__11533 == null;
      if(or__3943__auto____11534) {
        return or__3943__auto____11534
      }else {
        var or__3943__auto____11535 = cljs.reader.whitespace_QMARK_.call(null, ch__11533);
        if(or__3943__auto____11535) {
          return or__3943__auto____11535
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__11533)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__11533);
      return sb__11532.toString()
    }else {
      var G__11536 = function() {
        sb__11532.append(ch__11533);
        return sb__11532
      }();
      var G__11537 = cljs.reader.read_char.call(null, rdr);
      sb__11532 = G__11536;
      ch__11533 = G__11537;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__11541 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto____11542 = ch__11541 === "n";
      if(or__3943__auto____11542) {
        return or__3943__auto____11542
      }else {
        var or__3943__auto____11543 = ch__11541 === "r";
        if(or__3943__auto____11543) {
          return or__3943__auto____11543
        }else {
          return ch__11541 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__11545 = re.exec(s);
  if(matches__11545 == null) {
    return null
  }else {
    if(matches__11545.length === 1) {
      return matches__11545[0]
    }else {
      return matches__11545
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__11553 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__11554 = groups__11553[2];
  if(!function() {
    var or__3943__auto____11555 = group3__11554 == null;
    if(or__3943__auto____11555) {
      return or__3943__auto____11555
    }else {
      return group3__11554.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__11556 = "-" === groups__11553[1] ? -1 : 1;
    var a__11557 = cljs.core.truth_(groups__11553[3]) ? [groups__11553[3], 10] : cljs.core.truth_(groups__11553[4]) ? [groups__11553[4], 16] : cljs.core.truth_(groups__11553[5]) ? [groups__11553[5], 8] : cljs.core.truth_(groups__11553[7]) ? [groups__11553[7], parseInt(groups__11553[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__11558 = a__11557[0];
    var radix__11559 = a__11557[1];
    if(n__11558 == null) {
      return null
    }else {
      return negate__11556 * parseInt(n__11558, radix__11559)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__11563 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__11564 = groups__11563[1];
  var denominator__11565 = groups__11563[2];
  return parseInt(numinator__11564) / parseInt(denominator__11565)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__11568 = re.exec(s);
  if(function() {
    var and__3941__auto____11569 = !(matches__11568 == null);
    if(and__3941__auto____11569) {
      return matches__11568[0] === s
    }else {
      return and__3941__auto____11569
    }
  }()) {
    if(matches__11568.length === 1) {
      return matches__11568[0]
    }else {
      return matches__11568
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__11571 = parseInt(code_str, 16);
  return String.fromCharCode(code__11571)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__11574 = cljs.reader.read_char.call(null, reader);
  var mapresult__11575 = cljs.reader.escape_char_map.call(null, ch__11574);
  if(cljs.core.truth_(mapresult__11575)) {
    return mapresult__11575
  }else {
    if(ch__11574 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__11574, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__11574 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__11574, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__11574)) {
          return String.fromCharCode(ch__11574)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__11574)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__11577 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__11577))) {
      var G__11578 = cljs.reader.read_char.call(null, rdr);
      ch__11577 = G__11578;
      continue
    }else {
      return ch__11577
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__11585 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__11586 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__11586)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__11586) {
      return cljs.core.persistent_BANG_.call(null, a__11585)
    }else {
      var temp__4090__auto____11587 = cljs.reader.macros.call(null, ch__11586);
      if(cljs.core.truth_(temp__4090__auto____11587)) {
        var macrofn__11588 = temp__4090__auto____11587;
        var mret__11589 = macrofn__11588.call(null, rdr, ch__11586);
        var G__11591 = mret__11589 === rdr ? a__11585 : cljs.core.conj_BANG_.call(null, a__11585, mret__11589);
        a__11585 = G__11591;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__11586);
        var o__11590 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__11592 = o__11590 === rdr ? a__11585 : cljs.core.conj_BANG_.call(null, a__11585, o__11590);
        a__11585 = G__11592;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__11597 = cljs.reader.read_char.call(null, rdr);
  var dm__11598 = cljs.reader.dispatch_macros.call(null, ch__11597);
  if(cljs.core.truth_(dm__11598)) {
    return dm__11598.call(null, rdr, _)
  }else {
    var temp__4090__auto____11599 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__11597);
    if(cljs.core.truth_(temp__4090__auto____11599)) {
      var obj__11600 = temp__4090__auto____11599;
      return obj__11600
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__11597)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__11602 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__11602))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__11602)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__11609 = new goog.string.StringBuffer(initch);
  var ch__11610 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto____11611 = ch__11610 == null;
      if(or__3943__auto____11611) {
        return or__3943__auto____11611
      }else {
        var or__3943__auto____11612 = cljs.reader.whitespace_QMARK_.call(null, ch__11610);
        if(or__3943__auto____11612) {
          return or__3943__auto____11612
        }else {
          return cljs.reader.macros.call(null, ch__11610)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__11610);
      var s__11613 = buffer__11609.toString();
      var or__3943__auto____11614 = cljs.reader.match_number.call(null, s__11613);
      if(cljs.core.truth_(or__3943__auto____11614)) {
        return or__3943__auto____11614
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__11613, "]")
      }
    }else {
      var G__11615 = function() {
        buffer__11609.append(ch__11610);
        return buffer__11609
      }();
      var G__11616 = cljs.reader.read_char.call(null, reader);
      buffer__11609 = G__11615;
      ch__11610 = G__11616;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__11619 = new goog.string.StringBuffer;
  var ch__11620 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__11620 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__11620) {
        var G__11621 = function() {
          buffer__11619.append(cljs.reader.escape_char.call(null, buffer__11619, reader));
          return buffer__11619
        }();
        var G__11622 = cljs.reader.read_char.call(null, reader);
        buffer__11619 = G__11621;
        ch__11620 = G__11622;
        continue
      }else {
        if('"' === ch__11620) {
          return buffer__11619.toString()
        }else {
          if("\ufdd0'default") {
            var G__11623 = function() {
              buffer__11619.append(ch__11620);
              return buffer__11619
            }();
            var G__11624 = cljs.reader.read_char.call(null, reader);
            buffer__11619 = G__11623;
            ch__11620 = G__11624;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__11626 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__11626, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__11626, 0, token__11626.indexOf("/")), cljs.core.subs.call(null, token__11626, token__11626.indexOf("/") + 1, token__11626.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__11626, cljs.core.symbol.call(null, token__11626))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__11636 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__11637 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__11636);
  var token__11638 = a__11637[0];
  var ns__11639 = a__11637[1];
  var name__11640 = a__11637[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto____11642 = function() {
      var and__3941__auto____11641 = !(void 0 === ns__11639);
      if(and__3941__auto____11641) {
        return ns__11639.substring(ns__11639.length - 2, ns__11639.length) === ":/"
      }else {
        return and__3941__auto____11641
      }
    }();
    if(cljs.core.truth_(or__3943__auto____11642)) {
      return or__3943__auto____11642
    }else {
      var or__3943__auto____11643 = name__11640[name__11640.length - 1] === ":";
      if(or__3943__auto____11643) {
        return or__3943__auto____11643
      }else {
        return!(token__11638.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__11638)
  }else {
    if(function() {
      var and__3941__auto____11644 = !(ns__11639 == null);
      if(and__3941__auto____11644) {
        return ns__11639.length > 0
      }else {
        return and__3941__auto____11644
      }
    }()) {
      return cljs.core.keyword.call(null, ns__11639.substring(0, ns__11639.indexOf("/")), name__11640)
    }else {
      return cljs.core.keyword.call(null, token__11638)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__11650 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__11650)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__11651 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__11652__11653 = o__11651;
    if(G__11652__11653) {
      if(function() {
        var or__3943__auto____11654 = G__11652__11653.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto____11654) {
          return or__3943__auto____11654
        }else {
          return G__11652__11653.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__11652__11653.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__11652__11653)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__11652__11653)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__11651, cljs.core.merge.call(null, cljs.core.meta.call(null, o__11651), m__11650))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__11658 = cljs.reader.read_char.call(null, reader);
    if(ch__11658 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__11658)) {
        var G__11661 = reader;
        var G__11662 = eof_is_error;
        var G__11663 = sentinel;
        var G__11664 = is_recursive;
        reader = G__11661;
        eof_is_error = G__11662;
        sentinel = G__11663;
        is_recursive = G__11664;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__11658)) {
          var G__11665 = cljs.reader.read_comment.call(null, reader, ch__11658);
          var G__11666 = eof_is_error;
          var G__11667 = sentinel;
          var G__11668 = is_recursive;
          reader = G__11665;
          eof_is_error = G__11666;
          sentinel = G__11667;
          is_recursive = G__11668;
          continue
        }else {
          if("\ufdd0'else") {
            var f__11659 = cljs.reader.macros.call(null, ch__11658);
            var res__11660 = cljs.core.truth_(f__11659) ? f__11659.call(null, reader, ch__11658) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__11658) ? cljs.reader.read_number.call(null, reader, ch__11658) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__11658) : null;
            if(res__11660 === reader) {
              var G__11669 = reader;
              var G__11670 = eof_is_error;
              var G__11671 = sentinel;
              var G__11672 = is_recursive;
              reader = G__11669;
              eof_is_error = G__11670;
              sentinel = G__11671;
              is_recursive = G__11672;
              continue
            }else {
              return res__11660
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__11674 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__11674, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__11676 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__11676.getLength() < width) {
            var G__11677 = b__11676.append("0");
            b__11676 = G__11677;
            continue
          }else {
            return b__11676.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto____11680 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto____11680)) {
    var or__3943__auto____11681 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto____11681)) {
      return or__3943__auto____11681
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto____11680
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__11686 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__11687 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__11687 : dim_norm__11686, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__11688 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__11690 = function(low, n, high, msg) {
    if(function() {
      var and__3941__auto____11689 = low <= n;
      if(and__3941__auto____11689) {
        return n <= high
      }else {
        return and__3941__auto____11689
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474, "\ufdd0'column", 25))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__4092__auto____11691 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__11688, ts)));
    if(cljs.core.truth_(temp__4092__auto____11691)) {
      var vec__11692__11695 = temp__4092__auto____11691;
      var vec__11693__11696 = cljs.core.nth.call(null, vec__11692__11695, 0, null);
      var ___11697 = cljs.core.nth.call(null, vec__11693__11696, 0, null);
      var years__11698 = cljs.core.nth.call(null, vec__11693__11696, 1, null);
      var months__11699 = cljs.core.nth.call(null, vec__11693__11696, 2, null);
      var days__11700 = cljs.core.nth.call(null, vec__11693__11696, 3, null);
      var hours__11701 = cljs.core.nth.call(null, vec__11693__11696, 4, null);
      var minutes__11702 = cljs.core.nth.call(null, vec__11693__11696, 5, null);
      var seconds__11703 = cljs.core.nth.call(null, vec__11693__11696, 6, null);
      var milliseconds__11704 = cljs.core.nth.call(null, vec__11693__11696, 7, null);
      var vec__11694__11705 = cljs.core.nth.call(null, vec__11692__11695, 1, null);
      var ___11706 = cljs.core.nth.call(null, vec__11694__11705, 0, null);
      var ___11707 = cljs.core.nth.call(null, vec__11694__11705, 1, null);
      var ___11708 = cljs.core.nth.call(null, vec__11694__11705, 2, null);
      var V__11709 = vec__11692__11695;
      var vec__11710__11713 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__11685_SHARP_) {
          return parseInt(p1__11685_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__11683_SHARP_, p2__11682_SHARP_) {
        return cljs.core.update_in.call(null, p2__11682_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__11683_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__11684_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__11684_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__11709));
      var vec__11711__11714 = cljs.core.nth.call(null, vec__11710__11713, 0, null);
      var ___11715 = cljs.core.nth.call(null, vec__11711__11714, 0, null);
      var y__11716 = cljs.core.nth.call(null, vec__11711__11714, 1, null);
      var mo__11717 = cljs.core.nth.call(null, vec__11711__11714, 2, null);
      var d__11718 = cljs.core.nth.call(null, vec__11711__11714, 3, null);
      var h__11719 = cljs.core.nth.call(null, vec__11711__11714, 4, null);
      var m__11720 = cljs.core.nth.call(null, vec__11711__11714, 5, null);
      var s__11721 = cljs.core.nth.call(null, vec__11711__11714, 6, null);
      var ms__11722 = cljs.core.nth.call(null, vec__11711__11714, 7, null);
      var vec__11712__11723 = cljs.core.nth.call(null, vec__11710__11713, 1, null);
      var offset_sign__11724 = cljs.core.nth.call(null, vec__11712__11723, 0, null);
      var offset_hours__11725 = cljs.core.nth.call(null, vec__11712__11723, 1, null);
      var offset_minutes__11726 = cljs.core.nth.call(null, vec__11712__11723, 2, null);
      var offset__11727 = offset_sign__11724 * (offset_hours__11725 * 60 + offset_minutes__11726);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__11698) ? 1970 : y__11716, cljs.core.not.call(null, months__11699) ? 1 : check__11690.call(null, 1, mo__11717, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__11700) ? 1 : check__11690.call(null, 1, d__11718, cljs.reader.days_in_month.call(null, mo__11717, cljs.reader.leap_year_QMARK_.call(null, y__11716)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__11701) ? 0 : check__11690.call(null, 0, h__11719, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__11702) ? 0 : check__11690.call(null, 0, m__11720, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__11703) ? 0 : check__11690.call(null, 0, s__11721, cljs.core._EQ_.call(null, m__11720, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__11704) ? 0 : check__11690.call(null, 
      0, ms__11722, 999, "timestamp millisecond field must be in range 0..999"), offset__11727], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto____11739 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto____11739)) {
    var vec__11740__11741 = temp__4090__auto____11739;
    var years__11742 = cljs.core.nth.call(null, vec__11740__11741, 0, null);
    var months__11743 = cljs.core.nth.call(null, vec__11740__11741, 1, null);
    var days__11744 = cljs.core.nth.call(null, vec__11740__11741, 2, null);
    var hours__11745 = cljs.core.nth.call(null, vec__11740__11741, 3, null);
    var minutes__11746 = cljs.core.nth.call(null, vec__11740__11741, 4, null);
    var seconds__11747 = cljs.core.nth.call(null, vec__11740__11741, 5, null);
    var ms__11748 = cljs.core.nth.call(null, vec__11740__11741, 6, null);
    var offset__11749 = cljs.core.nth.call(null, vec__11740__11741, 7, null);
    return new Date(Date.UTC(years__11742, months__11743 - 1, days__11744, hours__11745, minutes__11746, seconds__11747, ms__11748) - offset__11749 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__11753 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__4090__auto____11754 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__11753), null);
  if(cljs.core.truth_(temp__4090__auto____11754)) {
    var pfn__11755 = temp__4090__auto____11754;
    return pfn__11755.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__11753), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__11758 = cljs.core.name.call(null, tag);
  var old_parser__11759 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__11758, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__11758, f);
  return old_parser__11759
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__11762 = cljs.core.name.call(null, tag);
  var old_parser__11763 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__11762, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__11762);
  return old_parser__11763
};
goog.provide("ajax.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.structs");
goog.require("goog.events");
goog.require("goog.json.Serializer");
goog.require("goog.Uri.QueryData");
goog.require("goog.Uri");
goog.require("goog.net.XhrManager");
goog.require("goog.net.XhrIo");
ajax.core.AjaxImpl = {};
ajax.core._js_ajax_request = function _js_ajax_request(this$, uri, method, body, headers, handler, opts) {
  if(function() {
    var and__3941__auto____11245 = this$;
    if(and__3941__auto____11245) {
      return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7
    }else {
      return and__3941__auto____11245
    }
  }()) {
    return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7(this$, uri, method, body, headers, handler, opts)
  }else {
    var x__2306__auto____11246 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____11247 = ajax.core._js_ajax_request[goog.typeOf(x__2306__auto____11246)];
      if(or__3943__auto____11247) {
        return or__3943__auto____11247
      }else {
        var or__3943__auto____11248 = ajax.core._js_ajax_request["_"];
        if(or__3943__auto____11248) {
          return or__3943__auto____11248
        }else {
          throw cljs.core.missing_protocol.call(null, "AjaxImpl.-js-ajax-request", this$);
        }
      }
    }().call(null, this$, uri, method, body, headers, handler, opts)
  }
};
goog.net.XhrIo.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrIo.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__11249) {
  var map__11250__11251 = p__11249;
  var map__11250__11252 = cljs.core.seq_QMARK_.call(null, map__11250__11251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11250__11251) : map__11250__11251;
  var timeout__11253 = cljs.core._lookup.call(null, map__11250__11252, "\ufdd0'timeout", null);
  var G__11254__11255 = this$;
  goog.events.listen(G__11254__11255, goog.net.EventType.COMPLETE, handler);
  G__11254__11255.send(uri, method, body, headers, timeout__11253);
  return G__11254__11255
};
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__11256) {
  var map__11257__11258 = p__11256;
  var map__11257__11259 = cljs.core.seq_QMARK_.call(null, map__11257__11258) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11257__11258) : map__11257__11258;
  var max_retries__11260 = cljs.core._lookup.call(null, map__11257__11259, "\ufdd0'max-retries", null);
  var priority__11261 = cljs.core._lookup.call(null, map__11257__11259, "\ufdd0'priority", null);
  var timeout__11262 = cljs.core._lookup.call(null, map__11257__11259, "\ufdd0'timeout", null);
  var id__11263 = cljs.core._lookup.call(null, map__11257__11259, "\ufdd0'id", null);
  return this$.send(id__11263, uri, method, body, headers, priority__11261, handler, max_retries__11260)
};
ajax.core.success_QMARK_ = function success_QMARK_(status) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([status]), cljs.core.PersistentVector.fromArray([200, 201, 202, 204, 205, 206], true))
};
ajax.core.read_edn = function read_edn(xhrio) {
  return cljs.reader.read_string.call(null, xhrio.getResponseText())
};
ajax.core.edn_response_format = function edn_response_format() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'read", "\ufdd0'description"], {"\ufdd0'read":ajax.core.read_edn, "\ufdd0'description":"EDN"})
};
ajax.core.edn_request_format = function edn_request_format() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'write", "\ufdd0'content-type"], {"\ufdd0'write":cljs.core.pr_str, "\ufdd0'content-type":"application/edn"})
};
ajax.core.params_to_str = function params_to_str(params) {
  if(cljs.core.truth_(params)) {
    return goog.Uri.QueryData.createFromMap(new goog.structs.Map(ajax.core.clj__GT_js.call(null, params))).toString()
  }else {
    return null
  }
};
ajax.core.read_text = function read_text(xhrio) {
  return xhrio.getResponseText()
};
ajax.core.url_request_format = function url_request_format() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'write", "\ufdd0'content-type"], {"\ufdd0'write":ajax.core.params_to_str, "\ufdd0'content-type":"application/x-www-form-urlencoded"})
};
ajax.core.raw_response_format = function raw_response_format() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'read", "\ufdd0'description"], {"\ufdd0'read":ajax.core.read_text, "\ufdd0'description":"raw text"})
};
ajax.core.write_json = function write_json(data) {
  return(new goog.json.Serializer).serialize(ajax.core.clj__GT_js.call(null, data))
};
ajax.core.json_request_format = function json_request_format() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'write", "\ufdd0'content-type"], {"\ufdd0'write":ajax.core.write_json, "\ufdd0'content-type":"application/json"})
};
ajax.core.json_response_format = function json_response_format(p__11265) {
  var map__11273__11274 = p__11265;
  var map__11273__11275 = cljs.core.seq_QMARK_.call(null, map__11273__11274) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11273__11274) : map__11273__11274;
  var keywords_QMARK___11276 = cljs.core._lookup.call(null, map__11273__11275, "\ufdd0'keywords?", null);
  var prefix__11277 = cljs.core._lookup.call(null, map__11273__11275, "\ufdd0'prefix", null);
  return cljs.core.ObjMap.fromObject(["\ufdd0'read", "\ufdd0'description"], {"\ufdd0'read":function read_json(xhrio) {
    var json__11279 = xhrio.getResponseJson(prefix__11277);
    return cljs.core.js__GT_clj.call(null, json__11279, "\ufdd0'keywordize-keys", keywords_QMARK___11276)
  }, "\ufdd0'description":[cljs.core.str("JSON"), cljs.core.str(cljs.core.truth_(prefix__11277) ? [cljs.core.str(" prefix '"), cljs.core.str(prefix__11277), cljs.core.str("'")].join("") : null), cljs.core.str(cljs.core.truth_(keywords_QMARK___11276) ? " keywordize" : null)].join("")})
};
ajax.core.get_default_format = function get_default_format(xhrio) {
  var ct__11283 = xhrio.getResponseHeader("Content-Type");
  var format__11285 = cljs.core.truth_(function() {
    var and__3941__auto____11284 = ct__11283;
    if(cljs.core.truth_(and__3941__auto____11284)) {
      return ct__11283.indexOf("json") >= 0
    }else {
      return and__3941__auto____11284
    }
  }()) ? ajax.core.json_response_format.call(null, cljs.core.ObjMap.EMPTY) : ajax.core.edn_response_format.call(null);
  return cljs.core.update_in.call(null, format__11285, cljs.core.PersistentVector.fromArray(["\ufdd0'description"], true), function(p1__11264_SHARP_) {
    return[cljs.core.str(p1__11264_SHARP_), cljs.core.str(" (default)")].join("")
  })
};
ajax.core.use_content_type = function use_content_type(format) {
  return cljs.core.dissoc.call(null, format, "\ufdd0'write")
};
ajax.core.codec = function codec(request_format, p__11286) {
  var map__11293__11294 = p__11286;
  var map__11293__11295 = cljs.core.seq_QMARK_.call(null, map__11293__11294) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11293__11294) : map__11293__11294;
  var response_format__11296 = map__11293__11295;
  var description__11297 = cljs.core._lookup.call(null, map__11293__11295, "\ufdd0'description", null);
  var read__11298 = cljs.core._lookup.call(null, map__11293__11295, "\ufdd0'read", null);
  return cljs.core.assoc.call(null, request_format, "\ufdd0'read", read__11298, "\ufdd0'description", description__11297)
};
ajax.core.get_format = function get_format(format) {
  if(cljs.core.map_QMARK_.call(null, format)) {
    return format
  }else {
    if(cljs.core.ifn_QMARK_.call(null, format)) {
      return ajax.core.codec.call(null, ajax.core.url_request_format.call(null), cljs.core.ObjMap.fromObject(["\ufdd0'read", "\ufdd0'description"], {"\ufdd0'read":format, "\ufdd0'description":"custom"}))
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("unrecognized format: "), cljs.core.str(format)].join(""));
      }else {
        return null
      }
    }
  }
};
ajax.core.exception_response = function exception_response(e, status, p__11299, xhrio) {
  var map__11307__11308 = p__11299;
  var map__11307__11309 = cljs.core.seq_QMARK_.call(null, map__11307__11308) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11307__11308) : map__11307__11308;
  var description__11310 = cljs.core._lookup.call(null, map__11307__11309, "\ufdd0'description", null);
  var response__11311 = cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'response"], {"\ufdd0'status":status, "\ufdd0'response":null});
  var status_text__11312 = [cljs.core.str(e.message), cljs.core.str("  Format should have been "), cljs.core.str(description__11310)].join("");
  var parse_error__11313 = cljs.core.assoc.call(null, response__11311, "\ufdd0'status-text", status_text__11312, "\ufdd0'is-parse-error", true, "\ufdd0'original-text", xhrio.getResponseText());
  if(cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
    return parse_error__11313
  }else {
    return cljs.core.assoc.call(null, response__11311, "\ufdd0'status-text", xhrio.getStatusText(), "\ufdd0'parse-error", parse_error__11313)
  }
};
ajax.core.interpret_response = function interpret_response(format, response, get_default_format) {
  try {
    var xhrio__11325 = response.target;
    var status__11326 = xhrio__11325.getStatus();
    var format__11327 = cljs.core.truth_((new cljs.core.Keyword("\ufdd0'read")).call(null, format)) ? format : get_default_format.call(null, xhrio__11325);
    var parse__11328 = (new cljs.core.Keyword("\ufdd0'read")).call(null, format__11327);
    try {
      var response__11331 = parse__11328.call(null, xhrio__11325);
      if(cljs.core.truth_(ajax.core.success_QMARK_.call(null, status__11326))) {
        return cljs.core.PersistentVector.fromArray([true, response__11331], true)
      }else {
        return cljs.core.PersistentVector.fromArray([false, cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'status-text", "\ufdd0'response"], {"\ufdd0'status":status__11326, "\ufdd0'status-text":xhrio__11325.getStatusText(), "\ufdd0'response":response__11331})], true)
      }
    }catch(e11329) {
      if(cljs.core.instance_QMARK_.call(null, Object, e11329)) {
        var e__11330 = e11329;
        return cljs.core.PersistentVector.fromArray([false, ajax.core.exception_response.call(null, e__11330, status__11326, format__11327, xhrio__11325)], true)
      }else {
        if("\ufdd0'else") {
          throw e11329;
        }else {
          return null
        }
      }
    }
  }catch(e11323) {
    if(cljs.core.instance_QMARK_.call(null, Object, e11323)) {
      var e__11324 = e11323;
      return cljs.core.PersistentVector.fromArray([false, cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'status-text", "\ufdd0'response"], {"\ufdd0'status":0, "\ufdd0'status-text":e__11324.message, "\ufdd0'response":null})], true)
    }else {
      if("\ufdd0'else") {
        throw e11323;
      }else {
        return null
      }
    }
  }
};
ajax.core.no_format = function no_format(xhrio) {
  throw new Error("No response format was supplied.");
};
ajax.core.uri_with_params = function uri_with_params(uri, params) {
  if(cljs.core.truth_(params)) {
    return[cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(ajax.core.params_to_str.call(null, params))].join("")
  }else {
    return uri
  }
};
ajax.core.process_inputs = function process_inputs(uri, method, p__11332, p__11333) {
  var map__11354__11356 = p__11332;
  var map__11354__11357 = cljs.core.seq_QMARK_.call(null, map__11354__11356) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11354__11356) : map__11354__11356;
  var format__11358 = map__11354__11357;
  var content_type__11359 = cljs.core._lookup.call(null, map__11354__11357, "\ufdd0'content-type", null);
  var write__11360 = cljs.core._lookup.call(null, map__11354__11357, "\ufdd0'write", null);
  var map__11355__11361 = p__11333;
  var map__11355__11362 = cljs.core.seq_QMARK_.call(null, map__11355__11361) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11355__11361) : map__11355__11361;
  var headers__11363 = cljs.core._lookup.call(null, map__11355__11362, "\ufdd0'headers", null);
  var params__11364 = cljs.core._lookup.call(null, map__11355__11362, "\ufdd0'params", null);
  if(cljs.core._EQ_.call(null, method, "GET")) {
    return cljs.core.PersistentVector.fromArray([ajax.core.uri_with_params.call(null, uri, params__11364), null, headers__11363], true)
  }else {
    var map__11365__11366 = format__11358;
    var map__11365__11367 = cljs.core.seq_QMARK_.call(null, map__11365__11366) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11365__11366) : map__11365__11366;
    var content_type__11368 = cljs.core._lookup.call(null, map__11365__11367, "\ufdd0'content-type", null);
    var write__11369 = cljs.core._lookup.call(null, map__11365__11367, "\ufdd0'write", null);
    var body__11370 = write__11369.call(null, params__11364);
    var content_type__11371 = cljs.core.truth_(content_type__11368) ? cljs.core.ObjMap.fromObject(["Content-Type"], {"Content-Type":content_type__11368}) : null;
    var headers__11373 = cljs.core.merge.call(null, function() {
      var or__3943__auto____11372 = headers__11363;
      if(cljs.core.truth_(or__3943__auto____11372)) {
        return or__3943__auto____11372
      }else {
        return cljs.core.ObjMap.EMPTY
      }
    }(), content_type__11371);
    return cljs.core.PersistentVector.fromArray([uri, body__11370, headers__11373], true)
  }
};
ajax.core.normalize_method = function normalize_method(method) {
  if(cljs.core.keyword_QMARK_.call(null, method)) {
    return clojure.string.upper_case.call(null, cljs.core.name.call(null, method))
  }else {
    return method
  }
};
ajax.core.base_handler = function base_handler(format, p__11374) {
  var map__11381__11382 = p__11374;
  var map__11381__11383 = cljs.core.seq_QMARK_.call(null, map__11381__11382) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11381__11382) : map__11381__11382;
  var get_default_format__11384 = cljs.core._lookup.call(null, map__11381__11383, "\ufdd0'get-default-format", null);
  var handler__11385 = cljs.core._lookup.call(null, map__11381__11383, "\ufdd0'handler", null);
  return function(xhrio) {
    return handler__11385.call(null, ajax.core.interpret_response.call(null, format, xhrio, function() {
      var or__3943__auto____11386 = get_default_format__11384;
      if(cljs.core.truth_(or__3943__auto____11386)) {
        return or__3943__auto____11386
      }else {
        return ajax.core.no_format
      }
    }()))
  }
};
ajax.core.ajax_request = function() {
  var ajax_request = null;
  var ajax_request__3 = function(uri, method, opts) {
    return ajax_request.call(null, uri, method, opts, new goog.net.XhrIo)
  };
  var ajax_request__4 = function(uri, method, p__11387, js_ajax) {
    var map__11401__11402 = p__11387;
    var map__11401__11403 = cljs.core.seq_QMARK_.call(null, map__11401__11402) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11401__11402) : map__11401__11402;
    var opts__11404 = map__11401__11403;
    var format__11405 = cljs.core._lookup.call(null, map__11401__11403, "\ufdd0'format", null);
    var format__11407 = ajax.core.get_format.call(null, format__11405);
    var method__11408 = ajax.core.normalize_method.call(null, method);
    var vec__11406__11409 = ajax.core.process_inputs.call(null, uri, method__11408, format__11407, opts__11404);
    var uri__11410 = cljs.core.nth.call(null, vec__11406__11409, 0, null);
    var body__11411 = cljs.core.nth.call(null, vec__11406__11409, 1, null);
    var headers__11412 = cljs.core.nth.call(null, vec__11406__11409, 2, null);
    var handler__11413 = ajax.core.base_handler.call(null, format__11407, opts__11404);
    return ajax.core._js_ajax_request.call(null, js_ajax, uri__11410, method__11408, body__11411, ajax.core.clj__GT_js.call(null, headers__11412), handler__11413, opts__11404)
  };
  ajax_request = function(uri, method, p__11387, js_ajax) {
    switch(arguments.length) {
      case 3:
        return ajax_request__3.call(this, uri, method, p__11387);
      case 4:
        return ajax_request__4.call(this, uri, method, p__11387, js_ajax)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax_request.cljs$lang$arity$3 = ajax_request__3;
  ajax_request.cljs$lang$arity$4 = ajax_request__4;
  return ajax_request
}();
ajax.core.json_format = function json_format(format_params) {
  return ajax.core.codec.call(null, ajax.core.json_request_format.call(null), ajax.core.json_response_format.call(null, format_params))
};
ajax.core.edn_format = function edn_format() {
  return ajax.core.codec.call(null, ajax.core.edn_request_format.call(null), ajax.core.edn_response_format.call(null))
};
ajax.core.raw_format = function raw_format() {
  return ajax.core.codec.call(null, ajax.core.url_request_format.call(null), ajax.core.raw_response_format.call(null))
};
ajax.core.keyword_request_format = function keyword_request_format(format, format_params) {
  var G__11416__11417 = format;
  if(cljs.core._EQ_.call(null, "\ufdd0'url", G__11416__11417)) {
    return ajax.core.url_request_format.call(null)
  }else {
    if(cljs.core._EQ_.call(null, "\ufdd0'raw", G__11416__11417)) {
      return ajax.core.url_request_format.call(null)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'edn", G__11416__11417)) {
        return ajax.core.edn_request_format.call(null)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'json", G__11416__11417)) {
          return ajax.core.json_request_format.call(null)
        }else {
          if("\ufdd0'else") {
            throw new Error([cljs.core.str("unrecognized request format: "), cljs.core.str(format)].join(""));
          }else {
            return null
          }
        }
      }
    }
  }
};
ajax.core.keyword_response_format = function keyword_response_format(format, format_params) {
  var G__11420__11421 = format;
  if(cljs.core._EQ_.call(null, "\ufdd0'raw", G__11420__11421)) {
    return ajax.core.raw_response_format.call(null)
  }else {
    if(cljs.core._EQ_.call(null, "\ufdd0'edn", G__11420__11421)) {
      return ajax.core.edn_response_format.call(null)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'json", G__11420__11421)) {
        return ajax.core.json_response_format.call(null, format_params)
      }else {
        if("\ufdd0'else") {
          return null
        }else {
          return null
        }
      }
    }
  }
};
ajax.core.transform_handler = function transform_handler(p__11422) {
  var map__11441__11442 = p__11422;
  var map__11441__11443 = cljs.core.seq_QMARK_.call(null, map__11441__11442) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11441__11442) : map__11441__11442;
  var error_handler__11444 = cljs.core._lookup.call(null, map__11441__11443, "\ufdd0'error-handler", null);
  var handler__11445 = cljs.core._lookup.call(null, map__11441__11443, "\ufdd0'handler", null);
  return function easy_handler(p__11446) {
    var vec__11453__11454 = p__11446;
    var ok__11455 = cljs.core.nth.call(null, vec__11453__11454, 0, null);
    var result__11456 = cljs.core.nth.call(null, vec__11453__11454, 1, null);
    var temp__4090__auto____11457 = cljs.core.truth_(ok__11455) ? handler__11445 : error_handler__11444;
    if(cljs.core.truth_(temp__4090__auto____11457)) {
      var h__11458 = temp__4090__auto____11457;
      return h__11458.call(null, result__11456)
    }else {
      return null
    }
  }
};
ajax.core.transform_format = function transform_format(p__11459) {
  var map__11467__11468 = p__11459;
  var map__11467__11469 = cljs.core.seq_QMARK_.call(null, map__11467__11468) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11467__11468) : map__11467__11468;
  var opts__11470 = map__11467__11469;
  var response_format__11471 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'response-format", null);
  var format__11472 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'format", null);
  var rf__11473 = ajax.core.keyword_response_format.call(null, response_format__11471, opts__11470);
  if(format__11472 == null) {
    return ajax.core.codec.call(null, ajax.core.edn_request_format.call(null), rf__11473)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, format__11472)) {
      return ajax.core.codec.call(null, ajax.core.keyword_request_format.call(null, format__11472, opts__11470), rf__11473)
    }else {
      if("\ufdd0'else") {
        return format__11472
      }else {
        return null
      }
    }
  }
};
ajax.core.transform_opts = function transform_opts(opts) {
  return cljs.core.assoc.call(null, opts, "\ufdd0'handler", ajax.core.transform_handler.call(null, opts), "\ufdd0'format", ajax.core.transform_format.call(null, opts), "\ufdd0'get-default-format", ajax.core.get_default_format)
};
ajax.core.GET = function() {
  var GET__delegate = function(uri, p__11474) {
    var vec__11478__11479 = p__11474;
    var opts__11480 = cljs.core.nth.call(null, vec__11478__11479, 0, null);
    return ajax.core.ajax_request.call(null, uri, "GET", ajax.core.transform_opts.call(null, opts__11480))
  };
  var GET = function(uri, var_args) {
    var p__11474 = null;
    if(goog.isDef(var_args)) {
      p__11474 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return GET__delegate.call(this, uri, p__11474)
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__11481) {
    var uri = cljs.core.first(arglist__11481);
    var p__11474 = cljs.core.rest(arglist__11481);
    return GET__delegate(uri, p__11474)
  };
  GET.cljs$lang$arity$variadic = GET__delegate;
  return GET
}();
ajax.core.POST = function() {
  var POST__delegate = function(uri, p__11482) {
    var vec__11486__11487 = p__11482;
    var opts__11488 = cljs.core.nth.call(null, vec__11486__11487, 0, null);
    return ajax.core.ajax_request.call(null, uri, "POST", ajax.core.transform_opts.call(null, opts__11488))
  };
  var POST = function(uri, var_args) {
    var p__11482 = null;
    if(goog.isDef(var_args)) {
      p__11482 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return POST__delegate.call(this, uri, p__11482)
  };
  POST.cljs$lang$maxFixedArity = 1;
  POST.cljs$lang$applyTo = function(arglist__11489) {
    var uri = cljs.core.first(arglist__11489);
    var p__11482 = cljs.core.rest(arglist__11489);
    return POST__delegate(uri, p__11482)
  };
  POST.cljs$lang$arity$variadic = POST__delegate;
  return POST
}();
goog.provide("echowaves");
goog.require("cljs.core");
goog.require("domina.events");
goog.require("domina.css");
goog.require("domina");
goog.require("ajax.core");
goog.require("ajax.core");
goog.require("domina.css");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.dom");
echowaves.handle_response = function handle_response(response) {
  var errors__7219 = new goog.string.StringBuffer("");
  var G__7220__7221 = cljs.core.seq.call(null, response);
  if(G__7220__7221) {
    var G__7223__7225 = cljs.core.first.call(null, G__7220__7221);
    var map__7224__7226 = G__7223__7225;
    var map__7224__7227 = cljs.core.seq_QMARK_.call(null, map__7224__7226) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7224__7226) : map__7224__7226;
    var status__7228 = cljs.core._lookup.call(null, map__7224__7227, "\ufdd0'status", null);
    var name__7229 = cljs.core._lookup.call(null, map__7224__7227, "\ufdd0'name", null);
    var G__7220__7230 = G__7220__7221;
    var G__7223__7231 = G__7223__7225;
    var G__7220__7232 = G__7220__7230;
    while(true) {
      var map__7233__7234 = G__7223__7231;
      var map__7233__7235 = cljs.core.seq_QMARK_.call(null, map__7233__7234) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7233__7234) : map__7233__7234;
      var status__7236 = cljs.core._lookup.call(null, map__7233__7235, "\ufdd0'status", null);
      var name__7237 = cljs.core._lookup.call(null, map__7233__7235, "\ufdd0'name", null);
      var G__7220__7238 = G__7220__7232;
      if(cljs.core._EQ_.call(null, "ok", status__7236)) {
        goog.dom.removeNode(domina.by_id.call(null, name__7237).parentNode.parentNode)
      }else {
        errors__7219.append([cljs.core.str("<li>failed to remove "), cljs.core.str(name__7237), cljs.core.str(": "), cljs.core.str(status__7236), cljs.core.str("</li>")].join(""))
      }
      var temp__4092__auto____7239 = cljs.core.next.call(null, G__7220__7238);
      if(temp__4092__auto____7239) {
        var G__7220__7240 = temp__4092__auto____7239;
        var G__7242 = cljs.core.first.call(null, G__7220__7240);
        var G__7243 = G__7220__7240;
        G__7223__7231 = G__7242;
        G__7220__7232 = G__7243;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var error_str__7241 = [cljs.core.str("<ul>"), cljs.core.str(errors__7219.toString()), cljs.core.str("</ul>")].join("");
  if(cljs.core.truth_(cljs.core.not_empty.call(null, error_str__7241))) {
    return domina.append_BANG_.call(null, domina.by_id.call(null, "error"), error_str__7241)
  }else {
    return null
  }
};
echowaves.find_selected = function find_selected() {
  return cljs.core.not_empty.call(null, cljs.core.map.call(null, function(p1__7195_SHARP_) {
    return p1__7195_SHARP_.name
  }, domina.nodes.call(null, domina.css.sel.call(null, "input:checked"))))
};
echowaves.deleteImages = function deleteImages(_) {
  var temp__4090__auto____7246 = echowaves.find_selected.call(null);
  if(cljs.core.truth_(temp__4090__auto____7246)) {
    var selected__7247 = temp__4090__auto____7246;
    return ajax.core.POST.call(null, "/delete", cljs.core.ObjMap.fromObject(["\ufdd0'params", "\ufdd0'handler"], {"\ufdd0'params":cljs.core.ObjMap.fromObject(["\ufdd0'names"], {"\ufdd0'names":selected__7247}), "\ufdd0'handler":echowaves.handle_response}))
  }else {
    return alert("no images selected")
  }
};
echowaves.init = function init() {
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "delete"), "\ufdd0'click", echowaves.deleteImages)
};
goog.exportSymbol("echowaves.init", echowaves.init);
